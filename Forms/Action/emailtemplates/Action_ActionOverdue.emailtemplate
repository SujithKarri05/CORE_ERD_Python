<?xml version="1.0" encoding="utf-8"?>
<PredefinedEmailTemplate xmlns="http://ebms.com.au/schema/interchange/1.1">
  <EForm>Action</EForm>
  <Name>Action Overdue</Name>
  <Description>Triggered by Settings - Automation (disabled)</Description>
  <ContentTemplate>
    <ToAddressesTemplate>{LET $targetUsers := 
HASH_GET(
  ARRAY_INDEX($eventargs, 2), 
  "Target Form"
); 

LET $systemRoles := 
HASH_GET(
  ARRAY_INDEX($eventargs, 2), 
  "System Roles"
);

LET $staticEmailAddresses := 
HASH_GET(
  ARRAY_INDEX($eventargs, 2), 
  "Static Email Addresses"
);

LET $extractEmailAddressesfromArray := $(array)
(
	ARRAY_JOIN(
		ARRAY_SELECT(
			$array, $(i, item) 
			EBMS_GET_ROLE_EMAIL_ADDRESSES(ROLE($item))
		), "," 
	)
);

LET $targetEmails := 
ARRAY_SELECT(
    $targetUsers,	$(i, item)
	
	LET $user := IFERROR(EVALUATE("[" &amp; $item &amp; "]"), NULL()); 
			
	LET $email :=
	IF(
	  $user &lt;&gt; NULL(), 
	  EBMS_GET_ROLE_EMAIL_ADDRESSES(ROLE($user))
	);
	
	RETURN 
	IF(
		ISARRAY($user), 
		CALL($extractEmailAddressesfromArray, $user),
		$email
	)
); 

LET $roleEmails := 
ARRAY_SELECT(
    $systemRoles, $(i, item)

	LET $email :=
	IF(
	  $item &lt;&gt; NULL(), 
	  EBMS_GET_ROLE_EMAIL_ADDRESSES($item)
	);
	
	RETURN 
	IF(
		ISARRAY($item), 
		CALL($extractEmailAddressesfromArray, $item),
		$email
	)
); 

LET $combined := 
ARRAY_CONCAT(
$targetEmails,
$roleEmails,
ARRAY($staticEmailAddresses)
);

RETURN 
ARRAY_JOIN(
ARRAY_WHERE($combined, $(i, item) $item &lt;&gt; NULL())
 , ", "
)}</ToAddressesTemplate>
    <CcAddressesTemplate>{LET $targetUsers := 
HASH_GET(
  ARRAY_INDEX($eventargs, 2), 
  "Cc Target Form"
); 

LET $systemRoles := 
HASH_GET(
  ARRAY_INDEX($eventargs, 2), 
  "Cc System Roles"
);

LET $staticEmailAddresses := 
HASH_GET(
  ARRAY_INDEX($eventargs, 2), 
  "Cc Static Email Addresses"
);

LET $extractEmailAddressesfromArray := $(array)
(
	ARRAY_JOIN(
		ARRAY_SELECT(
			$array, $(i, item) 
			EBMS_GET_ROLE_EMAIL_ADDRESSES(ROLE($item))
		), "," 
	)
);

LET $targetEmails := 
ARRAY_SELECT(
    $targetUsers,	$(i, item)
	
	LET $user := IFERROR(EVALUATE("[" &amp; $item &amp; "]"), NULL()); 
			
	LET $email :=
	IF(
	  $user &lt;&gt; NULL(), 
	  EBMS_GET_ROLE_EMAIL_ADDRESSES(ROLE($user))
	);
	
	RETURN 
	IF(
		ISARRAY($user), 
		CALL($extractEmailAddressesfromArray, $user),
		$email
	)
); 

LET $roleEmails := 
ARRAY_SELECT(
    $systemRoles, $(i, item)

	LET $email :=
	IF(
	  $item &lt;&gt; NULL(), 
	  EBMS_GET_ROLE_EMAIL_ADDRESSES($item)
	);
	
	RETURN 
	IF(
		ISARRAY($item), 
		CALL($extractEmailAddressesfromArray, $item),
		$email
	)
); 

LET $combined := 
ARRAY_CONCAT(
$targetEmails,
$roleEmails,
ARRAY($staticEmailAddresses)
);

RETURN 
ARRAY_JOIN(
ARRAY_WHERE($combined, $(i, item) $item &lt;&gt; NULL())
 , ", "
)}</CcAddressesTemplate>
    <BccAddressesTemplate>{LET $targetUsers := 
HASH_GET(
  ARRAY_INDEX($eventargs, 2), 
  "Bcc Target Form"
); 

LET $systemRoles := 
HASH_GET(
  ARRAY_INDEX($eventargs, 2), 
  "Bcc System Roles"
);

LET $staticEmailAddresses := 
HASH_GET(
  ARRAY_INDEX($eventargs, 2), 
  "Bcc Static Email Addresses"
);

LET $extractEmailAddressesfromArray := $(array)
(
	ARRAY_JOIN(
		ARRAY_SELECT(
			$array, $(i, item) 
			EBMS_GET_ROLE_EMAIL_ADDRESSES(ROLE($item))
		), "," 
	)
);

LET $targetEmails := 
ARRAY_SELECT(
    $targetUsers,	$(i, item)
	
	LET $user := IFERROR(EVALUATE("[" &amp; $item &amp; "]"), NULL()); 
			
	LET $email :=
	IF(
	  $user &lt;&gt; NULL(), 
	  EBMS_GET_ROLE_EMAIL_ADDRESSES(ROLE($user))
	);
	
	RETURN 
	IF(
		ISARRAY($user), 
		CALL($extractEmailAddressesfromArray, $user),
		$email
	)
); 

LET $roleEmails := 
ARRAY_SELECT(
    $systemRoles, $(i, item)

	LET $email :=
	IF(
	  $item &lt;&gt; NULL(), 
	  EBMS_GET_ROLE_EMAIL_ADDRESSES($item)
	);
	
	RETURN 
	IF(
		ISARRAY($item), 
		CALL($extractEmailAddressesfromArray, $item),
		$email
	)
); 

LET $combined := 
ARRAY_CONCAT(
$targetEmails,
$roleEmails,
ARRAY($staticEmailAddresses)
);

RETURN 
ARRAY_JOIN(
ARRAY_WHERE($combined, $(i, item) $item &lt;&gt; NULL())
 , ", "
)}</BccAddressesTemplate>
    <ReplyToAddressesTemplate>{LET $targetUsers := 
HASH_GET(
  ARRAY_INDEX($eventargs, 2), 
  "ReplyTo Target Form"
); 

LET $systemRoles := 
HASH_GET(
  ARRAY_INDEX($eventargs, 2), 
  "ReplyTo System Roles"
);

LET $staticEmailAddresses := 
HASH_GET(
  ARRAY_INDEX($eventargs, 2), 
  "ReplyTo Static Email Addresses"
);

LET $extractEmailAddressesfromArray := $(array)
(
	ARRAY_JOIN(
		ARRAY_SELECT(
			$array, $(i, item) 
			EBMS_GET_ROLE_EMAIL_ADDRESSES(ROLE($item))
		), "," 
	)
);

LET $targetEmails := 
ARRAY_SELECT(
    $targetUsers,	$(i, item)
	
	LET $user := IFERROR(EVALUATE("[" &amp; $item &amp; "]"), NULL()); 
			
	LET $email :=
	IF(
	  $user &lt;&gt; NULL(), 
	  EBMS_GET_ROLE_EMAIL_ADDRESSES(ROLE($user))
	);
	
	RETURN 
	IF(
		ISARRAY($user), 
		CALL($extractEmailAddressesfromArray, $user),
		$email
	)
); 

LET $roleEmails := 
ARRAY_SELECT(
    $systemRoles, $(i, item)

	LET $email :=
	IF(
	  $item &lt;&gt; NULL(), 
	  EBMS_GET_ROLE_EMAIL_ADDRESSES($item)
	);
	
	RETURN 
	IF(
		ISARRAY($item), 
		CALL($extractEmailAddressesfromArray, $item),
		$email
	)
); 

LET $combined := 
ARRAY_CONCAT(
$targetEmails,
$roleEmails,
ARRAY($staticEmailAddresses)
);

RETURN 
ARRAY_JOIN(
ARRAY_WHERE($combined, $(i, item) $item &lt;&gt; NULL())
 , ", "
)}</ReplyToAddressesTemplate>
    <SubjectTemplate>Action Overdue</SubjectTemplate>
    <BodyTemplate>&lt;style&gt;
.nimblex-core-css-table {{color: #333; background: white; border: 1px solid grey; font-size: 12pt;  border-collapse: collapse;}}
.nimblex-core-css-table th {{background: #efefef; text-align:left; padding: .5em; border: 1px solid lightgrey;}}
.nimblex-core-css-table td {{padding: .5em; border: 1px solid lightgrey;}}
.nimblex-core-css-h2 {{color: #007db4;}}
&lt;/style&gt;
Hello there,&lt;br /&gt;&lt;br /&gt;
An action is overdue. &lt;br /&gt;
&lt;br /&gt;
&lt;table class="nimblex-core-css-table"&gt;
  &lt;tr&gt;
	  &lt;th&gt;Action&lt;/th&gt;
	  &lt;td&gt;{HTMLENCODE([Action])}&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
	  &lt;th&gt;Date Due&lt;/th&gt;
	  &lt;td&gt;{HTMLENCODE([Date Due])}&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
	  &lt;th&gt;Responsible&lt;/th&gt;
	  &lt;td&gt;{HTMLENCODE([Responsible Text])}&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
	  &lt;th&gt;Details&lt;/th&gt;
	  &lt;td&gt;{HTMLENCODE([Details])}&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;a href="{HTMLENCODE(EBMS_GET_EFORMRECORD_URL([EFormType], [RecordID]) )}"&gt;Click here&lt;/a&gt; to view the Action record.&lt;br&gt;
&lt;h2 class="nimblex-core-css-h2"&gt;What to do next&lt;/h2&gt;
Once the action has been completed change the status on the record to &amp;#39;Complete&amp;#39;. If the action cannot be completed and needs to be delayed then a new due date can be specified which will also delay any further reminders.&lt;br /&gt;
&lt;br&gt;
&lt;br&gt;
Thanks,&lt;br&gt;
The VendorPanel Team&lt;/p&gt;</BodyTemplate>
    <IsBodyHtml>true</IsBodyHtml>
    <UseDefaultFrame>true</UseDefaultFrame>
  </ContentTemplate>
  <AttachedFileGenerators>
    <FormulaDriven>
      <FileDefinitionsFormula>LET $pdf := 
HASH_GET(
  ARRAY_INDEX($eventargs, 2), 
  "Record PDF"
); 

LET $file :=
HASH_GET(
  ARRAY_INDEX($eventargs, 2), 
  "Record File"
);

//Generates a pdf of the context record
LET $recordpdf :=
IF(
	$pdf&lt;&gt; NULL(),
		HASH(
			"type", "recordspdf",
			"filename", [EFormType]&amp;"-"&amp;[RecordID]&amp; ".pdf",
			"records", ARRAY(ARRAY(EFormType, RecordID, $pdf)),
		  	"cid", NEWUUID()
		),
	NULL()
);

//Generates all files attached to a record folder
LET $recordfile :=
IF(
	$file &lt;&gt; NULL(),
		HASH( 
			"type", "record", 
			"eformtype", [EFormType], 
			"recordid", [RecordID], 
			"path", $file,			//Points to the folder of context record
			"allinfolder", TRUE,
		  	"cid", NEWUUID() 
		),
	NULL()
);

RETURN 
ARRAY_WHERE(
	ARRAY($recordpdf, $recordfile),
	$(i,item) $item &lt;&gt; NULL()
)</FileDefinitionsFormula>
    </FormulaDriven>
  </AttachedFileGenerators>
</PredefinedEmailTemplate>