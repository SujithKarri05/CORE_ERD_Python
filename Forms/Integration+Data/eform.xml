<?xml version="1.0" encoding="utf-8"?>
<EForm xmlns="http://ebms.com.au/schema/interchange/1.1">
  <Description>Integration</Description>
  <DataDefinition>
    <MinimumRows>0</MinimumRows>
    <Columns>
      <SystemColumn Which="EFormType" Behaviour="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </SystemColumn>
      <SystemColumn Which="RecordID" Behaviour="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format>
          <Number DecimalPlaces="" Prefix="" Suffix="" ThousandsSeparator="false" ScientificNotation="false" />
        </Format>
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </SystemColumn>
      <SystemColumn Which="LineNumber" Behaviour="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format>
          <Number DecimalPlaces="" Prefix="" Suffix="" ThousandsSeparator="false" ScientificNotation="false" />
        </Format>
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </SystemColumn>
      <SystemColumn Which="DateCreated" Behaviour="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format>
          <DateTime FormatString="dd-MMM-yyyy hh:mm tt" />
        </Format>
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </SystemColumn>
      <SystemColumn Which="DateLastUpdated" Behaviour="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format>
          <DateTime FormatString="dd-MMM-yyyy" />
        </Format>
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </SystemColumn>
      <SystemColumn Which="DateDue" Behaviour="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format>
          <DateTime FormatString="dd-MMM-yyyy" />
        </Format>
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </SystemColumn>
      <SystemColumn Which="DateClosed" Behaviour="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format>
          <DateTime FormatString="dd-MMM-yyyy" />
        </Format>
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </SystemColumn>
      <SystemColumn Which="Priority" Behaviour="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="0-Unassigned" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </SystemColumn>
      <SystemColumn Which="Status" Behaviour="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="Start" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </SystemColumn>
      <SystemColumn Which="Assignee" Behaviour="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </SystemColumn>
      <SystemColumn Which="Sender" Behaviour="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </SystemColumn>
      <SystemColumn Which="Originator" Behaviour="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </SystemColumn>
      <SystemColumn Which="Description" Behaviour="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </SystemColumn>
      <SystemColumn Which="WasRejected" Behaviour="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </SystemColumn>
      <Column Name="Raw" DataType="Any" Guid="3673a7ec-bbc3-4dd9-9247-07e3ed2d9d48" IsHeader="true" IsMandatory="false" IsPartOfUniqueKey="false" IsPersistent="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <AccessControlGroupMemberships />
        <AccessControlGroups />
        <Security OverrideEFormPermissions="false">
          <Roles />
        </Security>
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </Column>
      <Column Name="Params" DataType="Any" Guid="99dd6218-8609-4f8b-a708-2707293a9a0e" IsHeader="true" IsMandatory="false" IsPartOfUniqueKey="false" IsPersistent="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <AccessControlGroupMemberships />
        <AccessControlGroups />
        <Security OverrideEFormPermissions="false">
          <Roles />
        </Security>
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </Column>
      <Column Name="Integration Authentication" DataType="String" Guid="59be48c4-7772-450c-a5a9-c70f571a8815" IsHeader="true" IsMandatory="false" IsPartOfUniqueKey="false" IsPersistent="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <AccessControlGroupMemberships />
        <AccessControlGroups />
        <Security OverrideEFormPermissions="false">
          <Roles />
        </Security>
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </Column>
      <Column Name="Integration Workflow" DataType="String" Guid="fedf4a42-746e-441a-8ede-03a15ef57583" IsHeader="true" IsMandatory="false" IsPartOfUniqueKey="false" IsPersistent="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <AccessControlGroupMemberships />
        <AccessControlGroups />
        <Security OverrideEFormPermissions="false">
          <Roles />
        </Security>
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </Column>
      <Column Name="Temp" DataType="Any" Guid="e3caa38f-4776-4a59-b40f-fce74fa4c8e2" IsHeader="true" IsMandatory="false" IsPartOfUniqueKey="false" IsPersistent="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <AccessControlGroupMemberships />
        <AccessControlGroups />
        <Security OverrideEFormPermissions="false">
          <Roles />
        </Security>
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </Column>
      <Column Name="Return Value" DataType="Any" Guid="c9a05cac-ab38-418f-ba6f-122fb33214c3" IsHeader="true" IsMandatory="false" IsPartOfUniqueKey="false" IsPersistent="false" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <AccessControlGroupMemberships />
        <AccessControlGroups />
        <Security OverrideEFormPermissions="false">
          <Roles />
        </Security>
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </Column>
      <Column Name="Data Processed" DataType="Boolean" Guid="21a3c71b-9113-421e-b081-10c939adeed4" IsHeader="true" IsMandatory="false" IsPartOfUniqueKey="false" IsPersistent="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="FALSE" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <AccessControlGroupMemberships />
        <AccessControlGroups />
        <Security OverrideEFormPermissions="false">
          <Roles />
        </Security>
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </Column>
      <Column Name="Data Needs Processing" DataType="Boolean" Guid="774f2b3f-bfa6-4082-84ba-da907111d99d" IsHeader="true" IsMandatory="false" IsPartOfUniqueKey="false" IsPersistent="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="FALSE" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <AccessControlGroupMemberships />
        <AccessControlGroups />
        <Security OverrideEFormPermissions="false">
          <Roles />
        </Security>
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </Column>
      <Column Name="Created By" DataType="String" Guid="3d831f00-c77f-4aac-8da6-66d1a780251c" IsHeader="true" IsMandatory="false" IsPartOfUniqueKey="false" IsPersistent="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <AccessControlGroupMemberships />
        <AccessControlGroups />
        <Security OverrideEFormPermissions="false">
          <Roles />
        </Security>
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </Column>
      <Column Name="Email Content" DataType="String" Guid="490b8937-b78e-47b6-abbb-b24dcd3034d5" IsHeader="true" IsMandatory="false" IsPartOfUniqueKey="false" IsPersistent="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <AccessControlGroupMemberships />
        <AccessControlGroups />
        <Security OverrideEFormPermissions="false">
          <Roles />
        </Security>
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </Column>
      <Column Name="Temp 2" DataType="Any" Guid="50425695-1157-4f56-a5e5-f4849f2cb257" IsHeader="true" IsMandatory="false" IsPartOfUniqueKey="false" IsPersistent="false" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <AccessControlGroupMemberships />
        <AccessControlGroups />
        <Security OverrideEFormPermissions="false">
          <Roles />
        </Security>
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </Column>
      <Column Name="Integration Alert Recipient" DataType="String" Guid="efb50b64-2199-48e9-8fb4-9ea0a67e10e1" IsHeader="true" IsMandatory="false" IsPartOfUniqueKey="false" IsPersistent="true" ValidationFormula="" ValidationTags="" Formula="HASH_GET([Integration Settings Data], &quot;Integration Alert Recipient&quot;)" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <AccessControlGroupMemberships />
        <AccessControlGroups />
        <Security OverrideEFormPermissions="false">
          <Roles />
        </Security>
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </Column>
      <Column Name="Temp Length" DataType="Number" Guid="42fcd3e2-37e9-4b67-b2ed-557e4314b422" IsHeader="true" IsMandatory="false" IsPartOfUniqueKey="false" IsPersistent="true" ValidationFormula="" ValidationTags="" Formula="ARRAY_LENGTH([Temp])" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <AccessControlGroupMemberships />
        <AccessControlGroups />
        <Security OverrideEFormPermissions="false">
          <Roles />
        </Security>
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format>
          <Number DecimalPlaces="" Prefix="" Suffix="" ThousandsSeparator="false" ScientificNotation="false" />
        </Format>
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </Column>
      <Column Name="Integration Settings Data" DataType="Any" Guid="17f5197d-cbc4-4966-8c6d-1490aca4fef9" IsHeader="true" IsMandatory="false" IsPartOfUniqueKey="false" IsPersistent="false" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="LET $columns := &#xA;ARRAY(&#xA;  &quot;Integration Key&quot;, &#xA;  &quot;Integration Alert Recipient&quot;&#xA;);&#xA;&#xA;RETURN&#xA;INDEXES_TO_KEYS(&#xA;  DB_LOOKUP(&#xA;        $columns, &#xA;        &quot;Integration Settings&quot;, &#xA;        &quot;[RecordID] = 1&quot;,&#xA;        HASH(&quot;credentials&quot;, &quot;a4c6fd62-7f75-4d0c-a57b-29a914e2c126&quot;)&#xA;      ), &#xA;&#x9;  $columns&#xA;    )" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <AccessControlGroupMemberships />
        <AccessControlGroups />
        <Security OverrideEFormPermissions="false">
          <Roles />
        </Security>
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </Column>
      <Column Name="Show Debug Controls" DataType="Boolean" Guid="ba4dccac-e3b5-4396-bc0a-3481324cd21b" IsHeader="true" IsMandatory="false" IsPartOfUniqueKey="false" IsPersistent="false" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <AccessControlGroupMemberships />
        <AccessControlGroups />
        <Security OverrideEFormPermissions="false">
          <Roles />
        </Security>
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </Column>
      <Column Name="Ephemeral 1" DataType="Any" Guid="a76511b7-83b6-4e9a-9c84-073af73df7ff" IsHeader="true" IsMandatory="false" IsPartOfUniqueKey="false" IsPersistent="false" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <AccessControlGroupMemberships />
        <AccessControlGroups />
        <Security OverrideEFormPermissions="false">
          <Roles />
        </Security>
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </Column>
      <Column Name="Ephemeral 2" DataType="Any" Guid="abc59fa0-5607-4e1c-b032-7d4193a08a79" IsHeader="true" IsMandatory="false" IsPartOfUniqueKey="false" IsPersistent="false" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <AccessControlGroupMemberships />
        <AccessControlGroups />
        <Security OverrideEFormPermissions="false">
          <Roles />
        </Security>
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </Column>
      <Column Name="Ephemeral 3" DataType="Any" Guid="f25ec4aa-0f61-4702-9644-2030c76cd161" IsHeader="true" IsMandatory="false" IsPartOfUniqueKey="false" IsPersistent="false" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <AccessControlGroupMemberships />
        <AccessControlGroups />
        <Security OverrideEFormPermissions="false">
          <Roles />
        </Security>
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </Column>
      <Column Name="Ephemeral 4" DataType="Any" Guid="a7b53249-9b7e-445f-85ce-cc738a9a9906" IsHeader="true" IsMandatory="false" IsPartOfUniqueKey="false" IsPersistent="false" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <AccessControlGroupMemberships />
        <AccessControlGroups />
        <Security OverrideEFormPermissions="false">
          <Roles />
        </Security>
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </Column>
      <Column Name="Status Code" DataType="String" Guid="5a333094-7de5-4aa3-a343-72c3a42ad7c3" IsHeader="true" IsMandatory="false" IsPartOfUniqueKey="false" IsPersistent="true" ValidationFormula="" ValidationTags="" Formula="" DefaultValue="" DefaultValueFormula="" DefaultValueFormulaAssignWholeColumn="false" IsEditableInReport="false">
        <AccessControlGroupMemberships />
        <AccessControlGroups />
        <Security OverrideEFormPermissions="false">
          <Roles />
        </Security>
        <IsFullTextIndexed>false</IsFullTextIndexed>
        <Format xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ReportingField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <ProtectionReason xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <EFormRecordPipes />
      </Column>
    </Columns>
    <ReferenceGroups />
    <Kpis />
    <MergeFields />
  </DataDefinition>
  <Views>
    <ViewEntry Name="Default">
      <View BackColor="0,0,0,0">
        <PdfSettings>
          <PageNumberMode>None</PageNumberMode>
          <FooterTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </PdfSettings>
        <SidebarMode>Lock</SidebarMode>
        <HorizontalAlign>Default</HorizontalAlign>
        <ShowNewButton>false</ShowNewButton>
        <Security>
          <Roles>
            <RoleEntry Use="true">
              <Role>Everyone</Role>
            </RoleEntry>
          </Roles>
        </Security>
        <Sections>
          <Section ColumnCount="1" Margin="36" BlockSpacing="0" PageWidth="1020" PageHeight="1169">
            <Name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
            <Notes></Notes>
            <Blocks>
              <Block IsReadOnly="false" ID="Block15">
                <Controls>
                  <Title ID="Control202" IsReadOnly="false" LineNumber="1" Left="0" Top="3" Width="31" Height="6" TabIndex="1" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <Text></Text>
                    <UseEFormNameAsText>true</UseEFormNameAsText>
                    <BorderColor>0,0,0,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>true</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>20</FontSize>
                    <FormulaBindings />
                  </Title>
                </Controls>
                <HeadingText></HeadingText>
                <HeadingHeight>0</HeadingHeight>
                <BodyHeight>12</BodyHeight>
                <IsHeader>false</IsHeader>
                <IsCollapsed>false</IsCollapsed>
                <IsPrintable>true</IsPrintable>
                <EnableScrolling>false</EnableScrolling>
                <BackColor>255,255,255,255</BackColor>
                <HeadingBackColor>64,64,64,255</HeadingBackColor>
                <HeadingTextColor>224,224,224,255</HeadingTextColor>
                <HeadingTextSize>10</HeadingTextSize>
                <HeadingTextAlign>Left</HeadingTextAlign>
                <BorderColor>64,64,64,255</BorderColor>
                <BorderWidth>0</BorderWidth>
                <BorderStyle>Solid</BorderStyle>
                <TabOrderMode>InheritFromView</TabOrderMode>
                <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                <FormulaBindings />
                <Visible>true</Visible>
              </Block>
              <Block IsReadOnly="false" ID="Block16">
                <Controls>
                  <Box ID="Control209" IsReadOnly="false" LineNumber="1" Left="0" Top="0" Width="47" Height="31" TabIndex="1" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BackColor>246,246,246,255</BackColor>
                    <BorderColor>224,224,224,255</BorderColor>
                    <Radius>4</Radius>
                    <FormulaBindings />
                  </Box>
                  <TextBox ID="Control210" IsReadOnly="false" LineNumber="1" Left="1" Top="5" Width="22" Height="24" TabIndex="2" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>224,224,224,255</BorderColor>
                    <ReferencedDataColumn>Raw</ReferencedDataColumn>
                    <TextMode>Guess</TextMode>
                    <PlaceholderText xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <BackColor>255,255,255,255</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </TextBox>
                  <TextBox ID="Control211" IsReadOnly="false" LineNumber="1" Left="24" Top="5" Width="22" Height="3" TabIndex="3" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>224,224,224,255</BorderColor>
                    <ReferencedDataColumn>Params</ReferencedDataColumn>
                    <TextMode>SingleLine</TextMode>
                    <PlaceholderText xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <BackColor>255,255,255,255</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </TextBox>
                  <TextBox ID="Control212" IsReadOnly="false" LineNumber="1" Left="24" Top="12" Width="22" Height="3" TabIndex="4" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>224,224,224,255</BorderColor>
                    <ReferencedDataColumn>Integration Authentication</ReferencedDataColumn>
                    <TextMode>SingleLine</TextMode>
                    <PlaceholderText xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <BackColor>255,255,255,255</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </TextBox>
                  <Label Text="Raw" ID="Control213" IsReadOnly="false" LineNumber="1" Left="1" Top="2" Width="22" Height="3" TabIndex="5" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>0,0,0,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </Label>
                  <Label Text="Params" ID="Control214" IsReadOnly="false" LineNumber="1" Left="24" Top="2" Width="22" Height="3" TabIndex="6" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>0,0,0,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </Label>
                  <Label Text="Integration Authentication" ID="Control215" IsReadOnly="false" LineNumber="1" Left="24" Top="9" Width="22" Height="3" TabIndex="7" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>0,0,0,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </Label>
                  <TextBox ID="Control216" IsReadOnly="false" LineNumber="1" Left="24" Top="19" Width="22" Height="3" TabIndex="8" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>224,224,224,255</BorderColor>
                    <ReferencedDataColumn>Integration Workflow</ReferencedDataColumn>
                    <TextMode>SingleLine</TextMode>
                    <PlaceholderText xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <BackColor>255,255,255,255</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </TextBox>
                  <Label Text="Integration Workflow" ID="Control217" IsReadOnly="false" LineNumber="1" Left="24" Top="16" Width="22" Height="3" TabIndex="9" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>0,0,0,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </Label>
                  <TextBox ID="Control218" IsReadOnly="false" LineNumber="1" Left="24" Top="26" Width="22" Height="3" TabIndex="10" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>224,224,224,255</BorderColor>
                    <ReferencedDataColumn>Status Code</ReferencedDataColumn>
                    <TextMode>SingleLine</TextMode>
                    <PlaceholderText xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <BackColor>255,255,255,255</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </TextBox>
                  <Label Text="Status Code" ID="Control219" IsReadOnly="false" LineNumber="1" Left="24" Top="23" Width="22" Height="3" TabIndex="11" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>0,0,0,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </Label>
                </Controls>
                <ExpanderVisible>No</ExpanderVisible>
                <HeadingText>Raw Data</HeadingText>
                <HeadingHeight>3</HeadingHeight>
                <BodyHeight>32</BodyHeight>
                <IsHeader>false</IsHeader>
                <IsCollapsed>false</IsCollapsed>
                <IsPrintable>false</IsPrintable>
                <EnableScrolling>false</EnableScrolling>
                <BackColor>255,255,255,255</BackColor>
                <HeadingBackColor>255,255,255,255</HeadingBackColor>
                <HeadingTextColor>0,85,122,255</HeadingTextColor>
                <HeadingTextSize>14</HeadingTextSize>
                <HeadingTextAlign>Left</HeadingTextAlign>
                <BorderColor>103,103,103,255</BorderColor>
                <BorderWidth>0</BorderWidth>
                <BorderStyle>Solid</BorderStyle>
                <TabOrderMode>InheritFromView</TabOrderMode>
                <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                <FormulaBindings />
                <Visible>true</Visible>
              </Block>
              <Block IsReadOnly="false" ID="Block21">
                <Controls>
                  <AttachedDocumentsManager ID="Control242" IsReadOnly="false" LineNumber="1" Left="0" Top="0" Width="47" Height="15" TabIndex="1" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="true">
                    <Path>Input Files</Path>
                    <FormulaBindings />
                  </AttachedDocumentsManager>
                </Controls>
                <ExpanderVisible>No</ExpanderVisible>
                <HeadingText>Input Files</HeadingText>
                <HeadingHeight>3</HeadingHeight>
                <BodyHeight>15</BodyHeight>
                <IsHeader>false</IsHeader>
                <IsCollapsed>false</IsCollapsed>
                <IsPrintable>false</IsPrintable>
                <EnableScrolling>false</EnableScrolling>
                <BackColor>255,255,255,255</BackColor>
                <HeadingBackColor>255,255,255,255</HeadingBackColor>
                <HeadingTextColor>0,85,122,255</HeadingTextColor>
                <HeadingTextSize>14</HeadingTextSize>
                <HeadingTextAlign>Left</HeadingTextAlign>
                <BorderColor>103,103,103,255</BorderColor>
                <BorderWidth>0</BorderWidth>
                <BorderStyle>Solid</BorderStyle>
                <TabOrderMode>InheritFromView</TabOrderMode>
                <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                <FormulaBindings />
                <Visible>true</Visible>
              </Block>
              <Block IsReadOnly="false" ID="Block22">
                <Controls>
                  <AttachedDocumentsManager ID="Control243" IsReadOnly="false" LineNumber="1" Left="0" Top="0" Width="47" Height="15" TabIndex="1" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="true">
                    <Path>Comparison Files</Path>
                    <FormulaBindings />
                  </AttachedDocumentsManager>
                </Controls>
                <ExpanderVisible>No</ExpanderVisible>
                <HeadingText>ComparisonFiles</HeadingText>
                <HeadingHeight>3</HeadingHeight>
                <BodyHeight>15</BodyHeight>
                <IsHeader>false</IsHeader>
                <IsCollapsed>false</IsCollapsed>
                <IsPrintable>false</IsPrintable>
                <EnableScrolling>false</EnableScrolling>
                <BackColor>255,255,255,255</BackColor>
                <HeadingBackColor>255,255,255,255</HeadingBackColor>
                <HeadingTextColor>0,85,122,255</HeadingTextColor>
                <HeadingTextSize>14</HeadingTextSize>
                <HeadingTextAlign>Left</HeadingTextAlign>
                <BorderColor>103,103,103,255</BorderColor>
                <BorderWidth>0</BorderWidth>
                <BorderStyle>Solid</BorderStyle>
                <TabOrderMode>InheritFromView</TabOrderMode>
                <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                <FormulaBindings />
                <Visible>true</Visible>
              </Block>
              <Block IsReadOnly="false" ID="Block26">
                <Controls>
                  <AttachedDocumentsManager ID="Control274" IsReadOnly="false" LineNumber="1" Left="0" Top="0" Width="47" Height="15" TabIndex="1" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="true">
                    <Path>Result Files</Path>
                    <FormulaBindings />
                  </AttachedDocumentsManager>
                </Controls>
                <ExpanderVisible>No</ExpanderVisible>
                <HeadingText>ResultFiles</HeadingText>
                <HeadingHeight>3</HeadingHeight>
                <BodyHeight>15</BodyHeight>
                <IsHeader>false</IsHeader>
                <IsCollapsed>false</IsCollapsed>
                <IsPrintable>false</IsPrintable>
                <EnableScrolling>false</EnableScrolling>
                <BackColor>255,255,255,255</BackColor>
                <HeadingBackColor>255,255,255,255</HeadingBackColor>
                <HeadingTextColor>0,85,122,255</HeadingTextColor>
                <HeadingTextSize>14</HeadingTextSize>
                <HeadingTextAlign>Left</HeadingTextAlign>
                <BorderColor>103,103,103,255</BorderColor>
                <BorderWidth>0</BorderWidth>
                <BorderStyle>Solid</BorderStyle>
                <TabOrderMode>InheritFromView</TabOrderMode>
                <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                <FormulaBindings />
                <Visible>true</Visible>
              </Block>
              <Block IsReadOnly="false" ID="Block23">
                <Controls>
                  <Label Text="Data Needs Processing" ID="Control244" IsReadOnly="false" LineNumber="1" Left="1" Top="8" Width="22" Height="3" TabIndex="4" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>0,0,0,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </Label>
                  <TextBox ID="Control245" IsReadOnly="false" LineNumber="1" Left="1" Top="11" Width="22" Height="3" TabIndex="5" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>224,224,224,255</BorderColor>
                    <ReferencedDataColumn>Data Needs Processing</ReferencedDataColumn>
                    <TextMode>SingleLine</TextMode>
                    <PlaceholderText xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <BackColor>255,255,255,255</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </TextBox>
                  <Label Text="Data Processed" ID="Control246" IsReadOnly="false" LineNumber="1" Left="24" Top="1" Width="22" Height="3" TabIndex="6" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>0,0,0,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </Label>
                  <TextBox ID="Control247" IsReadOnly="false" LineNumber="1" Left="24" Top="4" Width="22" Height="3" TabIndex="7" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>224,224,224,255</BorderColor>
                    <ReferencedDataColumn>Data Processed</ReferencedDataColumn>
                    <TextMode>SingleLine</TextMode>
                    <PlaceholderText xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <BackColor>255,255,255,255</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </TextBox>
                  <Label Text="Created By" ID="Control248" IsReadOnly="false" LineNumber="1" Left="24" Top="8" Width="22" Height="3" TabIndex="8" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>0,0,0,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </Label>
                  <TextBox ID="Control249" IsReadOnly="false" LineNumber="1" Left="24" Top="11" Width="22" Height="3" TabIndex="9" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>224,224,224,255</BorderColor>
                    <ReferencedDataColumn>Created By</ReferencedDataColumn>
                    <TextMode>SingleLine</TextMode>
                    <PlaceholderText xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <BackColor>255,255,255,255</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </TextBox>
                  <Label Text="Date Imported" ID="Control250" IsReadOnly="false" LineNumber="1" Left="1" Top="1" Width="22" Height="3" TabIndex="10" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>0,0,0,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </Label>
                  <TextBox ID="Control251" IsReadOnly="false" LineNumber="1" Left="1" Top="4" Width="22" Height="3" TabIndex="11" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>224,224,224,255</BorderColor>
                    <ReferencedDataColumn>DateCreated</ReferencedDataColumn>
                    <TextMode>SingleLine</TextMode>
                    <PlaceholderText xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <BackColor>255,255,255,255</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </TextBox>
                </Controls>
                <ExpanderVisible>No</ExpanderVisible>
                <HeadingText>Manipulated Data</HeadingText>
                <HeadingHeight>3</HeadingHeight>
                <BodyHeight>15</BodyHeight>
                <IsHeader>false</IsHeader>
                <IsCollapsed>false</IsCollapsed>
                <IsPrintable>false</IsPrintable>
                <EnableScrolling>false</EnableScrolling>
                <BackColor>255,255,255,255</BackColor>
                <HeadingBackColor>255,255,255,255</HeadingBackColor>
                <HeadingTextColor>0,85,122,255</HeadingTextColor>
                <HeadingTextSize>14</HeadingTextSize>
                <HeadingTextAlign>Left</HeadingTextAlign>
                <BorderColor>103,103,103,255</BorderColor>
                <BorderWidth>0</BorderWidth>
                <BorderStyle>Solid</BorderStyle>
                <TabOrderMode>InheritFromView</TabOrderMode>
                <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                <FormulaBindings />
                <Visible>true</Visible>
              </Block>
              <Block IsReadOnly="false" ID="Block24">
                <Controls>
                  <TextBox ID="Control252" IsReadOnly="false" LineNumber="1" Left="1" Top="5" Width="22" Height="10" TabIndex="2" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>224,224,224,255</BorderColor>
                    <ReferencedDataColumn>Temp</ReferencedDataColumn>
                    <TextMode>Guess</TextMode>
                    <PlaceholderText xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <BackColor>255,255,255,255</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </TextBox>
                  <Label Text="Temp" ID="Control253" IsReadOnly="false" LineNumber="1" Left="1" Top="2" Width="22" Height="3" TabIndex="3" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>0,0,0,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </Label>
                  <TextBox ID="Control254" IsReadOnly="false" LineNumber="1" Left="24" Top="5" Width="22" Height="10" TabIndex="12" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>224,224,224,255</BorderColor>
                    <ReferencedDataColumn>Temp 2</ReferencedDataColumn>
                    <TextMode>Guess</TextMode>
                    <PlaceholderText xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <BackColor>255,255,255,255</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </TextBox>
                  <Label Text="Temp 2" ID="Control255" IsReadOnly="false" LineNumber="1" Left="24" Top="2" Width="22" Height="3" TabIndex="13" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>0,0,0,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </Label>
                  <TextBox ID="Control256" IsReadOnly="false" LineNumber="1" Left="1" Top="20" Width="10" Height="10" TabIndex="14" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>224,224,224,255</BorderColor>
                    <ReferencedDataColumn>Ephemeral 1</ReferencedDataColumn>
                    <TextMode>Guess</TextMode>
                    <PlaceholderText xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <BackColor>255,255,255,255</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </TextBox>
                  <Label Text="Ephemeral 1" ID="Control257" IsReadOnly="false" LineNumber="1" Left="1" Top="17" Width="10" Height="3" TabIndex="15" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>0,0,0,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </Label>
                  <TextBox ID="Control258" IsReadOnly="false" LineNumber="1" Left="12" Top="20" Width="10" Height="10" TabIndex="16" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>224,224,224,255</BorderColor>
                    <ReferencedDataColumn>Ephemeral 2</ReferencedDataColumn>
                    <TextMode>Guess</TextMode>
                    <PlaceholderText xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <BackColor>255,255,255,255</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </TextBox>
                  <Label Text="Ephemeral 2" ID="Control259" IsReadOnly="false" LineNumber="1" Left="12" Top="17" Width="10" Height="3" TabIndex="17" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>0,0,0,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </Label>
                  <TextBox ID="Control260" IsReadOnly="false" LineNumber="1" Left="25" Top="20" Width="10" Height="10" TabIndex="18" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>224,224,224,255</BorderColor>
                    <ReferencedDataColumn>Ephemeral 3</ReferencedDataColumn>
                    <TextMode>Guess</TextMode>
                    <PlaceholderText xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <BackColor>255,255,255,255</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </TextBox>
                  <Label Text="Ephemeral 3" ID="Control261" IsReadOnly="false" LineNumber="1" Left="25" Top="17" Width="10" Height="3" TabIndex="19" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>0,0,0,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </Label>
                  <TextBox ID="Control262" IsReadOnly="false" LineNumber="1" Left="36" Top="20" Width="10" Height="10" TabIndex="20" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>224,224,224,255</BorderColor>
                    <ReferencedDataColumn>Ephemeral 4</ReferencedDataColumn>
                    <TextMode>Guess</TextMode>
                    <PlaceholderText xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <BackColor>255,255,255,255</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </TextBox>
                  <Label Text="Ephemeral 4" ID="Control263" IsReadOnly="false" LineNumber="1" Left="36" Top="17" Width="10" Height="3" TabIndex="21" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>0,0,0,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </Label>
                </Controls>
                <ExpanderVisible>No</ExpanderVisible>
                <HeadingText>Temp Fields</HeadingText>
                <HeadingHeight>3</HeadingHeight>
                <BodyHeight>32</BodyHeight>
                <IsHeader>false</IsHeader>
                <IsCollapsed>false</IsCollapsed>
                <IsPrintable>false</IsPrintable>
                <EnableScrolling>false</EnableScrolling>
                <BackColor>255,255,255,255</BackColor>
                <HeadingBackColor>255,255,255,255</HeadingBackColor>
                <HeadingTextColor>0,85,122,255</HeadingTextColor>
                <HeadingTextSize>14</HeadingTextSize>
                <HeadingTextAlign>Left</HeadingTextAlign>
                <BorderColor>103,103,103,255</BorderColor>
                <BorderWidth>0</BorderWidth>
                <BorderStyle>Solid</BorderStyle>
                <TabOrderMode>InheritFromView</TabOrderMode>
                <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                <FormulaBindings />
                <Visible>true</Visible>
              </Block>
              <Block IsReadOnly="false" ID="Block18">
                <Controls>
                  <Box ID="Control231" IsReadOnly="false" LineNumber="1" Left="0" Top="0" Width="47" Height="22" TabIndex="1" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BackColor>246,246,246,255</BackColor>
                    <BorderColor>224,224,224,255</BorderColor>
                    <Radius>4</Radius>
                    <FormulaBindings />
                  </Box>
                  <Label Text="Email Content" ID="Control232" IsReadOnly="false" LineNumber="1" Left="1" Top="9" Width="45" Height="3" TabIndex="2" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>0,0,0,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </Label>
                  <TextBox ID="Control233" IsReadOnly="false" LineNumber="1" Left="1" Top="12" Width="45" Height="8" TabIndex="3" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>224,224,224,255</BorderColor>
                    <ReferencedDataColumn>Email Content</ReferencedDataColumn>
                    <TextMode>Guess</TextMode>
                    <PlaceholderText xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <BackColor>255,255,255,255</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </TextBox>
                  <Label Text="Email Alert Recipient" ID="Control234" IsReadOnly="false" LineNumber="1" Left="1" Top="2" Width="45" Height="3" TabIndex="4" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>0,0,0,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </Label>
                  <TextBox ID="Control235" IsReadOnly="false" LineNumber="1" Left="1" Top="5" Width="45" Height="3" TabIndex="5" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>224,224,224,255</BorderColor>
                    <ReferencedDataColumn>Integration Alert Recipient</ReferencedDataColumn>
                    <TextMode>Guess</TextMode>
                    <PlaceholderText xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <BackColor>255,255,255,255</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>10</FontSize>
                    <FormulaBindings />
                  </TextBox>
                </Controls>
                <ExpanderVisible>No</ExpanderVisible>
                <HeadingText>Integration Alert</HeadingText>
                <HeadingHeight>3</HeadingHeight>
                <BodyHeight>23</BodyHeight>
                <IsHeader>false</IsHeader>
                <IsCollapsed>false</IsCollapsed>
                <IsPrintable>false</IsPrintable>
                <EnableScrolling>false</EnableScrolling>
                <BackColor>255,255,255,255</BackColor>
                <HeadingBackColor>255,255,255,255</HeadingBackColor>
                <HeadingTextColor>0,85,122,255</HeadingTextColor>
                <HeadingTextSize>14</HeadingTextSize>
                <HeadingTextAlign>Left</HeadingTextAlign>
                <BorderColor>103,103,103,255</BorderColor>
                <BorderWidth>0</BorderWidth>
                <BorderStyle>Solid</BorderStyle>
                <TabOrderMode>InheritFromView</TabOrderMode>
                <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                <FormulaBindings />
                <Visible>true</Visible>
              </Block>
              <Block IsReadOnly="false" ID="Block25">
                <Controls>
                  <Button ID="Control266" IsReadOnly="false" LineNumber="1" Left="1" Top="8" Width="19" Height="5" TabIndex="5" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="false">
                    <Text>Start Again</Text>
                    <CausesValidation>false</CausesValidation>
                    <ValidationTag xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <Event>
                      <Tasks>
                        <ChangeFieldValues>
                          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                          <FieldEntries>
                            <FieldEntry>
                              <ColumnName>Ephemeral 1</ColumnName>
                              <AssignWholeColumn>false</AssignWholeColumn>
                              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                              <Formula>NULL</Formula>
                            </FieldEntry>
                          </FieldEntries>
                          <UpdateRecordFormulas>false</UpdateRecordFormulas>
                          <Description>Clear [Ephemeral 1]</Description>
                          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                        </ChangeFieldValues>
                        <ReadFileToFieldTask>
                          <FileGenerator>
                            <RecordFile>
                              <ResultFilenameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                              <WholeFolder>true</WholeFolder>
                              <TargetFileTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                              <EFormType xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                              <EFormTypeTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                              <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                              <PathTemplate>Input Files</PathTemplate>
                            </RecordFile>
                          </FileGenerator>
                          <FileProcessor>
                            <PlainTextFile />
                          </FileProcessor>
                          <FileIntoField>Ephemeral 1</FileIntoField>
                          <Description>Read file into Ephemeral 1</Description>
                          <RunOnlyWhen>
                            <GroupingExpression Operator="And">
                              <Children>
                                <CriterionExpression>
                                  <Criterion>
                                    <FormulaCriterion>
                                      <Formula>[RecordID] &gt;= 0</Formula>
                                    </FormulaCriterion>
                                  </Criterion>
                                </CriterionExpression>
                              </Children>
                            </GroupingExpression>
                          </RunOnlyWhen>
                        </ReadFileToFieldTask>
                        <ChangeFieldValues>
                          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                          <FieldEntries>
                            <FieldEntry>
                              <ColumnName>Raw</ColumnName>
                              <AssignWholeColumn>false</AssignWholeColumn>
                              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                              <Formula>IF(
  [Ephemeral 1] == NULL, [Raw],
  HASH_MERGE([Raw], HASH("body", [Ephemeral 1]))
)</Formula>
                            </FieldEntry>
                            <FieldEntry>
                              <ColumnName>Data Needs Processing</ColumnName>
                              <AssignWholeColumn>false</AssignWholeColumn>
                              <LineNumberFormula></LineNumberFormula>
                              <Formula>FALSE</Formula>
                            </FieldEntry>
                            <FieldEntry>
                              <ColumnName>Data Processed</ColumnName>
                              <AssignWholeColumn>false</AssignWholeColumn>
                              <LineNumberFormula>1</LineNumberFormula>
                              <Formula>FALSE</Formula>
                            </FieldEntry>
                            <FieldEntry>
                              <ColumnName>Created By</ColumnName>
                              <AssignWholeColumn>false</AssignWholeColumn>
                              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                              <Formula>"Web Event"</Formula>
                            </FieldEntry>
                            <FieldEntry>
                              <ColumnName>Temp</ColumnName>
                              <AssignWholeColumn>false</AssignWholeColumn>
                              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                              <Formula>NULL</Formula>
                            </FieldEntry>
                            <FieldEntry>
                              <ColumnName>Temp 2</ColumnName>
                              <AssignWholeColumn>false</AssignWholeColumn>
                              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                              <Formula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                            </FieldEntry>
                            <FieldEntry>
                              <ColumnName>Ephemeral 1</ColumnName>
                              <AssignWholeColumn>false</AssignWholeColumn>
                              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                              <Formula>NULL</Formula>
                            </FieldEntry>
                            <FieldEntry>
                              <ColumnName>Ephemeral 2</ColumnName>
                              <AssignWholeColumn>false</AssignWholeColumn>
                              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                              <Formula>NULL</Formula>
                            </FieldEntry>
                            <FieldEntry>
                              <ColumnName>Ephemeral 3</ColumnName>
                              <AssignWholeColumn>false</AssignWholeColumn>
                              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                              <Formula>NULL</Formula>
                            </FieldEntry>
                          </FieldEntries>
                          <UpdateRecordFormulas>false</UpdateRecordFormulas>
                          <Description>Clear: [Temp], [Temp 2], ]Ephemeral 1]/2/3, [Data Processed] = FALSE, [Data Needs Processing] = FALSE</Description>
                          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                        </ChangeFieldValues>
                      </Tasks>
                    </Event>
                    <CredentialToken xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <TypeOfButton>Custom</TypeOfButton>
                    <BorderColor>180,180,180,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Center</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>12</FontSize>
                    <FormulaBindings>
                      <Binding PropertyName="IsReadOnly" Expression="[Raw] == NULL" />
                    </FormulaBindings>
                  </Button>
                  <Label Text="Run integration workflow" ID="Control267" IsReadOnly="false" LineNumber="1" Left="1" Top="17" Width="19" Height="5" TabIndex="6" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>0,0,0,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>8</FontSize>
                    <FormulaBindings />
                  </Label>
                  <Label Text="The scheduler calls &quot;Initialize Integration - Scheduled Event&quot; against each one of them.&#xA;&#xA;This in turn calls 'Mildura - Bring PO Data from CIVICA - Scheduled Event' on each of them, causing them to change to:&#xA;&#xA;- [Integration Workflow] = 'Mildura - Bring PO Data from CIVICA - Purchase Order Receipts'&#xA;- [Created By] = 'Scheduled Event'&#xA;&#xA;Bulk creates 'Purchase Order's" ID="Control268" IsReadOnly="false" LineNumber="1" Left="25" Top="8" Width="19" Height="14" TabIndex="8" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>0,0,0,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>8</FontSize>
                    <FormulaBindings />
                  </Label>
                  <Button ID="Control269" IsReadOnly="false" LineNumber="1" Left="25" Top="22" Width="19" Height="5" TabIndex="9" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="false">
                    <Text>"Initialise Integration - Scheduled Event"</Text>
                    <CausesValidation>false</CausesValidation>
                    <ValidationTag xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <Event>
                      <Tasks>
                        <TriggerCustomEvent>
                          <EventNameTemplate>{[Integration Workflow]} - Scheduled Event</EventNameTemplate>
                          <TraceNameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                          <TargetRecordsFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                          <EventArgumentsFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                          <ResultIntoColumn xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                          <RetainLastResultOnly>false</RetainLastResultOnly>
                          <CredentialToken xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                          <ShowWarningIfNoMatchingEvent>true</ShowWarningIfNoMatchingEvent>
                          <RunInsideDataLayer>false</RunInsideDataLayer>
                          <Description>Call: {[Integration Workflow]}</Description>
                          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                        </TriggerCustomEvent>
                      </Tasks>
                    </Event>
                    <CredentialToken xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <TypeOfButton>Custom</TypeOfButton>
                    <BorderColor>180,180,180,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Center</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>14</FontSize>
                    <FormulaBindings>
                      <Binding PropertyName="IsReadOnly" Expression="OR(&#xA;  [Data Needs Processing] != TRUE,&#xA;  [Data Processed] != FALSE,&#xA;  [Created By] != &quot;Web Event&quot;,&#xA;  [Integration Workflow] != &quot;Mildura - Bring PO Data from CIVICA - Purchase Orders&quot;&#xA;)" />
                    </FormulaBindings>
                  </Button>
                  <Label Text="Only call these on the original Web Event Integration Data record" ID="Control270" IsReadOnly="false" LineNumber="1" Left="1" Top="2" Width="19" Height="6" TabIndex="10" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>0,0,0,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>true</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>8</FontSize>
                    <FormulaBindings />
                  </Label>
                  <Label Text="Only call these on the batch records." ID="Control271" IsReadOnly="false" LineNumber="1" Left="25" Top="2" Width="19" Height="6" TabIndex="11" Visible="true" ShowBorder="false" PrintBorder="true" ShowWhenPrinting="true">
                    <BorderColor>0,0,0,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Left</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>true</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>8</FontSize>
                    <FormulaBindings />
                  </Label>
                  <Button ID="Control273" IsReadOnly="false" LineNumber="1" Left="1" Top="22" Width="19" Height="5" TabIndex="13" Visible="true" ShowBorder="true" PrintBorder="true" ShowWhenPrinting="false">
                    <Text>Test Integration Workflow</Text>
                    <CausesValidation>false</CausesValidation>
                    <ValidationTag xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <Event>
                      <Tasks>
                        <TriggerCustomEvent>
                          <EventNameTemplate>{[Integration Workflow]}</EventNameTemplate>
                          <TraceNameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                          <TargetRecordsFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                          <EventArgumentsFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                          <ResultIntoColumn xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                          <RetainLastResultOnly>false</RetainLastResultOnly>
                          <CredentialToken xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                          <ShowWarningIfNoMatchingEvent>false</ShowWarningIfNoMatchingEvent>
                          <RunInsideDataLayer>false</RunInsideDataLayer>
                          <Description>Call: {[Integration Workflow]}</Description>
                          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                        </TriggerCustomEvent>
                      </Tasks>
                    </Event>
                    <CredentialToken xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    <TypeOfButton>Custom</TypeOfButton>
                    <BorderColor>180,180,180,255</BorderColor>
                    <BackColor>0,0,0,0</BackColor>
                    <TextColor>0,0,0,255</TextColor>
                    <TextAlign>Center</TextAlign>
                    <FontName>Default</FontName>
                    <Bold>false</Bold>
                    <Italic>false</Italic>
                    <Underline>false</Underline>
                    <FontSize>14</FontSize>
                    <FormulaBindings />
                  </Button>
                </Controls>
                <ExpanderVisible>No</ExpanderVisible>
                <HeadingText>Debug</HeadingText>
                <HeadingHeight>3</HeadingHeight>
                <BodyHeight>30</BodyHeight>
                <IsHeader>false</IsHeader>
                <IsCollapsed>false</IsCollapsed>
                <IsPrintable>true</IsPrintable>
                <EnableScrolling>false</EnableScrolling>
                <BackColor>0,0,0,0</BackColor>
                <HeadingBackColor>255,255,255,255</HeadingBackColor>
                <HeadingTextColor>0,85,122,255</HeadingTextColor>
                <HeadingTextSize>14</HeadingTextSize>
                <HeadingTextAlign>Left</HeadingTextAlign>
                <BorderColor>0,0,0,0</BorderColor>
                <BorderWidth>0</BorderWidth>
                <BorderStyle>Solid</BorderStyle>
                <TabOrderMode>Automatic</TabOrderMode>
                <Event xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                <FormulaBindings />
                <Visible>true</Visible>
              </Block>
            </Blocks>
          </Section>
        </Sections>
        <EnableSquash>false</EnableSquash>
        <BannerHtmlTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      </View>
    </ViewEntry>
  </Views>
  <Security>
    <PermissionSetName>Custom</PermissionSetName>
    <Roles>
      <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
        <Role>external</Role>
      </RoleEntry>
      <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
        <Role>system</Role>
      </RoleEntry>
      <RoleEntry Read="true" Write="true" Delete="true" Administrate="true">
        <Role>System Builders</Role>
      </RoleEntry>
    </Roles>
    <UseFilterPermissionsForNewRecords>false</UseFilterPermissionsForNewRecords>
    <RecordReadAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <RecordWriteAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <ComponentAccessControlGroups />
  </Security>
  <SecurityParts>
    <Security>
      <PermissionSetName>Custom</PermissionSetName>
      <Roles>
        <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
          <Role>external</Role>
        </RoleEntry>
        <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
          <Role>system</Role>
        </RoleEntry>
        <RoleEntry Read="true" Write="true" Delete="true" Administrate="true">
          <Role>System Builders</Role>
        </RoleEntry>
      </Roles>
      <UseFilterPermissionsForNewRecords>false</UseFilterPermissionsForNewRecords>
      <RecordReadAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <RecordWriteAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <ComponentAccessControlGroups />
    </Security>
    <Security>
      <PermissionSetName>Open Access</PermissionSetName>
      <Roles>
        <RoleEntry Read="true" Write="true" Delete="true" Administrate="true">
          <Role>System Builders</Role>
        </RoleEntry>
        <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
          <Role>external</Role>
        </RoleEntry>
        <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
          <Role>system</Role>
        </RoleEntry>
      </Roles>
      <UseFilterPermissionsForNewRecords>false</UseFilterPermissionsForNewRecords>
      <RecordReadAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <RecordWriteAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <ComponentAccessControlGroups />
    </Security>
    <Security>
      <PermissionSetName>Department Level Access</PermissionSetName>
      <Roles>
        <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
          <Role>external</Role>
        </RoleEntry>
        <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
          <Role>system</Role>
        </RoleEntry>
        <RoleEntry Read="true" Write="true" Delete="true" Administrate="true">
          <Role>System Builders</Role>
        </RoleEntry>
      </Roles>
      <UseFilterPermissionsForNewRecords>false</UseFilterPermissionsForNewRecords>
      <RecordReadAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <RecordWriteAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <ComponentAccessControlGroups />
    </Security>
    <Security>
      <PermissionSetName>Custom - Boroondara</PermissionSetName>
      <Roles>
        <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
          <Role>external</Role>
        </RoleEntry>
        <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
          <Role>system</Role>
        </RoleEntry>
        <RoleEntry Read="true" Write="true" Delete="true" Administrate="true">
          <Role>System Builders</Role>
        </RoleEntry>
      </Roles>
      <UseFilterPermissionsForNewRecords>false</UseFilterPermissionsForNewRecords>
      <RecordReadAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <RecordWriteAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <ComponentAccessControlGroups />
    </Security>
    <Security>
      <PermissionSetName>Custom - Cenitex</PermissionSetName>
      <Roles>
        <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
          <Role>external</Role>
        </RoleEntry>
        <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
          <Role>system</Role>
        </RoleEntry>
        <RoleEntry Read="true" Write="true" Delete="true" Administrate="true">
          <Role>System Builders</Role>
        </RoleEntry>
      </Roles>
      <UseFilterPermissionsForNewRecords>false</UseFilterPermissionsForNewRecords>
      <RecordReadAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <RecordWriteAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <ComponentAccessControlGroups />
    </Security>
    <Security>
      <PermissionSetName>Custom - Ombudsman</PermissionSetName>
      <Roles>
        <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
          <Role>external</Role>
        </RoleEntry>
        <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
          <Role>system</Role>
        </RoleEntry>
        <RoleEntry Read="true" Write="true" Delete="true" Administrate="true">
          <Role>System Builders</Role>
        </RoleEntry>
      </Roles>
      <UseFilterPermissionsForNewRecords>false</UseFilterPermissionsForNewRecords>
      <RecordReadAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <RecordWriteAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <ComponentAccessControlGroups />
    </Security>
    <Security>
      <PermissionSetName>Obsolete - Open Set</PermissionSetName>
      <Roles>
        <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
          <Role>external</Role>
        </RoleEntry>
        <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
          <Role>system</Role>
        </RoleEntry>
        <RoleEntry Read="true" Write="true" Delete="true" Administrate="true">
          <Role>System Builders</Role>
        </RoleEntry>
      </Roles>
      <UseFilterPermissionsForNewRecords>false</UseFilterPermissionsForNewRecords>
      <RecordReadAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <RecordWriteAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <ComponentAccessControlGroups />
    </Security>
    <Security>
      <PermissionSetName>Obsolete - Implementation Set</PermissionSetName>
      <Roles>
        <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
          <Role>external</Role>
        </RoleEntry>
        <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
          <Role>system</Role>
        </RoleEntry>
        <RoleEntry Read="true" Write="true" Delete="true" Administrate="true">
          <Role>System Builders</Role>
        </RoleEntry>
      </Roles>
      <UseFilterPermissionsForNewRecords>false</UseFilterPermissionsForNewRecords>
      <RecordReadAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <RecordWriteAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <ComponentAccessControlGroups />
    </Security>
    <Security>
      <PermissionSetName>Custom - CompareCoOps</PermissionSetName>
      <Roles>
        <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
          <Role>external</Role>
        </RoleEntry>
        <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
          <Role>system</Role>
        </RoleEntry>
        <RoleEntry Read="true" Write="true" Delete="true" Administrate="true">
          <Role>System Builders</Role>
        </RoleEntry>
      </Roles>
      <UseFilterPermissionsForNewRecords>false</UseFilterPermissionsForNewRecords>
      <RecordReadAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <RecordWriteAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <ComponentAccessControlGroups />
    </Security>
    <Security>
      <PermissionSetName>Custom - CoGD</PermissionSetName>
      <Roles>
        <RoleEntry Read="true" Write="true" Delete="true" Administrate="true">
          <Role>System Builders</Role>
        </RoleEntry>
        <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
          <Role>external</Role>
        </RoleEntry>
        <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
          <Role>system</Role>
        </RoleEntry>
      </Roles>
      <UseFilterPermissionsForNewRecords>false</UseFilterPermissionsForNewRecords>
      <RecordReadAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <RecordWriteAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <ComponentAccessControlGroups />
    </Security>
    <Security>
      <PermissionSetName>Custom - Stonnington</PermissionSetName>
      <Roles>
        <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
          <Role>external</Role>
        </RoleEntry>
        <RoleEntry Read="true" Write="true" Delete="false" Administrate="false">
          <Role>system</Role>
        </RoleEntry>
        <RoleEntry Read="true" Write="true" Delete="true" Administrate="true">
          <Role>System Builders</Role>
        </RoleEntry>
      </Roles>
      <UseFilterPermissionsForNewRecords>false</UseFilterPermissionsForNewRecords>
      <RecordReadAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <RecordWriteAccessFilter xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <ComponentAccessControlGroups />
    </Security>
  </SecurityParts>
  <Categories>
    <CategoryRef>Integrations</CategoryRef>
  </Categories>
  <Workflow>
    <EnableAutomatedWorkflow>false</EnableAutomatedWorkflow>
    <AllowManualOverride>true</AllowManualOverride>
    <PromptUserOnWorkflowChange>false</PromptUserOnWorkflowChange>
    <States>
      <State Name="Start" Left="100" Top="100">
        <Transitions />
        <NotificationTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <SendNotification>false</SendNotification>
        <ForceAssigneeTo xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      </State>
      <State Name="Closed" Left="100" Top="200">
        <Transitions />
        <NotificationTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        <SendNotification>false</SendNotification>
        <ForceAssigneeTo xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      </State>
    </States>
  </Workflow>
  <Settings>
    <DefaultView>Default</DefaultView>
    <LandingViewFormula></LandingViewFormula>
    <NotifyOnSave>Never</NotifyOnSave>
    <DefaultToNotifyOnSave>false</DefaultToNotifyOnSave>
    <NotifyOnSaveTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <NotifyOnCreate>false</NotifyOnCreate>
    <NotifyOnCreateRecordTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <IncludeRenderedViewInCreateRecordNotification>false</IncludeRenderedViewInCreateRecordNotification>
    <NotifyOnWorkflowChange>false</NotifyOnWorkflowChange>
    <NotifyOnWorkflowChangeTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <NotifyOnClosed>false</NotifyOnClosed>
    <NotifyOnClosedTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <AllowUserToPreviewNotifications>false</AllowUserToPreviewNotifications>
    <DefaultUserToPreviewNotifications>false</DefaultUserToPreviewNotifications>
    <DeleteWithParent>true</DeleteWithParent>
    <EnableManualLinkedEFormRecordsManagement>false</EnableManualLinkedEFormRecordsManagement>
    <IsQuickSearchable>true</IsQuickSearchable>
    <AssignNewRecordsToCurrentUser>false</AssignNewRecordsToCurrentUser>
    <EnableDuplicatingRecords>false</EnableDuplicatingRecords>
    <EnableDeleteFromTabularView>false</EnableDeleteFromTabularView>
    <EnableAddFromTabularView>false</EnableAddFromTabularView>
    <PromptUserBeforeNavigatingAway>true</PromptUserBeforeNavigatingAway>
  </Settings>
  <Attachments>
    <Folders>
      <Folder>
        <Path>Input Files</Path>
        <Guid>dcd244c9-96c7-435e-85f8-caaaec3fc4fc</Guid>
        <AccessControlGroupMemberships />
        <AccessControlGroups />
      </Folder>
      <Folder>
        <Path>Result Files</Path>
        <Guid>60bc4d40-1435-41a2-8c2f-d09adf8ad59a</Guid>
        <AccessControlGroupMemberships />
        <AccessControlGroups />
      </Folder>
      <Folder>
        <Path>Comparison Files</Path>
        <Guid>070a3258-ac4b-4ca9-85d1-84ba5cae3c7b</Guid>
        <AccessControlGroupMemberships />
        <AccessControlGroups />
      </Folder>
    </Folders>
  </Attachments>
  <Dependants>
    <Selectors />
  </Dependants>
  <Credentials>
    <Credentials>
      <Credential>
        <Username>system</Username>
        <Purpose>Get Data from Integration Settings</Purpose>
        <IsVerified>true</IsVerified>
        <Token>a4c6fd62-7f75-4d0c-a57b-29a914e2c126</Token>
      </Credential>
    </Credentials>
  </Credentials>
  <CustomEvents>
    <Event>
      <Name>Cenitex - Get Data for PowerBI</Name>
      <Guid>9c73e902-cdc7-49a6-a8df-b02c745810a6</Guid>
      <Description>Trigger by Web Event. Integration workflow for Cenitex to get updated data for reporting in PowerBI</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Temp 2</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET(HASH_GET([Raw], "query"), "form")</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Get target form from query - this is used to determine which of the following tasks to trigger</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 1</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//date to check - provided by client. if NULL, returns all data
LET $date := D(HASH_GET(HASH_GET([Raw], "query"), "date"));

//get list of ACM columns to retrieve
LET $columns :=
ARRAY(
	"RecordID",
	"Status",
	"Contract Number",
	"Head Agreement Number",
	"Contract Title",
	"Type",
	"Contract Type",
	"Contract Agreement Type",
	"Contract Category",
	"Contract Subcategory",
	"Contract Summary",
	"Department",
	"Vendor Name",
	"BusinessNumber",
	"Strategic Rating",
	"Renewal Complexity",
	"Award Date",
	"Start Date",
	"Original End Date",
	"Current End Date",
	"Maximum End Date",
	"Initial Contract Value Incl. Tax",
	"Total Contract Value",
	"Subcontract Value Data",
	"Budget",
	"Expenditure to Date",
	"Expenditure Type",
	"Cost Center",
	"Contract Manager Display Name",
	"Contract Owner Display Name",
	"Role",
	"Username in Role",
	"Originator",
	"DateLastUpdated",
	"Sender",
	"Notes"
);
	
//lookup Contract data which has been updated since the date requested
LET $contractData :=
DB_LOOKUPALL(
  $columns,
  "Contract",
  "[Setup Complete] = TRUE AND [LineNumber] FAST_EQUAL_TO 1 AND [DateLastUpdated] &gt;= " &amp; DB_ENCODECONSTANT($date)
);

//get a list of recordIDs from data returned - used in following lookups
LET $contractRecordIDs := ARRAY_SELECT($contractData,$(i,item) ARRAY_INDEX($item,1));
//lookup vendor manager data from list of records in above dataset
LET $vendorManagers :=
DB_LOOKUPALL(
	ARRAY("Contract Number","Username in Role"),
	"Contract",
	"[Role] = 'Vendor Manager' AND [RecordID] IN " &amp; DB_ENCODECONSTANT($contractRecordIDs)
);
//lookup record relations from list of records in the dataset
LET $relatedContracts := 
DB_LOOKUPALL(
	ARRAY("RecordID A", "Description A", "RecordID B", "Description B"),
	"Record Relation",
	"[Status] = 'Active' AND [RecordID A] IN " &amp; DB_ENCODECONSTANT($contractRecordIDs) &amp; " OR [RecordID B] IN " &amp; DB_ENCODECONSTANT($contractRecordIDs)
);
//get list of columns then lookup from funding form
LET $fundingCols :=
ARRAY(
	//General funding information
	"RecordID",
	"Funding Amount",
	"Funding Date",
	//Funding Source information
	"Funding Source RecordID",
	"Funding Source",
	"Funding Source Type",
	//Funding Target information
	"Funding Target RecordID",
	"Funding Target",
	"Funding Target Type"
);
LET $fundingData :=
DB_LOOKUPALL(
	$fundingCols,
	"Funding",
	"[LineNumber] FAST_EQUAL_TO 1 AND [Funding Source RecordID] IN " &amp; DB_ENCODECONSTANT($contractRecordIDs) &amp; " OR [Funding Target RecordID] IN " &amp; DB_ENCODECONSTANT($contractRecordIDs)
);

//create array of hashes with column in ACM
LET $hashedContractData := ARRAY_SELECT($contractData, $(i, item) INDEXES_TO_KEYS($item, $columns));
//create two hash groups of funding data - one for source and one for target data
LET $fundingSourceHash :=
ARRAY_TO_HASH_GROUPED(
	$fundingData, $(i,item) ARRAY_INDEX($item, 4),
	$(i,item) INDEXES_TO_KEYS($item, $fundingCols)
);
LET $fundingTargetHash :=
ARRAY_TO_HASH_GROUPED(
	$fundingData, $(i,item) ARRAY_INDEX($item, 7),
	$(i,item) INDEXES_TO_KEYS($item, $fundingCols)
);

//prepare the data to be returned as a hash of "friendly" field names
LET $requiredData :=
ARRAY_SELECT($hashedContractData, $(c, contract)
	//get funding data where this record is the Target
	LET $fundingSources := HASH_GET($fundingTargetHash, HASH_GET($contract, "RecordID"));
	//get funding data where this is the Source
	LET $fundingTargets := HASH_GET($fundingSourceHash, HASH_GET($contract, "RecordID"));
	
	RETURN
	
	HASH(
		"Status", 							HASH_GET($contract, "Status"),
		"Contract Number", 					HASH_GET($contract, "Contract Number"),
		"Head Agreement Number",			HASH_GET($contract, "Head Agreement Number"),
		"Contract Title", 					HASH_GET($contract, "Contract Title"),
		"Type", 							HASH_GET($contract, "Type"),
		"Contract Type", 					HASH_GET($contract, "Contract Type"),
		"Contract Agreement Type",		 	HASH_GET($contract, "Contract Agreement Type"),
		"Contract Category", 				HASH_GET($contract, "Contract Category"),
		"Contract Subcategory", 			HASH_GET($contract, "Contract Subcategory"),
		"Contract Summary",					HASH_GET($contract, "Contract Summary"),
		"Department", 						HASH_GET($contract, "Department"),
		"Vendor Name", 						HASH_GET($contract, "Vendor Name"),
		"ABN", 								HASH_GET($contract, "BusinessNumber"),
		"Strategic Rating", 				HASH_GET($contract, "Strategic Rating"),
		"Renewal Complexity", 				HASH_GET($contract, "Renewal Complexity"),
		"Award Date", 						HASH_GET($contract, "Award Date"),
		"Start Date", 						HASH_GET($contract, "Start Date"),
		"Original End Date", 				HASH_GET($contract, "Original End Date"),
		"Current End Date", 				HASH_GET($contract, "Current End Date"),
		"Maximum End Date", 				HASH_GET($contract, "Maximum End Date"),
		"Initial Contract Value incl. Tax",	ROUND(HASH_GET($contract, "Initial Contract Value Incl. Tax"),2),
		//If the Contract is a Head Agreement, get the total value of subcontracts
		"Total Contract Value incl. Tax", 	
		IF(
			HASH_GET($contract, "Type") = "Head Agreement",
			ROUND(HASH_GET(HASH_GET($contract, "Subcontract Value Data"), "Total Incl Tax"), 2),
			ROUND(HASH_GET($contract, "Total Contract Value"), 2)
		),
		
		"Budget",							HASH_GET($contract,"Budget"),
		"Expenditure to Date", 				HASH_GET($contract, "Expenditure to Date"),
		"Expenditure Type", 				HASH_GET($contract, "Expenditure Type"),
		
		//Create a hash of all funding data where this record is the target
		"Funding Sources",
		ARRAY_SELECT(
			$fundingSources,$(i,item)
			HASH(
				"Funding Source",		HASH_GET($item, "Funding Source"),
				"Source Contract Type",	HASH_GET($item, "Funding Source Type"),
				"Funding Amount",		HASH_GET($item, "Funding Amount"),
				"Funding Date",			HASH_GET($item, "Funding Date")
			)
		),
		"Total Funding Received",SUM(ARRAY_SELECT($fundingSources, $(i,item) HASH_GET($item, "Funding Amount"))),
		//get hash of all funding data where this record is the source
		"Funding Targets",
		ARRAY_SELECT(
			$fundingTargets, $(i,item)
			HASH(
				"Funding Target",		HASH_GET($item, "Funding Target"),
				"Target Contract Type",	HASH_GET($item, "Funding Target Type"),
				"Funding Amount",		HASH_GET($item, "Funding Amount"),
				"Funding Date",			HASH_GET($item, "Funding Date")
			)
		),
		"Total Funding Sent",SUM(ARRAY_SELECT($fundingTargets, $(i,item) HASH_GET($item, "Funding Amount"))),
		
		"Cost Centre", 						HASH_GET($contract, "Cost Center"),
		"Contract Manager", 				HASH_GET($contract, "Contract Manager Display Name"),
		"Contract Owner", 					HASH_GET($contract, "Contract Owner Display Name"),
		"Vendor Manager", 					EBMS_GET_ROLE_DISPLAYNAME(ARRAY_INDEX(ARRAY_FIRST(ARRAY_WHERE($vendorManagers, $(i,item) ARRAY_INDEX($item,1) = HASH_GET($contract, "Contract Number"))),2)),
		"Contract Created By", 				EBMS_GET_ROLE_DISPLAYNAME(HASH_GET($contract, "Originator")),
		"Date Contract Last Modified", 		HASH_GET($contract, "DateLastUpdated"),
		"Contract Last Modified By", 		EBMS_GET_ROLE_DISPLAYNAME(HASH_GET($contract, "Sender")),
		//Get list of related Contracts and high level details
		"Related Contracts",				
		ARRAY_WHERE(
			ARRAY(
				ARRAY_INDEX(ARRAY_FIRST(ARRAY_WHERE($relatedContracts,$(i,item) ARRAY_INDEX($item,1) = HASH_GET($contract, "RecordID"))),4),
				ARRAY_INDEX(ARRAY_FIRST(ARRAY_WHERE($relatedContracts,$(i,item) ARRAY_INDEX($item,3) = HASH_GET($contract, "RecordID"))),2)
			),
		$(i,item) $item &lt;&gt; NULL
		),
		//Create a hash of all file notes from the array of value stored in the Notes field
		"File Notes",						
		ARRAY_SELECT(
			HASH_GET($contract, "Notes"), $(i,item)
			HASH(
				"Posted By", 	EBMS_GET_ROLE_DISPLAYNAME(ARRAY_INDEX($item,1)),
				"Date Posted", 	ARRAY_INDEX($item,2),
				"Message",		ARRAY_INDEX($item,3)
			)
		)
	)
);

//Return JSON encoded data
RETURN JSONENCODE($requiredData)</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Get Contract Data</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>[Temp 2] = "Contract"</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </ChangeFieldValues>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 1</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//date to check - provided by client. if NULL, returns all data
LET $date := D(HASH_GET(HASH_GET([Raw], "query"), "date"));

//get list of ACM columns to retrieve
LET $columns :=
ARRAY(
	//General Details
	"Contract Number",
	"Variation Number",
	"Variation Title",
	"Status",
	"Reason for Variation", //variation category from managed list
	"Variation Reason", //Freetext reason for the Variation occurring
	"Details", //Details of the Variation itself
	"Time Impact",
	"Risk",
	"Recommendation",
	//Variation Type
	"Type Description",
	"Variation to Date",
	"Variation to Price",
	"Variation to Terms",
	//Variation to Value
	"Variation Value",
	"Tax Mode",
	"Variation Value inc Tax",
	"Project Funding Implications",
	"Potential Financial Flow on Effects",
	//Variation to Terms
	"Term Variation Reference",
	"Term Variation Details",
	//Variation to Duration
	"Extension Data"
);

LET $variationData :=
DB_LOOKUPALL(
	$columns,
	"Variation",
	"[LineNumber] FAST_EQUAL_TO 1 AND [DateLastUpdated] &gt;= " &amp; DB_ENCODECONSTANT($date)
);

LET $variationHash := ARRAY_SELECT($variationData, $(i, item) INDEXES_TO_KEYS($item, $columns));

//create array of hashes using "friendly" field names as key
LET $requiredData :=
ARRAY_SELECT($variationHash, $(v, variation)
	//transpose extension data into array of each individual extension
  	LET $extensionData :=
	ARRAY_TRANSPOSE(ARRAY(
		HASH_GET(HASH_GET($variation, "Extension Data"), "Extension Years"),
		HASH_GET(HASH_GET($variation, "Extension Data"), "Extension Months"),
		HASH_GET(HASH_GET($variation, "Extension Data"), "Extension Days")
	));
	RETURN
	HASH(
		//General Details
		"Contract Number", 						HASH_GET($variation, "Contract Number"),
		"Variation Number",						HASH_GET($variation, "Variation Number"),
		"Variation Title",						HASH_GET($variation, "Variation Title"),
		"Status",								HASH_GET($variation, "Status"),
		"Variation Category",					HASH_GET($variation, "Reason for Variation"),
		"Variation Reason", 					HASH_GET($variation, "Variation Reason"),
		"Variation Details", 					HASH_GET($variation, "Details"),
		"Time Impact",							HASH_GET($variation, "Time Impact"),
		"Risk",									HASH_GET($variation, "Risk"),
		"Recommendation",						HASH_GET($variation, "Recommendation"),
		
		"Variation Type",						"Variation to " &amp; HASH_GET($variation, "Type Description"),		
		"Variation to Duration",				HASH_GET($variation, "Variation to Date"),
		"Variation to Value",					HASH_GET($variation, "Variation to Price"),
		"Variation to Terms",					HASH_GET($variation, "Variation to Terms"),
		
		//Variation to Value
		"Variation Value",						HASH_GET($variation, "Variation Value"),
		"Tax Mode",								HASH_GET($variation, "Tax Mode"),
		"Variation Value inc Tax",				HASH_GET($variation, "Variation Value inc Tax"),
		"Project Funding Implications",			HASH_GET($variation, "Project Funding Implications"),
		"Potential Financial Flow on Effects",	HASH_GET($variation, "Potential Financial Flow on Effects"),
		
		//Variation to Terms
		"Term Variation Reference",				HASH_GET($variation, "Term Variation Reference"),
		"Term Variation Details",				HASH_GET($variation, "Term Variation Details"),
		
		//Variation to Duration
		"Extension Data",
		ARRAY_SELECT(
			$extensionData, $(i,item)
			HASH(
			  	"Extension Number", $i,
				"Extension Years",	ARRAY_INDEX($item, 1),
				"Extension Months", ARRAY_INDEX($item, 2),
				"Extension Days", 	ARRAY_INDEX($item, 3)
			)
		)
	)
);

//Return JSON encoded data
RETURN JSONENCODE($requiredData)</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Get Variation Data</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>[Temp 2] = "Variation"</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </ChangeFieldValues>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 1</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//date to check - provided by client. if NULL, returns all data
LET $date := D(HASH_GET(HASH_GET([Raw], "query"), "date"));

//get list of ACM columns to retrieve
LET $columns :=
ARRAY(
	//General Information
	"RecordID",
	"Contract Number",
	"Risk ID",
	"Status",
	"Risk summary",
	"Risk",
	"Risk Cause",
	"Risk Type",
	"Risk Category",
	"Raised By",
	"Responsible Person",
	"Risk Coordinator",
	"Department",
	"Vendor Name",
	//Current Risk Rating
	"Consequence",
	"Likelihood",
	"Risk Value",
	"Risk Rating",
	"Response Option",
	//Target Risk Rating
	"Residual Consequence",
	"Residual Likelihood",
	"Residual Risk Value",
	"Residual Risk Rating",
	//Considerations
	"Secondary Risks",
	"Residual Risk",
	"Contingency Funds",
	"Contingency Time",
	"Contingency Plan",
	"Fallback Plans",
	"Comments"
);

//Lookup data from ACM
LET $riskData :=
DB_LOOKUPALL(
	$columns,
	"Risk",
	"[LineNumber] FAST_EQUAL_TO 1 AND [Parent EFormType] = 'Contract' AND [DateLastUpdated] &gt;= " &amp; DB_ENCODECONSTANT($date)
);

//get associated actions for each risk
LET $riskActions :=
DB_LOOKUPALL(
	ARRAY("Source RecordID", "Action", "Status", "Responsible", "Date Due"),
	"Action",
	"[LineNumber] FAST_EQUAL_TO 1 AND [Source EFormType] = 'Risk' AND [Source RecordID] IN " &amp; DB_ENCODECONSTANT(ARRAY_SELECT($riskData, $(i,item) ARRAY_INDEX($item, 1)))
);

//Hash risk data
LET $riskHash := ARRAY_SELECT($riskData, $(i, item) INDEXES_TO_KEYS($item, $columns));

//create hashed group of actions raised for each risk
LET $actionHash :=
ARRAY_TO_HASH_GROUPED(
	$riskActions, $(i,item) ARRAY_INDEX($item,1),
	$(i,item) $item
);

//create array of hashes using "friendly" names as key
LET $requiredData :=
ARRAY_SELECT(
	$riskHash, $(r,risk)
	LET $actions := HASH_GET($actionHash, HASH_GET($risk,"RecordID"));
	RETURN
	HASH(
		//General Information
		"Contract Number", 		HASH_GET($risk, "Contract Number"),
		"Risk ID",				HASH_GET($risk, "Risk ID"),
		"Status",				HASH_GET($risk, "Status"),
		"Risk Title",			HASH_GET($risk, "Risk summary"),
		"Risk Description",		HASH_GET($risk, "Risk"),
		"Risk Cause",			HASH_GET($risk, "Risk Cause"),
		"Risk Type",			HASH_GET($risk, "Risk Type"),
		"Risk Category",		HASH_GET($risk, "Risk Category"),
		"Raised By",			EBMS_GET_ROLE_DISPLAYNAME(HASH_GET($risk, "Raised By")),
		"Risk Owner",			EBMS_GET_ROLE_DISPLAYNAME(HASH_GET($risk, "Responsible Person")),
		"Risk Coordinator",		EBMS_GET_ROLE_DISPLAYNAME(HASH_GET($risk, "Risk Coordinator")),
		"Department",			HASH_GET($risk, "Department"),
		"Vendor Name",			HASH_GET($risk, "Vendor Name"),
		
		//Current Risk Rating
		"Consequence",			HASH_GET($risk, "Consequence"),
		"Likelihood",			HASH_GET($risk, "Likelihood"),
		"Risk Value",			HASH_GET($risk, "Risk Value"),
		"Risk Rating",			HASH_GET($risk, "Risk Rating"),
		"Response Option",		HASH_GET($risk, "Response Option"),
		
		//Target Risk Rating
		"Target Consequence",	HASH_GET($risk, "Residual Consequence"),
		"Target Likelihood",	HASH_GET($risk, "Residual Likelihood"),
		"Target Risk Value",	HASH_GET($risk, "Residual Risk Value"),
		"Target Risk Rating",	HASH_GET($risk, "Residual Risk Rating"),
		//Considerations
		"Secondary Risks",		HASH_GET($risk, "Secondary Risks"),
		"Residual Risk",		HASH_GET($risk, "Residual Risk"),
		"Contingency Funds",	HASH_GET($risk, "Contingency Funds"),
		"Contingency Time",		HASH_GET($risk, "Contingency Time"),
		"Contingency Plan",		HASH_GET($risk, "Contingency Plan"),
		"Fallback Plans",		HASH_GET($risk, "Fallback Plans"),
		"Comments",				HASH_GET($risk, "Comments"),
		"Actions Raised",
		ARRAY_SELECT(
			$actions, $(a,action)
			HASH(
				"Action", ARRAY_INDEX($action, 2),
				"Status", ARRAY_INDEX($action, 3),
				"Responsible Person(s)", ARRAY_SELECT(ARRAY_INDEX($action, 4), $(i,item) EBMS_GET_ROLE_DISPLAYNAME($item)),
				"Date Due", ARRAY_INDEX($action, 5)
			)
		)
	)
);

//Return JSON encoded data
RETURN JSONENCODE($requiredData)</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Get Risk Data</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>[Temp 2] = "Risk"</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </ChangeFieldValues>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 1</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//date to check - provided by client. if NULL, returns all data
LET $date := D(HASH_GET(HASH_GET([Raw], "query"), "date"));

//get list of ACM columns to retrieve from Action eForm
LET $columns :=
ARRAY(
	"RecordID",
	"Root EFormType",
	"Root Description",
	"Source EFormType",
	"Source RecordID",
	"Parent Description",
	"Action",
	"Details",
	"Status",
	"Priority",
	"Date Logged",
	"Date Due",
	"Responsible",
	"Interested Parties",
	"Comments",
	"Notes"
);

//lookup data from action form
LET $actionData :=
DB_LOOKUPALL(
	$columns,
	"Action",
	"[LineNumber] FAST_EQUAL_TO 1 AND [DateLastUpdated] &gt;= " &amp; DB_ENCODECONSTANT($date)
);

//separately call subaction data
LET $subActionData :=
DB_LOOKUPALL(
	$columns,
	"Action",
	"[LineNumber] FAST_EQUAL_TO 1 AND [Source EFormType] = 'Action' AND [Source RecordID] IN " &amp; DB_ENCODECONSTANT(ARRAY_SELECT($actionData, $(i,item) ARRAY_INDEX($item, 1)))
);

//hash top level action data
LET $actionHash :=  ARRAY_SELECT($actionData, $(i, item) INDEXES_TO_KEYS($item, $columns));
//create hash group of subactions using Source RecordID as key
LET $subActionHash :=
ARRAY_TO_HASH_GROUPED(
	$subActionData, $(i,item) ARRAY_INDEX($item,1),
	$(i,item) INDEXES_TO_KEYS($item, $columns)
);

//create array of hashes using "friendly" names as key
LET $requiredData :=
ARRAY_SELECT(
	$actionHash, $(a,action)
	//get array of subactions
	LET $subactions := HASH_GET($subActionHash, HASH_GET($action,"RecordID"));
	RETURN
	
	HASH(
		"Action Origin",				HASH_GET($action, "Root EFormType") &amp; " " &amp; HASH_GET($action, "Root Description"),
		"Action Name",					HASH_GET($action, "Action"),
		"Details",						HASH_GET($action, "Details"),
		"Status",						HASH_GET($action, "Status"),
		"Priority",						HASH_GET($action, "Priority"),
		"Date Logged",					HASH_GET($action, "Date Logged"),
		"Date Due",						HASH_GET($action, "Date Due"),
		"Responsible Person(s)",		ARRAY_SELECT(HASH_GET($action, "Responsible"), $(i,item) EBMS_GET_ROLE_DISPLAYNAME($item)),
		"Interested Parties",			ARRAY_SELECT(HASH_GET($action, "Interested Parties"), $(i,item) EBMS_GET_ROLE_DISPLAYNAME($item)),
		"Comments",						HASH_GET($action, "Comments"),
		"Notes",
		ARRAY_SELECT(
			HASH_GET($action, "Notes"), $(i,item)
			HASH(
				"Posted By", 	EBMS_GET_ROLE_DISPLAYNAME(ARRAY_INDEX($item,1)),
				"Date Posted",	ARRAY_INDEX($item,2),
				"Message",		ARRAY_INDEX($item,3)
			)
		),
		"Sub-actions",
		ARRAY_SELECT(
			$subactions, $(i,item)
			HASH(
				"Action",					HASH_GET($item, "Action"),
				"Status",					HASH_GET($item, "Status"),
				"Responsible Person(s)",	ARRAY_SELECT(HASH_GET($item, "Responsible"), $(j,jtem) EBMS_GET_ROLE_DISPLAYNAME($jtem)),
				"Date Due",					HASH_GET($item, "Date Due")
			)
		)
	)
);

RETURN JSONENCODE($requiredData)</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Get Action Data</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>[Temp 2] = "Action"</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </ChangeFieldValues>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 1</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//date to check - provided by client. if NULL, returns all data
LET $date := D(HASH_GET(HASH_GET([Raw], "query"), "date"));

//get list of ACM columns to retrieve from KPI Target eForm
LET $targetCols :=
ARRAY(
	"RecordID",
	"Contract Number",
	"Description",
	"Start Date",
	"End Date",
	"Target",
	"Target Unit",
	"Vendor RecordID"
);

//get list of ACM columns to retrieve from KPI Performance eForm
LET $performanceCols :=
ARRAY(
	"RecordID",
	"Contract Number",
	"Status",
	"Start Date",
	"End Date",
	"Achieved Value",
	"Target",
	"Date of Result",
	"Result"
);

//lookup KPI Performance data
LET $kpiPerformanceData :=
DB_LOOKUPALL(
	$performanceCols,
	"KPI Performance",
	"[LineNumber] FAST_EQUAL_TO 1 AND [DateLastUpdated] &gt;= " &amp; DB_ENCODECONSTANT($date)
);

//lookup KPI Target data - include all data updated after date provided, or any KPI Target where a Performance Record has been updated
LET $kpiTargetData :=
DB_LOOKUPALL(
	$targetCols,
	"KPI Target",
	"[LineNumber] FAST_EQUAL_TO 1 AND [Contract Number] IN " &amp; DB_ENCODECONSTANT(ARRAY_SELECT($kpiPerformanceData, $(i,item) ARRAY_INDEX($item,2))) &amp; " OR [DateLastUpdated] &gt;= " &amp; DB_ENCODECONSTANT($date)
);

//get vendor data for all KPI Targets returned
LET $vendorData :=
DB_LOOKUPALL(
	ARRAY("RecordID", "Company Name"),
	"Vendor",
	"[LineNumber] FAST_EQUAL_TO 1 AND [RecordID] IN " &amp; DB_ENCODECONSTANT(ARRAY_SELECT($kpiTargetData, $(i,item) ARRAY_INDEX($item,8)))
);

//group KPI performance data by Parent RecordID
LET $performanceHash :=
ARRAY_TO_HASH_GROUPED(
	$kpiPerformanceData, $(i,item) ARRAY_INDEX(EBMS_GET_PARENT_RECORD("KPI Performance", ARRAY_INDEX($item,1)),2),
	$(i,item) INDEXES_TO_KEYS($item, $performanceCols)
);

//Hash KPI Target data
LET $targetHash := ARRAY_SELECT($kpiTargetData, $(i, item) INDEXES_TO_KEYS($item, $targetCols));

//create an array of hashes using friendly names as key
LET $requiredData :=
ARRAY_SELECT(
	$targetHash, $(k,kpi)
	//get array of KPI performance data where the parent RecordID matches the RecordID for this KPI Target
	LET $performances := HASH_GET($performanceHash, HASH_GET($kpi,"RecordID"));
	RETURN
	
	HASH(
		"Contract Number", 	HASH_GET($kpi, "Contract Number"),
		"Vendor",			ARRAY_INDEX(ARRAY_FIRST(ARRAY_WHERE($vendorData, $(i,item) ARRAY_INDEX($item, 1) = HASH_GET($kpi, "Vendor RecordID"))),2),
		"KPI Description", 	HASH_GET($kpi, "Description"),
		"Start Date",		HASH_GET($kpi, "Start Date"),
		"End Date",			HASH_GET($kpi, "End Date"),
		"Target", 			HASH_GET($kpi, "Target"),
		"Target Unit",		HASH_GET($kpi, "Target Unit"),
		//Hashing performance data against each KPI Target
		"KPI Performances",
		ARRAY_SELECT(
			$performances, $(p,performance)
			HASH(
				"Status", 				HASH_GET($performance, "Status"),
				"Period Start Date", 	HASH_GET($performance, "Start Date"),
				"Period End Date",		HASH_GET($performance, "End Date"),
				"Achieved Value",		HASH_GET($performance, "Achieved Value"),
				"Target",				HASH_GET($performance, "Target"),
				"Result",				HASH_GET($performance, "Result"),
				"Result Date",			HASH_GET($performance, "Date of Result")
			)
		)
	)
);

//Return JSON encoded data
RETURN JSONENCODE($requiredData)</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Get KPI Data</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>[Temp 2] = "KPI"</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </ChangeFieldValues>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 1</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//date to check - provided by client. if NULL, returns all data
LET $date := D(HASH_GET(HASH_GET([Raw], "query"), "date"));

//get list of ACM columns to retrieve from milestone eForm
LET $columns :=
ARRAY(
	"RecordID",
	"Contract Number",
	"Milestone",
	"Planned Date",
	"Date",
	"Status",
	"Responsible Person",
	"Type",
	"Description"
);

LET $milestoneData :=
DB_LOOKUPALL(
	$columns,
	"Milestone",
	"[LineNumber] FAST_EQUAL_TO 1 AND [DateLastUpdated] &gt;= " &amp; DB_ENCODECONSTANT($date)
);

//Hash milestone data
LET $milestoneHash := ARRAY_SELECT($milestoneData, $(i, item) INDEXES_TO_KEYS($item, $columns));

//prepare the data to be returned as a hash of "friendly" field names
LET $requiredData :=
ARRAY_SELECT($milestoneHash, $(m, milestone)
	HASH(
		"Contract Number",	HASH_GET($milestone, "Contract Number"),
		"Milestone",		HASH_GET($milestone, "Milestone"),
		"Type",				HASH_GET($milestone, "Type"),
		"Status",			HASH_GET($milestone, "Status"),
		"Assignee",			EBMS_GET_ROLE_DISPLAYNAME(HASH_GET($milestone, "Responsible Person")),
		"Planned Date",		HASH_GET($milestone, "Planned Date"),
		"Actual Date",		HASH_GET($milestone, "Date"),
		"Description",		HASH_GET($milestone, "Description")
	)
);


//return JSON encoded data
RETURN JSONENCODE($requiredData)</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Get Milestone Data</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>[Temp 2] = "Milestone"</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </ChangeFieldValues>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 1</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//date to check - provided by client. if NULL, returns all data
LET $date := D(HASH_GET(HASH_GET([Raw], "query"), "date"));

//get columns to retrieve from PO and PO Receipt forms
LET $columns :=
ARRAY(
	"RecordID",
	"Status",
	"Contract Number",
	"Purchase Order Number",
	"Vendor Name",
	//Item Data
	"Item - Number",
	"Item - Description",
	"Item - Tax ID",
	"Already Received Amount", 
	
	"Total Received"
);

LET $poData :=
DB_LOOKUPALL(
	$columns,
	"Purchase Order",
	"[DateLastUpdated] &gt;= " &amp; DB_ENCODECONSTANT($date)
);

LET $hashedPOs := ARRAY_SELECT($poData, $(i, item) INDEXES_TO_KEYS($item, $columns));

LET $itemHash :=
ARRAY_TO_HASH_GROUPED(
	$poData, $(i,item) ARRAY_INDEX($item, 1),
	$(i,item) INDEXES_TO_KEYS($item, $columns)
);


LET $requiredData :=
ARRAY_DISTINCT(
	ARRAY_SELECT(
		$hashedPOs, $(p,purchaseOrder)
		LET $poItems := HASH_GET($itemHash, HASH_GET($purchaseOrder, "RecordID"));
		RETURN
		HASH(
			"Contract Number",			HASH_GET($purchaseOrder, "Contract Number"),
			"Purchase Order Number",	HASH_GET($purchaseOrder, "Purchase Order Number"),
			"Status",					HASH_GET($purchaseOrder, "Status"),
			"Vendor",					HASH_GET($purchaseOrder, "Vendor Name"),
			"Item Data",
			ARRAY_SELECT(
				$poItems, $(i,item)
				HASH(
					"Item Number", 		HASH_GET($item, "Item - Number"),
					"Item Description",	HASH_GET($item, "Item - Description"),
					"Received Value",	HASH_GET($item, "Already Received Amount"),
					"Tax Code",			HASH_GET($item, "Item - Tax ID")
				)
			),
			"Total Order Received Including Tax",			HASH_GET($purchaseOrder, "Total Received")
		)
	)
);

RETURN JSONENCODE($requiredData)</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Get Purchase Order Data</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>[Temp 2] = "Purchase Order"</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </ChangeFieldValues>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Return Value</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>LET $targetForms := ARRAY("Contract", "Variation", "Risk", "Action", "KPI", "Milestone", "Purchase Order");

LET $validTarget := ARRAY_INDEXOF($targetForms, [Temp 2]) &gt; 0;

LET $validDate := NOT(ISERROR(D(HASH_GET(HASH_GET([Raw], "query"), "date"))));

RETURN

IF(
  	//error if no target form is specified
  	ISBLANK([Temp 2]),
  	HASH(
	  	"statusCode", 400,
	  	"body", JSONENCODE(HASH("message", "No target form specified."))
	),
  	//error if form specified is not a valid target
  	NOT($validTarget),
  	HASH(
	  	"statusCode", 400,
	  	"body", JSONENCODE(HASH("message", "Invalid target form provided."))
	),
  	//error if date specified is not a valid target
  	NOT($validDate),
  	HASH(
	  	"statusCode", 400,
	  	"body", JSONENCODE(HASH("message", "Invalid date provided."))
	),
  	//if successful return data
  	HASH(
	  	"statusCode", 200,
	  	"body", [Ephemeral 1]
	 )
)</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Status Code</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET([Return Value], "statusCode")</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Set Return Value</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <Save>
          <WorkflowNotesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <DisplaySuccessMessage>false</DisplaySuccessMessage>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </Save>
        <AttachFiles>
          <Attachments>
            <TextFile>
              <ContentTemplate>{[Ephemeral 1]}</ContentTemplate>
              <FilenameTemplate>body.txt</FilenameTemplate>
            </TextFile>
          </Attachments>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetRecordsFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetPathTemplate>Result Files</TargetPathTemplate>
          <UpdateTargetRecord>false</UpdateTargetRecord>
          <CredentialToken xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <PushCreatedFilesIntoColumn xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <Description>Attach raw body as a file (From [Ephemeral 1])</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </AttachFiles>
      </Tasks>
    </Event>
    <Event>
      <Name>Cenitex - Receive FinOps Spend Data</Name>
      <Guid>f3df2d24-7b79-4c54-afc2-bf7010f93db0</Guid>
      <Description>Triggered by Web Event. Integration workflow for Cenitex to bring in Purchase Order data from FinOps</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Temp</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>JSONDECODE(HASH_GET([Raw], "body"))</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Return Value</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>IF(
  	ARRAY_LENGTH([Temp]) = 0,
	HASH(
	  	"statusCode", 400,
	  	"body", JSONENCODE(HASH("message", "No transaction data supplied."))
	),
  	HASH(
		"statusCode", 202,
		"body", JSONENCODE(HASH("message", "Transaction data was successfully received and will begin processing at 10:00pm AEST"))
  	)
)</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Status Code</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET([Return Value], "statusCode")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Email Content</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula>1</LineNumberFormula>
              <Formula>"The Purchase Order data sent on " &amp; TODAY() &amp; " has been successfully received by the system and will begin processing at 10:00pm (AEST)." </Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Set Return Value, Data Needs Processing = TRUE</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <RaiseLinkedEForm>
          <EFormRef>Integration Data</EFormRef>
          <NewRecordIDFormula></NewRecordIDFormula>
          <NewRecordCountFormula>LET $data :=
IF(
	NOT(ISARRAY([Temp])),
	ARRAY([Temp]),
	[Temp]
);

LET $sortedByContract := 
	ARRAY_TO_HASH_GROUPED(
		$data, 
		$(k, key) HASH_GET($key,"CONTRACT_NUMBER"),
		$(v, value) $value
	);

RETURN CEILING(ARRAY_LENGTH(HASH_KEYS($sortedByContract)) / 25)</NewRecordCountFormula>
          <MakeChildOfContextRecord>false</MakeChildOfContextRecord>
          <AlternativeParentRecord xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <Attachments />
          <AttachmentsFolderTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <PushCreatedRecordIDIntoColumn xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Integration Workflow</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>[Integration Workflow]</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Created By</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>"Web Event"</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Return Value</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>[Return Value]</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Status Code</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>[Status Code]</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Raw</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>LET $data := 
IF(
	NOT(ISARRAY([Temp])),
	ARRAY([Temp]),
	[Temp]
);

LET $sortedByContract := 
	ARRAY_TO_HASH_GROUPED(
		$data, 
		$(k, key) HASH_GET($key,"CONTRACT_NUMBER"),
		$(v, value) $value
	);

LET $poData := ARRAY_SELECT(HASH_KEYS($sortedByContract), $(i, item) HASH_GET($sortedByContract, $item));
	
RETURN ARRAY_SELECTMANY(ARRAY_TAKE(ARRAY_SKIP($poData, 25 * ($count - 1)), 25), $(i, item) $item)</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Data Needs Processing</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>TRUE</Formula>
            </FieldEntry>
          </FieldEntries>
          <Description>Groups data by contract and creates a record per 25 contracts</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </RaiseLinkedEForm>
        <Save>
          <WorkflowNotesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <DisplaySuccessMessage>false</DisplaySuccessMessage>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </Save>
      </Tasks>
    </Event>
    <Event>
      <Name>Cenitex - Receive FinOps Spend Data - Purchase Order Receipts</Name>
      <Guid>ca990901-e9c0-4543-8dfd-60561fcce986</Guid>
      <Description>Scheduled Event to create Purchase Order Receipts from FinOps Invoice data</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Temp 2</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//get existing purchase orders from incoming data
LET $invoiceIDs := ARRAY_DISTINCT(ARRAY_SELECT([Raw], $(i,item) HASH_GET($item, "INVOICE_ID") &amp; " - " &amp; HASH_GET($item, "INVOICE_NUM")));
LET $existingInvoices := DB_LOOKUPALL(
	ARRAY("RecordID","Receiver Number"),
	"Purchase Order Receipt",
	"[LineNumber] FAST_EQUAL_TO 1 AND [Receiver Number] IN " &amp; DB_ENCODECONSTANT($invoiceIDs)
);

RETURN $existingInvoices</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Temp</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//filter raw data for existing Purchase Order Receipts
LET $data := ARRAY_WHERE([Raw], $(i,item) ARRAY_INDEXOF(ARRAY_INDEX(ARRAY_TRANSPOSE([Temp 2]),2), HASH_GET($item, "INVOICE_ID") &amp; " - " &amp; HASH_GET($item, "INVOICE_NUM")) &gt; 0);

LET $taxPercentage := DB_LOOKUP("Default Tax Percentage", "Global Settings", "[RecordID] FAST_EQUAL_TO 1");

//group based on unique identifier
LET $grouped := ARRAY_TO_HASH_GROUPED($data, $(k, key) HASH_GET($key, "INVOICE_ID") &amp; " - " &amp; HASH_GET($key, "INVOICE_NUM"),$(v, value) $value);

//get list of Invoice IDs
LET $keys := HASH_KEYS($grouped);

//For each unique PO Number, get required data
LET $requiredData :=
ARRAY_SELECT($keys, $(k,key)
	LET $receipts := HASH_GET($grouped, $key);
	LET $sortedReceipts := ARRAY_SORT($receipts, $(item) N(HASH_GET($item,"INVOICE_ID") &amp; " - " &amp; HASH_GET($item, "INVOICE_NUM")));
	LET $data :=
		ARRAY_SELECT(
			$sortedReceipts, $(r,receiptNumber)
				HASH(
				"RecordID",					ARRAY_INDEX(ARRAY_FIRST(ARRAY_WHERE([Temp 2], $(i,item) ARRAY_INDEX($item, 2) = HASH_GET($receiptNumber, "INVOICE_ID") &amp; " - " &amp; HASH_GET($receiptNumber, "INVOICE_NUM"))), 1),
				"Receiver Number",			HASH_GET($receiptNumber, "INVOICE_ID") &amp; " - " &amp; HASH_GET($receiptNumber, "INVOICE_NUM"),
				"PO Number",				HASH_GET($receiptNumber, "PO_NUMBER"),
				"Item - Line Number",		IF(HASH_GET($receiptNumber, "PO_LINE_NUMBER") == "&lt;NULL&gt;", N(0), N(HASH_GET($receiptNumber, "PO_LINE_NUMBER"))),
				"Item - Description",		HASH_GET($receiptNumber, "INVOICE_DESCRIPTION"),
				"Received Amount",			HASH_GET($receiptNumber, "EX-GST_AMOUNT"),
				"Item Type",			   	"Amount",
				"UOM",						"Amount",
				"Item - Tax Multiplier",	IF(HASH_GET($receiptNumber,"TAX_AMOUNT") &gt; 0, N(1 + ($taxPercentage / 100)), N(1))
			)
		);
	RETURN $data
);

RETURN $requiredData</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Get list of existing invoices and transform invoice data</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <DisplayMessage>
          <MessageTemplate>Starting bulk create/update of PO receipts</MessageTemplate>
          <MessageType>Notice</MessageType>
          <Description>Starting bulk create/update of PO receipts</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </DisplayMessage>
        <FormulaDrivenChangeFieldValues>
          <TargetRecordsFormula>LET $data := ARRAY_WHERE([Raw], $(i,item) ARRAY_INDEXOF(ARRAY_INDEX(ARRAY_TRANSPOSE([Temp 2]),2),HASH_GET($item, "INVOICE_ID") &amp; " - " &amp; HASH_GET($item, "INVOICE_NUM")) &gt; 0);

LET $recordstoUpdate :=
ARRAY_SELECT(
	$data, $(i,item)
	ARRAY_INDEX(ARRAY_FIRST(ARRAY_WHERE([Temp 2], $(j,jtem) ARRAY_INDEX($jtem,2) = HASH_GET($item,"INVOICE_ID") &amp; " - " &amp; HASH_GET($item, "INVOICE_NUM"))),1)
);

RETURN ARRAY_DISTINCT(ARRAY_SELECT($recordstoUpdate,$(i,item) ARRAY("Purchase Order Receipt",$item)))</TargetRecordsFormula>
          <FieldValuesFormula>//get target RecordID
LET $thisRecord := target.[RecordID];

LET $columns := HASH_KEYS(ARRAY_FIRST(ARRAY_FIRST([Temp])));

//get current data from target record
LET $rawValues :=
DB_LOOKUPALL(
	$columns,
	"Purchase Order Receipt",
	HASH("RecordID", $thisRecord)
);

LET $currentValues := ARRAY_SELECT($rawValues,$(i,item) INDEXES_TO_KEYS($item,$columns));

//find data which relates to current record and combine into single array
LET $requiredValues := ARRAY_FIRST(ARRAY_WHERE([Temp],$(i,item) HASH_GET(ARRAY_FIRST($item),"RecordID") = $thisRecord));
LET $combinedData := ARRAY(ARRAY_CONCAT($requiredValues,$currentValues));
//filter for distinct data
LET $distinctData :=
ARRAY_SELECT(
	$combinedData, $(d, data) 
		LET $purchaseOrderData := ARRAY_DISTINCT($data);
		LET $columns := ARRAY_DISTINCT(HASH_KEYS(ARRAY_FIRST($purchaseOrderData)));
		LET $values := ARRAY_SELECT($columns, $(c, col) ARRAY_SELECT($purchaseOrderData, $(p, po) HASH_GET($po, $col)));
		
		RETURN INDEXES_TO_KEYS($values, $columns)
);

RETURN ARRAY_INDEX($distinctData,1)</FieldValuesFormula>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Update existing Receipts</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </FormulaDrivenChangeFieldValues>
        <BulkCreateRecords>
          <EFormTypeFormula>"Purchase Order Receipt"</EFormTypeFormula>
          <FieldValuesFormula>//filter raw data for new Purchase Orders
LET $data :=
ARRAY_WHERE([Raw], $(i,item) ARRAY_INDEXOF(ARRAY_INDEX(ARRAY_TRANSPOSE([Temp 2]),2),HASH_GET($item, "INVOICE_ID") &amp; " - " &amp; HASH_GET($item, "INVOICE_NUM")) &lt; 0);


//distinct list of Parent Numbers
LET $parentNumbers := ARRAY_DISTINCT(ARRAY_SELECT($data, $(i, item) HASH_GET($item, "PO_NUMBER")));
LET $parentPO := DB_LOOKUPALL(ARRAY("RecordID", "Purchase Order Number", "Vendor", "Item - Tax Multiplier", "Item - Number"), "Purchase Order", "[LineNumber] FAST_EQUAL_TO 1 AND [Purchase Order Number] IN " &amp; DB_ENCODECONSTANT($parentNumbers));

LET $parentHash := ARRAY_TO_HASH_GROUPED($parentPO, $(k, key) ARRAY_INDEX($key, 2), $(v, value) ARRAY_INDEX($value, 1));
LET $vendorHash := ARRAY_TO_HASH_GROUPED($parentPO, $(k, key) ARRAY_INDEX($key, 2), $(v, value) ARRAY_INDEX($value, 3));
LET $taxMultiplierHash := ARRAY_TO_HASH_GROUPED($parentPO, $(k, key) ARRAY(ARRAY_INDEX($key, 5), ARRAY_INDEX($key, 2)), $(v, value) ARRAY_INDEX($value, 4));

//grouping data based on unique identifier of form i.e. Invoice Number
LET $grouped := 
ARRAY_TO_HASH_GROUPED(
	$data, 
	$(k, key) HASH_GET($key, "INVOICE_ID") &amp; " - " &amp; HASH_GET($key, "INVOICE_NUM"),
	$(v, value) $value		
);

//get list of unique identifiers (Invoice Numbers
LET $keys := ARRAY_WHERE(HASH_KEYS($grouped), $(i, item) AND($item &lt;&gt; "0", $item &lt;&gt; 0));

//for each unique identifier, only get data from required columns then sort by LineNumber
LET $requiredData := 
ARRAY_SELECT($keys, $(k, key)
	LET $receiptNumbers := HASH_GET($grouped, $key);
	LET $data := 
		ARRAY_SELECT(
			$receiptNumbers, $(r, receiptNumber) 
			HASH(
				"Receiver Number",			HASH_GET($receiptNumber, "INVOICE_ID") &amp; " - " &amp; HASH_GET($receiptNumber, "INVOICE_NUM"),
				"PO Number",				HASH_GET($receiptNumber, "PO_NUMBER"),
				"Vendor ID",				ARRAY_FIRST(HASH_GET($vendorHash, HASH_GET($receiptNumber, "PO_NUMBER"))),
				"Received Date",			HASH_GET($receiptNumber,"INVOICE_PAYMENT_DATE"),
				"Item - Line Number",		IF(HASH_GET($receiptNumber, "PO_LINE_NUMBER") == "&lt;NULL&gt;", N(0), N(HASH_GET($receiptNumber, "PO_LINE_NUMBER"))),
				"Item - Description",		HASH_GET($receiptNumber, "INVOICE_DESCRIPTION"),
				"Unit Price",				HASH_GET($receiptNumber, "EX-GST_AMOUNT"),
				"Received Amount",			HASH_GET($receiptNumber, "EX-GST_AMOUNT"),
				"Item Type",			   	"Amount",
				"UOM",						"Amount",
				"Item - Tax Multiplier",	IF(HASH_GET($receiptNumber, "TAX_AMOUNT") = 0, N(1), ARRAY_FIRST(HASH_GET($taxMultiplierHash, ARRAY(N(HASH_GET($receiptNumber, "PO_LINE_NUMBER")), HASH_GET($receiptNumber, "PO_NUMBER"))))),
				"Status",					"Success"
			)
		);
	RETURN ARRAY_SORT($data, $(item) ARRAY_INDEX($item, ARRAY_INDEXOF(HASH_KEYS(ARRAY_FIRST($data)), "Item - Line Number")))
);

//remove any duplicated data then transform into HASH(key, ARRAY(value)) structure. One hash per record to be created					
LET $distinctData := 
ARRAY_SELECT(
	$requiredData, $(d, data) 
			LET $receiptNumbers := ARRAY_DISTINCT($data);
			LET $columns := ARRAY_DISTINCT(HASH_KEYS(ARRAY_FIRST($receiptNumbers)));
			LET $values := ARRAY_SELECT($columns, $(c, col) ARRAY_SELECT($receiptNumbers, $(r, receipt) HASH_GET($receipt, $col)));
			
	RETURN INDEXES_TO_KEYS($values, $columns)
);

//regroup by unique identifier
LET $content :=
ARRAY_TO_HASH_GROUPED(
	$distinctData, 
	$(k, key) ARRAY_FIRST(HASH_GET($key, "Receiver Number")),
	$(v, value) $value
);
RETURN

ARRAY_SELECT($keys, $(k, key)
	LET $receiptNumber := ARRAY_FIRST(HASH_GET($grouped, $key));
	LET $parent := ARRAY_FIRST(HASH_GET($parentHash, HASH_GET($receiptNumber, "PO_NUMBER")));
	
	RETURN
	IF(
		ISNULL($parent),
	  
		HASH(
			//Used to search for records that match these values. If found, it will update the record rather than create new records. Structure: HASH("fieldMatch1", "matchValue1", ("fieldMatch2", "matchValue2"), ...)
			"match", 
				HASH(
					"Receiver Number",	HASH_GET($receiptNumber, "INVOICE_ID" &amp; " - " &amp; HASH_GET($receiptNumber, "INVOICE_NUM")),		
					"PO Number", 		HASH_GET($receiptNumber, "PO_NUMBER") 
				),
			//content of the records to be created. Structure: HASH("field1", ARRAY("value1", "value2"), "field2", ARRAY("valueA", "valueB"), ...)
			"content", ARRAY_FIRST(HASH_GET($content, $key))
		),
	  
		HASH(
			//Used to search for records that match these values. If found, it will update the record rather than create new records. Structure: HASH("fieldMatch1", "matchValue1", ("fieldMatch2", "matchValue2"), ...)
			"match", 
				HASH(
					"Receiver Number",	HASH_GET($receiptNumber, "INVOICE_ID") &amp; " - " &amp; HASH_GET($receiptNumber, "INVOICE_NUM"),		
					"PO Number", 		HASH_GET($receiptNumber, "PO_NUMBER") 
				),
			//content of the records to be created. Structure: HASH("field1", ARRAY("value1", "value2"), "field2", ARRAY("valueA", "valueB"), ...)
			"content", ARRAY_FIRST(HASH_GET($content, $key)),

			//parent record to link the created records to. Structure: ARRAY("EFormType", "RecordID")
			"parent", ARRAY("Purchase Order", $parent)
		)
	)
 )</FieldValuesFormula>
          <BatchSize>100</BatchSize>
          <ResultsIntoColumn>Temp 2</ResultsIntoColumn>
          <Description>Create Purchase Order Receipt Records</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </BulkCreateRecords>
        <DisplayMessage>
          <MessageTemplate>PO Receipts Created/Updated</MessageTemplate>
          <MessageType>Notice</MessageType>
          <Description>PO Receipts Created/Updated</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </DisplayMessage>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Temp</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>ARRAY_CONCAT([Temp], HASH("CreatedPOData", [Temp 2]))</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Email Content</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula>1</LineNumberFormula>
              <Formula>LET $receiverNumbers := 
	ARRAY_DISTINCT(
	  	ARRAY_WHERE(
		  	ARRAY_SELECT([Raw], $(i, item) HASH_GET($item, "INVOICE_ID") &amp; " - " &amp; HASH_GET($item, "INVOICE_NUM")),
		  	$(j, jtem) 
		  	AND($jtem &lt;&gt; "0" ,$jtem &lt;&gt; 0)
		)
	);

LET $POReceiptNimblex := 
	DB_LOOKUPALL(
		"RecordID", 
		"Purchase Order Receipt", 
		"[LineNumber] FAST_EQUAL_TO 1 AND [Receiver Number] IN " &amp; DB_ENCODECONSTANT($receiverNumbers)
	);
	
LET $updatedPOData := HASH_GET(ARRAY_LAST([Temp]), "CreatedPOData");

RETURN
 IF(
	ARRAY_LENGTH(ARRAY_INTERSECT($POReceiptNimblex,$updatedPOData)) = ARRAY_LENGTH($updatedPOData),
  	"Success! The integration on " &amp; TODAY() &amp; " was successful.",
  	"Warning! There was an error when importing transaction data from FinOps to Nimblex on " &amp; TODAY() &amp; "." &amp; NEWLINE() &amp; NEWLINE() &amp; "The .json file for this import was sent on " &amp; [DateCreated] &amp; "."
)</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Temp 2</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>NULL</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Data Processed</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>TRUE</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Data Needs Processing</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>FALSE</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>PO Data: Check Errors, populate email content, Set Data Processed = TRUE, Data Needs Processing False.</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </ChangeFieldValues>
        <Save>
          <WorkflowNotesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <DisplaySuccessMessage>false</DisplaySuccessMessage>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </Save>
        <DisplayMessage>
          <MessageTemplate>Updating PO/Contract data</MessageTemplate>
          <MessageType>Notice</MessageType>
          <Description>Updating PO/Contract data</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </DisplayMessage>
        <TriggerCustomEvent>
          <EventNameTemplate>Update Information</EventNameTemplate>
          <TraceNameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetRecordsFormula>LET $purchaseOrders :=
DB_LOOKUPALL(
  "RecordID",
  "Purchase Order",
  "[Purchase Order Number] IN " &amp; DB_ENCODECONSTANT(ARRAY_SELECT([Raw], $(i,item) HASH_GET($item, "PO_NUMBER")))
);

RETURN ARRAY_DISTINCT(ARRAY_SELECT($purchaseOrders, $(i, item) ARRAY("Purchase Order", $item)))</TargetRecordsFormula>
          <EventArgumentsFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <ResultIntoColumn xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RetainLastResultOnly>false</RetainLastResultOnly>
          <CredentialToken xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <ShowWarningIfNoMatchingEvent>false</ShowWarningIfNoMatchingEvent>
          <RunInsideDataLayer>false</RunInsideDataLayer>
          <Description>Update PO Records</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </TriggerCustomEvent>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Temp</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>LET $contractNumbers := ARRAY_DISTINCT(ARRAY_SELECT([Raw], $(i,item) HASH_GET($item, "CONTRACT_NUMBER")));

LET $data := DB_REPORT(
	ARRAY("[Contract Number]","SUM([Total Received])"),
	"Purchase Order",
	"[LineNumber] FAST_EQUAL_TO 1 AND [Contract Number] IN " &amp; DB_ENCODECONSTANT($contractNumbers)
);

LET $contractExpenditure :=
ARRAY_TO_HASH($data,$(i,item)
	ARRAY_INDEX($item,1),
	$(i,item)
	HASH(
		"Expenditure to Date", ARRAY_INDEX($item,2)
	)
);

RETURN $contractExpenditure</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Get Expenditure to Date</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </ChangeFieldValues>
        <FormulaDrivenChangeFieldValues>
          <TargetRecordsFormula>LET $contractNumbers := ARRAY_DISTINCT(ARRAY_SELECT([Raw], $(i,item) HASH_GET($item, "CONTRACT_NUMBER")));

LET $recordstoUpdate := DB_LOOKUPALL(
  "RecordID",
  "Contract",
  "[LineNumber] FAST_EQUAL_TO 1 AND [Contract Number] IN " &amp; DB_ENCODECONSTANT($contractNumbers)
);

RETURN ARRAY_DISTINCT(ARRAY_SELECT($recordstoUpdate,$(i,item) ARRAY("Contract",$item)))</TargetRecordsFormula>
          <FieldValuesFormula>HASH_GET([Temp],target.[Contract Number])</FieldValuesFormula>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Update Expenditure on Contract records</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </FormulaDrivenChangeFieldValues>
        <DisplayMessage>
          <MessageTemplate>PO/Contract data updated</MessageTemplate>
          <MessageType>Notice</MessageType>
          <Description>PO/Contract data updated</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </DisplayMessage>
        <Notification>
          <AttachRecordViewAsPdf>false</AttachRecordViewAsPdf>
          <SendEmailImmediately>true</SendEmailImmediately>
          <AttachLogo>false</AttachLogo>
          <AttachRecordViewName xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <AttachedRecordViewFilenameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <Attachments />
          <DontSendToCurrentRole>false</DontSendToCurrentRole>
          <Template>
            <ToAddressesTemplate>role:"david.gardner@mildura.vic.gov.au"</ToAddressesTemplate>
            <CcAddressesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
            <BccAddressesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
            <ReplyToAddressesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
            <SubjectTemplate>ERROR: CIVICA Integration Import</SubjectTemplate>
            <BodyTemplate>Dear user,

{[Email Notification]}
  	
Refer to this link: {EBMS_GET_EFORMRECORD_URL([EFormType], [RecordID])}

Regards,
Nimblex</BodyTemplate>
            <IsBodyHtml>false</IsBodyHtml>
            <UseDefaultFrame>true</UseDefaultFrame>
          </Template>
          <LibraryEmailTemplateNameTemplate>Integration Alert</LibraryEmailTemplateNameTemplate>
          <Location>Library</Location>
          <DisplayLogMessages>true</DisplayLogMessages>
          <SendFromTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <Description>Integration Alert</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>N([Status Code]) &lt;&gt; 202</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </Notification>
        <DeleteEFormRecordsTask>
          <EFormRef>Integration Data</EFormRef>
          <RecordFilter>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <TextCriterion>
                      <Text>(TO_DAY([DateCreated]) &lt; (CURRENT_DATE - 14) AND [Data Processed] = TRUE) OR (TO_DAY([DateCreated]) &lt; (CURRENT_DATE - 56) AND [Data Processed] &lt;&gt; TRUE)</Text>
                    </TextCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RecordFilter>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </DeleteEFormRecordsTask>
      </Tasks>
    </Event>
    <Event>
      <Name>Cenitex - Receive FinOps Spend Data - Scheduled Event</Name>
      <Guid>90cb4447-82c4-4667-972c-d2856cf8bb46</Guid>
      <Description>Scheduled event to create/update Purchase Order data from FinOps</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Temp 2</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//get existing purchase orders from incoming data
LET $poNumbers := ARRAY_DISTINCT(ARRAY_SELECT([Raw], $(i,item) HASH_GET($item, "PO_NUMBER")));
LET $existingPOs := DB_LOOKUPALL(
	ARRAY("RecordID","Purchase Order Number"),
	"Purchase Order",
	"[LineNumber] FAST_EQUAL_TO 1 AND [Purchase Order Number] IN " &amp; DB_ENCODECONSTANT($poNumbers)
);

RETURN $existingPOs</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Temp</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//filter raw data for existing Purchase Orders
LET $data := ARRAY_WHERE([Raw], $(i,item) ARRAY_INDEXOF(ARRAY_INDEX(ARRAY_TRANSPOSE([Temp 2]),2),HASH_GET($item, "PO_NUMBER")) &gt; 0);

LET $taxPercentage := DB_LOOKUP("Default Tax Percentage", "Global Settings", "[RecordID] FAST_EQUAL_TO 1");

//group based on unique identifier
LET $grouped := ARRAY_TO_HASH_GROUPED($data, $(k, key) HASH_GET($key, "PO_NUMBER"),$(v, value) $value);

//get list of PO numbers
LET $keys := HASH_KEYS($grouped);

//For each unique PO Number, get required data
LET $requiredData :=
ARRAY_SELECT($keys, $(k,key)
	LET $purchaseOrders := HASH_GET($grouped, $key);
	LET $sortedPOData := ARRAY_SORT($purchaseOrders, $(item) N(HASH_GET($item,"PO_NUMBER")));
	LET $data :=
		ARRAY_SELECT(
			$sortedPOData, $(p,purchaseOrder)
				HASH(
				  	"RecordID", ARRAY_INDEX(ARRAY_FIRST(ARRAY_WHERE([Temp 2],$(i,item) ARRAY_INDEX($item,2) = HASH_GET($purchaseOrder,"PO_NUMBER"))),1),
					"Purchase Order Number", HASH_GET($purchaseOrder,"PO_NUMBER"),
					"Item Type", "Amount",
					"Item - Tax ID", IF(HASH_GET($purchaseOrder, "TAX_AMOUNT") = 0, "No Tax", "Tax"),
					"Tax Percent",$taxPercentage,
					"Item - Description", HASH_GET($purchaseOrder,"INVOICE_DESCRIPTION"),
					"Item - Number", N(HASH_GET($purchaseOrder,"PO_LINE_NUMBER"))
				)
		);
	RETURN $data
);

RETURN $requiredData</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Get list of existing PO RecordIDs and Numbers, and transform PO data for updates</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <DisplayMessage>
          <MessageTemplate>Starting update of existing Purchase Orders</MessageTemplate>
          <MessageType>Notice</MessageType>
          <Description>Starting update of existing Purchase Orders</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </DisplayMessage>
        <FormulaDrivenChangeFieldValues>
          <TargetRecordsFormula>LET $data := ARRAY_WHERE([Raw], $(i,item) ARRAY_INDEXOF(ARRAY_INDEX(ARRAY_TRANSPOSE([Temp 2]),2),HASH_GET($item, "PO_NUMBER")) &gt; 0);

LET $recordstoUpdate :=
ARRAY_SELECT(
	$data, $(i,item)
	ARRAY_INDEX(ARRAY_FIRST(ARRAY_WHERE([Temp 2], $(j,jtem) ARRAY_INDEX($jtem,2) = HASH_GET($item,"PO_NUMBER"))),1)
);

RETURN ARRAY_DISTINCT(ARRAY_SELECT($recordstoUpdate,$(i,item) ARRAY("Purchase Order",$item)))</TargetRecordsFormula>
          <FieldValuesFormula>//get target RecordID
LET $thisRecord := target.[RecordID];

LET $columns := HASH_KEYS(ARRAY_FIRST(ARRAY_FIRST([Temp])));

//get current data from target record
LET $rawValues :=
DB_LOOKUPALL(
	$columns,
	"Purchase Order",
	HASH("RecordID", $thisRecord)
);

LET $currentValues := ARRAY_SELECT($rawValues,$(i,item) INDEXES_TO_KEYS($item,$columns));

//find data which relates to current record and combine into single array
LET $requiredValues := ARRAY_FIRST(ARRAY_WHERE([Temp],$(i,item) HASH_GET(ARRAY_FIRST($item),"RecordID") = $thisRecord));
LET $combinedData := ARRAY(ARRAY_CONCAT($requiredValues,$currentValues));
//filter for distinct data
LET $distinctData :=
ARRAY_SELECT(
	$combinedData, $(d, data) 
		LET $purchaseOrderData := ARRAY_DISTINCT($data);
		LET $columns := ARRAY_DISTINCT(HASH_KEYS(ARRAY_FIRST($purchaseOrderData)));
		LET $values := ARRAY_SELECT($columns, $(c, col) ARRAY_SELECT($purchaseOrderData, $(p, po) HASH_GET($po, $col)));
		
		RETURN INDEXES_TO_KEYS($values, $columns)
);

RETURN ARRAY_INDEX($distinctData,1)</FieldValuesFormula>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Update Existing Purchase Orders</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </FormulaDrivenChangeFieldValues>
        <DisplayMessage>
          <MessageTemplate>Existing POs updated, starting bulk create records for new POs</MessageTemplate>
          <MessageType>Notice</MessageType>
          <Description>Starting bulk PO creation</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </DisplayMessage>
        <BulkCreateRecords>
          <EFormTypeFormula>"Purchase Order"</EFormTypeFormula>
          <FieldValuesFormula>//filter raw data for new Purchase Orders
LET $data :=
ARRAY_WHERE([Raw], $(i,item) ARRAY_INDEXOF(ARRAY_INDEX(ARRAY_TRANSPOSE([Temp 2]),2),HASH_GET($item, "PO_NUMBER")) &lt; 0);

//get distinct list of Contracts and Vendors
LET $contractNumbers := ARRAY_DISTINCT(ARRAY_SELECT($data, $(i,item) HASH_GET($item, "CONTRACT_NUMBER")));
LET $vendorNames := ARRAY_DISTINCT(ARRAY_SELECT($data, $(i,item) HASH_GET($item, "VENDOR_NAME")));

//Lookup parent Contracts
LET $parentContracts :=
DB_LOOKUPALL(
	ARRAY("RecordID", "Contract Number", "Contract Title"),
	"Contract",
	"[LineNumber] FAST_EQUAL_TO 1 AND [Contract Number] IN " &amp; DB_ENCODECONSTANT($contractNumbers)
);

//lookup vendors
LET $vendors :=
DB_LOOKUPALL(
	ARRAY("RecordID", "Company Name"),
	"Vendor",
	"[LineNumber] FAST_EQUAL_TO 1 AND [Company Name] IN " &amp; DB_ENCODECONSTANT($vendorNames)
);

LET $taxPercentage := DB_LOOKUP("Default Tax Percentage", "Global Settings", "[RecordID] FAST_EQUAL_TO 1");
LET $parentHash := ARRAY_TO_HASH_GROUPED($parentContracts, $(k,key) ARRAY_INDEX($key,2), $(v,value) ARRAY_INDEX($value,1));

//group based on unique identifier
LET $grouped := ARRAY_TO_HASH_GROUPED($data, $(k, key) HASH_GET($key, "PO_NUMBER"),$(v, value) $value);

//get list of PO numbers
LET $keys := HASH_KEYS($grouped);

//For each unique PO Number, get required data
LET $requiredData :=
ARRAY_SELECT($keys, $(k,key)
	LET $purchaseOrders := HASH_GET($grouped, $key);
	LET $sortedPOData := ARRAY_SORT($purchaseOrders, $(item) N(HASH_GET($item,"PO_NUMBER")));
	LET $data :=
		ARRAY_SELECT(
			$sortedPOData, $(p,purchaseOrder)
				HASH(
					"Status", "Approved",
					"Parent", "Contract",
					"Parent Number", HASH_GET($purchaseOrder,"CONTRACT_NUMBER"),
					"Parent Title", ARRAY_INDEX(ARRAY_FIRST(ARRAY_WHERE($parentContracts,$(i,item) ARRAY_INDEX($item,2) = HASH_GET($purchaseOrder,"CONTRACT_NUMBER"))),3),
					"Contract Number", HASH_GET($purchaseOrder,"CONTRACT_NUMBER"),
					"Purchase Order Number", HASH_GET($purchaseOrder,"PO_NUMBER"),
					"Vendor", ARRAY_INDEX(ARRAY_FIRST(ARRAY_WHERE($vendors, $(i,item) ARRAY_INDEX($item,2) = HASH_GET($purchaseOrder, "VENDOR_NAME"))),1),
					"Vendor Name", HASH_GET($purchaseOrder,"VENDOR_NAME"),
					"Item Type", "Amount",
					"Item - Tax ID", IF(HASH_GET($purchaseOrder,"TAX_AMOUNT") = 0, "No Tax", "Tax"),
					"Tax Percent",$taxPercentage,
					"Item - Description", HASH_GET($purchaseOrder,"INVOICE_DESCRIPTION"),
					"Item - Number", HASH_GET($purchaseOrder,"PO_LINE_NUMBER")
				)
		);
	RETURN $data
);


//remove any duplicated data then transform into HASH(key, ARRAY(value)) structure. One hash per record to be created					
LET $distinctData := 
ARRAY_SELECT(
	$requiredData, $(d, data) 
			LET $purchaseOrderData := ARRAY_DISTINCT($data);
			LET $columns := ARRAY_DISTINCT(HASH_KEYS(ARRAY_FIRST($purchaseOrderData)));
			LET $values := ARRAY_SELECT($columns, $(c, col) ARRAY_SELECT($purchaseOrderData, $(p, po) HASH_GET($po, $col)));
			
			RETURN INDEXES_TO_KEYS($values, $columns)
);

//regroup by unique identifier
LET $content := 
ARRAY_TO_HASH_GROUPED(
	$distinctData, 
	$(k, key) ARRAY_FIRST(HASH_GET($key, "Purchase Order Number")),
	$(v, value) $value
);

RETURN

ARRAY_SELECT($keys, $(k, key)
	LET $purchaseOrder := ARRAY_FIRST(HASH_GET($grouped, $key));
	LET $parent := ARRAY_FIRST(HASH_GET($parentHash, HASH_GET($purchaseOrder, "CONTRACT_NUMBER")));
	
	RETURN
	IF(
		ISNULL($parent),
		HASH(
			//Used to search for records that match these values. If found, it will update the record rather than create new records. Structure: HASH("fieldMatch1", "matchValue1", ("fieldMatch2", "matchValue2"), ...)
			"match", 
			HASH(
				"Parent Number", HASH_GET($purchaseOrder , "CONTRACT_NUMBER"),
				"Purchase Order Number", HASH_GET($purchaseOrder , "PO_NUMBER")
			),
			//content of the records to be created. Structure: HASH("field1", ARRAY("value1", "value2"), "field2", ARRAY("valueA", "valueB"), ...)
			"content",
			ARRAY_FIRST(HASH_GET($content, $key))
		),
		HASH(
			//Used to search for records that match these values. If found, it will update the record rather than create new records. Structure: HASH("fieldMatch1", "matchValue1", ("fieldMatch2", "matchValue2"), ...)
			"match", 
			HASH(
				"Parent Number", HASH_GET($purchaseOrder , "CONTRACT_NUMBER"),
				"Purchase Order Number", HASH_GET($purchaseOrder , "PO_NUMBER")
			),
			//content of the records to be created. Structure: HASH("field1", ARRAY("value1", "value2"), "field2", ARRAY("valueA", "valueB"), ...)
			"content",
			ARRAY_FIRST(HASH_GET($content, $key)),
				
			//parent record to link the created records to
			"parent",
			ARRAY("Contract", $parent)
		)
	)
)</FieldValuesFormula>
          <BatchSize>100</BatchSize>
          <ResultsIntoColumn>Temp 2</ResultsIntoColumn>
          <Description>Create Purchase Order Records</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </BulkCreateRecords>
        <DisplayMessage>
          <MessageTemplate>Purchase Orders created</MessageTemplate>
          <MessageType>Notice</MessageType>
          <Description>POs Created</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </DisplayMessage>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Integration Workflow</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>"Cenitex - Receive FinOps Spend Data - Purchase Order Receipts"</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Created By</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>"Scheduled Event"</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Set Integration Workflow to "Cenitex - Receive FinOps Spend Data - Purchase Order Receipts"</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <DisplayMessage>
          <MessageTemplate>Flags updated</MessageTemplate>
          <MessageType>Notice</MessageType>
          <Description>Flags updated</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </DisplayMessage>
        <Save>
          <WorkflowNotesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <DisplaySuccessMessage>false</DisplaySuccessMessage>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </Save>
      </Tasks>
    </Event>
    <Event>
      <Name>Cenitex - Update Cost Centres from FinOps</Name>
      <Guid>cfb9eb40-1213-46b2-9ec2-67ce39f854bb</Guid>
      <Description>Integration Workflow for Cenitex to create and/or update Cost Centres from FinOps</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Temp</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>IF(
  	ISBLANK(HASH_GET([Raw],"body")),
  	NULL(),
  	JSONDECODE(HASH_GET([Raw],"body"))
)</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Get Raw Data</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <BulkCreateRecords>
          <EFormTypeFormula>"Cost Center"</EFormTypeFormula>
          <FieldValuesFormula>LET $raw :=
IF(
	NOT(ISARRAY([Temp])),
	ARRAY([Temp]),
	[Temp]
);

LET $data :=
ARRAY_SELECT($raw,$(i,item)
  	LET $ccNumber := HASH_GET($item, "COST_CENTRE");
  	LET $ccName := HASH_GET($item, "COST_CENTRE_DESCRIPTION");
  	RETURN
	HASH(
		"Number", $ccNumber,
		"Name", $ccName,
	  	"Description", IF(
		  	$ccNumber &lt;&gt; NULL(),
		  	IF($ccName &lt;&gt; NULL(), CONCATENATE($ccNumber," - ", $ccName), $ccNumber),
		  	IF($ccName &lt;&gt; NULL(), $ccName)
		)
	)
);

RETURN

ARRAY_SELECT(
	$data, $(i,item)
	HASH(
		"match", HASH("Number", HASH_GET($item, "Number")),
		"content", $item
	)
)</FieldValuesFormula>
          <BatchSize>100</BatchSize>
          <ResultsIntoColumn>Temp 2</ResultsIntoColumn>
          <Description>Create/Update Cost Center records</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </BulkCreateRecords>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Return Value</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH(
  	"statusCode",
  	IF(
	  	ARRAY_LENGTH(HASH_KEYS([Temp])) = 0, 400,
	  	ISBLANK([Temp 2]), 500,
		201
	),
  	"body",
	JSONENCODE(HASH(
	   	"message",
	   	IF(
		  	ARRAY_LENGTH(HASH_KEYS([Temp])) = 0,
		  	"No Cost Centre data supplied.",
		  	ISBLANK([Temp 2]),
		  	"Cost Centre data not updated. Contact VendorPanel Support.",
		  	"Cost Centre records updated successfully."
		)
	))
)</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Status Code</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET([Return Value], "statusCode")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Data Processed</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>TRUE</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Data Needs Processing</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>FALSE</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Set Return Value, Data Processed = TRUE, Data Needs Processing = FALSE</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <Save>
          <WorkflowNotesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <DisplaySuccessMessage>false</DisplaySuccessMessage>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </Save>
      </Tasks>
    </Event>
    <Event>
      <Name>Cenitex - Update Vendors from FinOps</Name>
      <Guid>c7a5f218-ff9a-42e3-b543-40408d7ccf9b</Guid>
      <Description>Integration workflow for Cenitex to create/update vendors from FinOps</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Temp</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>IF(
  	ISBLANK(HASH_GET([Raw],"body")),
  	NULL(),
  	JSONDECODE(HASH_GET([Raw],"body"))
)</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Get Raw Data</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <BulkCreateRecords>
          <EFormTypeFormula>"Vendor"</EFormTypeFormula>
          <FieldValuesFormula>LET $raw :=
IF(
	NOT(ISARRAY([Temp])),
	ARRAY([Temp]),
	[Temp]
);

LET $data :=
ARRAY_SELECT($raw,$(i,item)
	HASH(
		"Vendor ID", HASH_GET($item, "VENDOR_NUMBER"),
		"BusinessNumber", HASH_GET($item, "ABN"),
		"Company Name", HASH_GET($item, "VENDOR_NAME"),
		"Trading Name", HASH_GET($item, "VENDOR_NAME"),
		"Status", "Active",
		"Business Number Type", IF(HASH_GET($item, "ABN") &lt;&gt; NULL(), "ABN", "Other"),
		"Vendor Registered", TRUE
	)
);

RETURN

ARRAY_SELECT(
	$data, $(i,item)
	HASH(
		"match", HASH("Vendor ID", HASH_GET($item, "Vendor ID")),
		"content", $item
	)
)</FieldValuesFormula>
          <BatchSize>100</BatchSize>
          <ResultsIntoColumn>Temp 2</ResultsIntoColumn>
          <Description>Create/Update Vendor records</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </BulkCreateRecords>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Return Value</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH(
  	"statusCode",
  	IF(
	  	ARRAY_LENGTH(HASH_KEYS([Temp])) = 0, 400,
	  	ISBLANK([Temp 2]), 500,
		201
	),
  	"body",
	JSONENCODE(HASH(
	   	"message",
	   	IF(
		  	ARRAY_LENGTH(HASH_KEYS([Temp])) = 0,
		  	"No Vendor data supplied.",
		  	ISBLANK([Temp 2]),
		  	"Vendor data not updated. Contact VendorPanel Support.",
		  	"Vendor records updated successfully."
		)
	))
)</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Status Code</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET([Return Value], "statusCode")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Data Processed</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>TRUE</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Data Needs Processing</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>FALSE</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Set Return Value, Data Processed = TRUE, Data Needs Processing = FALSE</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <Save>
          <WorkflowNotesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <DisplaySuccessMessage>false</DisplaySuccessMessage>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </Save>
      </Tasks>
    </Event>
    <Event>
      <Name>City of Greater Dandenong - Create Cost Centre</Name>
      <Guid>5d7458ee-fb35-418a-8ddd-39953f5e7f6a</Guid>
      <Description>Integration workflow for City of Greater Dandenong to create cost centres</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Temp</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>IF(
  ISBLANK(HASH_GET([Raw], "body")),
  	NULL(),
  JSONDECODE(HASH_GET([Raw], "body"))
)</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <RaiseLinkedEForm>
          <EFormRef>Cost Center</EFormRef>
          <NewRecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <NewRecordCountFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <MakeChildOfContextRecord>false</MakeChildOfContextRecord>
          <AlternativeParentRecord xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <Attachments />
          <AttachmentsFolderTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <PushCreatedRecordIDIntoColumn>Temp 2</PushCreatedRecordIDIntoColumn>
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Name</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET([Temp], "Name")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Status</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET([Temp], "Status")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Description</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET([Temp], "Description")</Formula>
            </FieldEntry>
          </FieldEntries>
          <Description>Create Cost Centre</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>ARRAY_LENGTH(HASH_KEYS([Temp])) &gt; 0</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </RaiseLinkedEForm>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Return Value</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH( //this is a common format a lot of tools will understand
  "statusCode", IF(ARRAY_LENGTH(HASH_KEYS([Temp])) = 0, 400, ISBLANK([Temp 2]), 500, 201),
  "body", JSONENCODE(HASH(
	"message", IF(
	  ARRAY_LENGTH(HASH_KEYS([Temp])) = 0,
	  	"No Cost Centre data supplied",
	  ISBLANK([Temp 2]),
	  	"Cost Centre not created. Contact VendorPanel Support",
	  "Cost Centre created. RecordID: " &amp; [Temp 2]
	)
  ))
)


</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Status Code</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET([Return Value], "statusCode")</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Set Return Value</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <Save>
          <WorkflowNotesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <DisplaySuccessMessage>false</DisplaySuccessMessage>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </Save>
      </Tasks>
    </Event>
    <Event>
      <Name>City of Greater Dandenong - Objective Integration - Find Documents</Name>
      <Guid>4b498000-86ca-4a66-8d86-4bf4fe790365</Guid>
      <Description>Find all contracts that need to push documents to Objective (newly active or expired contracts)</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Raw</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>LET $settings := DB_LOOKUP(ARRAY("Integration Setting - Value", "Integration Setting - LineNumber"), "Integration Settings", HASH("Integration Setting - Name", "COGD Objective Last Sync"));

LET $lastSync := COALESCE(ARRAY_INDEX($settings, 1), DATEADD("day", -7, NOW()));
LET $settingLineNumber := COALESCE(ARRAY_INDEX($settings, 2), 1);

LET $contracts := DB_LOOKUPALL(
  ARRAY("RecordID", "Contract Number"),
  "Contract",
  "[LineNumber] FAST_EQUAL_TO 1 AND (
	([Status] FAST_EQUAL_TO 'Active' AND [Start Date] &lt;= " &amp; DB_ENCODECONSTANT($lastSync) &amp; ") OR 
	([Status] FAST_EQUAL_TO 'Expired' AND [Current End Date] &lt;= " &amp; DB_ENCODECONSTANT($lastSync) &amp; ")
  )"
);

LET $attachments := ARRAY_SELECTMANY($contracts, $(c, contract)
  LET $recordID := ARRAY_FIRST($contract);
  LET $contractNumber := ARRAY_LAST($contract);
  RETURN
  ARRAY_CONCAT(
	LET $contractDocs := EBMS_GET_ATTACHMENTS("Contract", $recordID, "Contract Documents");
	RETURN ARRAY_SELECT($contractDocs, $(i, item)
	  HASH_MERGE(
		$item,
		HASH("Folder", "Contract Documents"),
		HASH("Contract Number", $contractNumber),
		HASH("RecordID", $recordID)
	  )
	),
	LET $rfxDocs := EBMS_GET_ATTACHMENTS("Contract", $recordID, "RFX Attachments");
	RETURN ARRAY_SELECT($rfxDocs, $(i, item)
	  HASH_MERGE(
		$item,
		HASH("Folder", "RFX Attachments"),
		HASH("Contract Number", $contractNumber),
		HASH("RecordID", $recordID)
	  )
	),
	LET $vendorDocs := EBMS_GET_ATTACHMENTS("Contract", $recordID, "Vendor Attachments");
	RETURN ARRAY_SELECT($vendorDocs, $(i, item)
	  HASH_MERGE(
		$item,
		HASH("Folder", "Vendor Attachments"),
		HASH("Contract Number", $contractNumber),
		HASH("RecordID", $recordID)
	  )
	)
  )
);

RETURN HASH(
  "lastSync", $lastSync, 
  "settingLineNumber", $settingLineNumber, 
  "attachments", $attachments
)</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Find all the newly active/expired contracts and retrieve the details of their attachments</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <TriggerCustomEvent>
          <EventNameTemplate>City of Greater Dandenong - Objective Integration - Split Document</EventNameTemplate>
          <TraceNameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetRecordsFormula>ARRAY_SELECT(RANGE(1,ARRAY_LENGTH(HASH_GET([Raw], "attachments"))), $(i, item) NULL())</TargetRecordsFormula>
          <EventArgumentsFormula>ARRAY_INDEX(HASH_GET([Raw], "attachments"), $count)</EventArgumentsFormula>
          <ResultIntoColumn xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RetainLastResultOnly>false</RetainLastResultOnly>
          <CredentialToken xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <ShowWarningIfNoMatchingEvent>false</ShowWarningIfNoMatchingEvent>
          <RunInsideDataLayer>false</RunInsideDataLayer>
          <Description>Call: City of Greater Dandenong - Objective Integration - Split Document</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </TriggerCustomEvent>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Data Processed</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>TRUE</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Raw</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>NULL</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Mark record as processed</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <ChangeFieldValues>
          <EFormRef>Integration Settings</EFormRef>
          <RecordIDFormula>1</RecordIDFormula>
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Integration Setting - Value</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula>HASH_GET([Raw], "settingLineNumber")</LineNumberFormula>
              <Formula>NOW()</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Update Last Sync in Integration Settings</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </ChangeFieldValues>
        <Save>
          <WorkflowNotesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <DisplaySuccessMessage>false</DisplaySuccessMessage>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </Save>
      </Tasks>
    </Event>
    <Event>
      <Name>City of Greater Dandenong - Objective Integration - Push Document</Name>
      <Guid>85536eb9-b3bd-4486-bfa2-2c9567b5d059</Guid>
      <Description>Push Document or Chunk to Objective</Description>
      <Tasks>
        <HttpRequest>
          <UrlTemplate>https://apigateway.cgd.vic.gov.au/ws/rest/ObjectivePIB</UrlTemplate>
          <MethodTemplate>POST</MethodTemplate>
          <BodyTemplate>{
LET $sendInChunks := HASH_GET($eventargs, "sendInChunks") = TRUE;
LET $firstChunk := HASH_GET($eventargs, "firstChunk") = TRUE;
LET $lastChunk := HASH_GET($eventargs, "lastChunk") = TRUE;
LET $docDetails := HASH_GET($eventargs, "documentDetails");
LET $chunk := HASH_GET($eventargs, "chunk");

//Document Details
LET $filename := HASH_GET($docDetails, "FileName");
LET $fileExtension := MID($filename, FINDR(".", $filename) + 1, LEN($filename) - FINDR(".", $filename));
LET $contractNumber := HASH_GET($docDetails, "Contract Number");
LET $folder := HASH_GET($docDetails, "Folder");

//Header for the first part of a stream or when sending a document in one part
LET $header := 
"&lt;urn:contentRequest xmlns:urn=""urn:objective.com:applink""&gt;
	&lt;urn:objects requestType=""PIBDOCUMENT""&gt;
		&lt;urn:object key=""123""&gt;
			&lt;urn:properties&gt;
				&lt;urn:property name=""SourceSystem""&gt;
				  &lt;urn:value&gt;Nimblex&lt;/urn:value&gt;
				&lt;/urn:property&gt;
				&lt;urn:property name=""PrimaryModule""&gt;
				  &lt;urn:value&gt;ContractDoc&lt;/urn:value&gt;
				&lt;/urn:property&gt;
				&lt;urn:property name=""Action""&gt;
				  &lt;urn:value&gt;ContractDoc&lt;/urn:value&gt;
				&lt;/urn:property&gt;
				&lt;urn:property name=""name""&gt;
				  &lt;urn:value&gt;" &amp; XMLENCODE($filename) &amp; "&lt;/urn:value&gt;
				&lt;/urn:property&gt;
				&lt;urn:property name=""field1""&gt;
				  &lt;urn:value&gt;" &amp; XMLENCODE($contractNumber) &amp; "&lt;/urn:value&gt;
				&lt;/urn:property&gt;
				&lt;urn:property name=""field2""&gt;
				  &lt;urn:value&gt;" &amp; XMLENCODE($folder) &amp; "&lt;/urn:value&gt;
				&lt;/urn:property&gt;
				&lt;urn:property name=""businessUnit""&gt;
				  &lt;urn:value&gt;kA170&lt;/urn:value&gt;
				&lt;/urn:property&gt;
			&lt;/urn:properties&gt;
			&lt;urn:content fileextension=""" &amp; $fileExtension &amp; """&gt;"
;

//Footer for the first part of a stream or when sending a document in one part
LET $footer := "&lt;/urn:content&gt;&lt;/urn:object&gt;&lt;/urn:objects&gt;&lt;/urn:contentRequest&gt;";

//Header for a chunk steam
LET $chunkHeader := "&lt;urn:writestreamRequest xmlns:urn=""urn:objective.com:applink""&gt;&lt;urn:stream key=""1"" requestType=""CRMDocument"" lastChunk=""" &amp; $lastChunk &amp; """ idStream=""" &amp; HASH_GET([Temp 2], "streamID") &amp; """&gt;";

//Footer for a chunk steam
LET $chunkFooter := "&lt;/urn:stream&gt;&lt;/urn:writestreamRequest&gt;";

RETURN
IF($sendInChunks,
  IF($firstChunk, 
	$header &amp; $footer,
	$chunkHeader &amp; $chunk &amp; $chunkFooter
  ),
  $header &amp; $chunk &amp; $footer
)
}</BodyTemplate>
          <HeadersFormula>LET $key := DB_LOOKUP("Integration Setting - Value", "Integration Settings", HASH("Integration Setting - Name", "COGD Objective API Key"));

RETURN HASH("x-api-key", $key)</HeadersFormula>
          <AuthType>Anonymous</AuthType>
          <AuthUsernameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <AuthPasswordTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <ResultContentField>Ephemeral 1</ResultContentField>
          <ResultStatusField>Status Code</ResultStatusField>
          <ResponseHeadersField xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TimeoutSeconds>30</TimeoutSeconds>
          <Accept xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <ContentType>application/json</ContentType>
          <UserAgent xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <Attachments />
          <IsMultipart>false</IsMultipart>
          <BodyPartName xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FilePartNameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <Description>Send Document to Objective</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </HttpRequest>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Temp 2</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>IF(ARRAY_LENGTH([Temp 2]) = 0,
  HASH(
	"streamID", REGEX_MATCH([Ephemeral 1], "idStream=""([^&lt;]+)"" key="),
	"responses", ARRAY(
	  HASH(
		"Response", [Ephemeral 1],
		"Response Code", [Status Code]
	  )
	)
  ),
  HASH(
	"streamID", HASH_GET([Temp 2], "streamID"),
	"responses", ARRAY_CONCAT(
	  HASH_GET([Temp 2], "responses"),
	  ARRAY(
		HASH(
		  "Response", [Ephemeral 1],
		  "Response Code", [Status Code]
		)
	  )
	)
  )
)</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Store HTTP Response and Steam ID</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
      </Tasks>
    </Event>
    <Event>
      <Name>City of Greater Dandenong - Objective Integration - Split Document</Name>
      <Guid>43a0acb0-95f3-4183-aba7-1638e7183d52</Guid>
      <Description>Decide if document needs to be split up or not and call Push Document</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Temp</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>LET $base64 := EBMS_RECORDFILE_BASE64("Contract", HASH_GET($eventargs, "RecordID"), HASH_GET($eventargs, "FileName"), HASH_GET($eventargs, "Folder"));
LET $totalLength := LEN($base64);
LET $chunkLength := 6900506; //6900506 roughly 5mb in size
LET $numOfParts := CEILING($totalLength / $chunkLength);
LET $chunks := ARRAY_SELECT(RANGE(0, $numOfParts), $(partNumber, part) MID($base64, ($part * $chunkLength) + 1, $chunkLength));
LET $maxDocumentLineNumber := ARRAY_LENGTH(
  ARRAY_WHERE(
	DB_LOOKUPALL(
	  "Document Name",
	  "Contract",
	  HASH("RecordID", HASH_GET($eventargs, "RecordID"))
	),
	$(i, item)
		$item &lt;&gt; NULL()
  )
) + 1;

RETURN HASH("documentDetails", $eventargs, "base64Chunks", $chunks, "maxDocumentLineNumber", $maxDocumentLineNumber)</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Split doc</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <TriggerCustomEvent>
          <EventNameTemplate>City of Greater Dandenong - Objective Integration - Push Document</EventNameTemplate>
          <TraceNameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetRecordsFormula>LET $chunks := HASH_GET([Temp], "base64Chunks");
LET $len := ARRAY_LENGTH($chunks) + 1;

RETURN ARRAY_SELECT(RANGE(1, $len), $(i, item) NULL())</TargetRecordsFormula>
          <EventArgumentsFormula>LET $chunks := HASH_GET([Temp], "base64Chunks");
LET $len := ARRAY_LENGTH($chunks) + 1;
LET $docDetails := HASH_GET([Temp], "documentDetails");

LET $hashes := IF($len &gt; 1, 
  ARRAY_SELECT(RANGE(0, $len), $(c, chunk)
	HASH(
	  "sendInChunks", TRUE,
	  "documentDetails", $docDetails,
	  "chunk", IF($c = 1, NULL(), ARRAY_INDEX($chunks, $c - 1)),
	  "lastChunk", $len == $c,
	  "firstChunk", $c = 1
	)
  ),
  ARRAY(
	HASH(
	  "sendInChunks", FALSE,
	  "documentDetails", $docDetails,
	  "chunk", ARRAY_INDEX($chunks, 1)
	)
  )
);

RETURN ARRAY_INDEX($hashes, $count)</EventArgumentsFormula>
          <ResultIntoColumn xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RetainLastResultOnly>false</RetainLastResultOnly>
          <CredentialToken xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <ShowWarningIfNoMatchingEvent>false</ShowWarningIfNoMatchingEvent>
          <RunInsideDataLayer>false</RunInsideDataLayer>
          <Description>Call: City of Greater Dandenong - Objective Integration - Push Document</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </TriggerCustomEvent>
        <ChangeFieldValues>
          <EFormRef>Contract</EFormRef>
          <RecordIDFormula>HASH_GET($eventargs, "RecordID")</RecordIDFormula>
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Document Name</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula>HASH_GET([Temp], "maxDocumentLineNumber")</LineNumberFormula>
              <Formula>HASH_GET($eventargs, "FileName")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Document Location</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula>HASH_GET([Temp], "maxDocumentLineNumber")</LineNumberFormula>
              <Formula>REGEX_MATCH([Ephemeral 1], "&lt;urn:accessor name=""navigate""&gt;([^&lt;]+)&lt;/urn:accessor&gt;")</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Add document link to Contract record</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
      </Tasks>
    </Event>
    <Event>
      <Name>City of Stonnington - Update TechOne with spend data</Name>
      <Guid>2a6b51f3-ff8e-40e3-942f-876132413b2b</Guid>
      <Description>Integration workflow for City of Stonnington to bring across updated spend data</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 1</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//date to check
LET $date := D(HASH_GET(HASH_GET([Raw], "query"), "date"));

//ACM fields to retrieve
LET $columns := 
	ARRAY(
		"Contract Number",
		"Contract Title",
		"Status",
		"Start Date",
		"Current End Date",
		"Vendor ID",
		"Vendor Name",
	  	"Total Contract Value Excl Tax",
		"Total Contract Value",
		"Budget",
		"Department",
		"Expenditure Type", 
	  	"Contract Type"//,
//		"Head Agreement Number",
//		"Head Agreement RecordID", 
//	    "Type"
	);
	
//Lookup active contract data that have been updated since the date above
LET $contractData :=
	DB_LOOKUPALL(
	  $columns,
	  "Contract",
	  "[Setup Complete] = TRUE AND [LineNumber] = 1 AND [DateLastUpdated] &gt;= " &amp; DB_ENCODECONSTANT($date)
	);

//create array of hashes with column in ACM
LET $hashedContractData := 
	ARRAY_SELECT(
		$contractData, $(i, item) 
			INDEXES_TO_KEYS($item, $columns)
		);

//create array of hashes that uses TechOne field as key
LET $contractData :=
	ARRAY_SELECT(
		$hashedContractData, $(i, item)
			HASH(
				"ContractNumber", 			HASH_GET($item, "Contract Number"),
				"ContractTitle", 			HASH_GET($item, "Contract Title"),
				"ContractStatus",			HASH_GET($item, "Status"),
				"ContractStartDate",		HASH_GET($item, "Start Date"),
				"ContractEndDate",	    	HASH_GET($item, "Current End Date"),
				"ERPID",					HASH_GET($item, "Vendor ID"),
				"VendorName", 				HASH_GET($item, "Vendor Name"),
				"ContractValueExclTax", 	HASH_GET($item, "Total Contract Value Excl Tax"),
				"ContractValue",			HASH_GET($item, "Total Contract Value"),
				"BudgetValue",				HASH_GET($item, "Budget"),
				"Department",				HASH_GET($item, "Department"),
				"IncomeType",				HASH_GET($item, "Expenditure Type"),
				"ContractType",				HASH_GET($item, "Contract Type")//,
//				"HeadAgreementNumber",		HASH_GET($item, "Head Agreement Number"),
//				"HeadAgreementRecordID",	HASH_GET($item, "Head Agreement RecordID"),
//				"Type",						HASH_GET($item, "Type")
			)
		);
//return JSON encoded data	
	
RETURN JSONENCODE($contractData)</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Return Value</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH(
  "statusCode", 200,
  "body", [Ephemeral 1]
)</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Status Code</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET([Return Value], "statusCode")</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Set Return Value, Data Needs Processing = TRUE</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <Save>
          <WorkflowNotesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <DisplaySuccessMessage>false</DisplaySuccessMessage>
          <Description>Save so we can attach files</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </Save>
        <AttachFiles>
          <Attachments>
            <TextFile>
              <ContentTemplate>{[Ephemeral 1]}</ContentTemplate>
              <FilenameTemplate>body.txt</FilenameTemplate>
            </TextFile>
          </Attachments>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetRecordsFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetPathTemplate>Result Files</TargetPathTemplate>
          <UpdateTargetRecord>false</UpdateTargetRecord>
          <CredentialToken xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <PushCreatedFilesIntoColumn xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <Description>Attach raw body as a file (From [Ephemeral 1])</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </AttachFiles>
      </Tasks>
    </Event>
    <Event>
      <Name>City of Unley - Email Scraping</Name>
      <Guid>1f2d29ee-b0ae-48e9-86b9-790702bb1e27</Guid>
      <Description>Email scraping for City of Unley</Description>
      <Tasks>
        <ScrapeEmailInbox>
          <Host>outlook.office365.com</Host>
          <Username>testemailscrapping@vendorpanel.com</Username>
          <Password xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <AuthenticationMode>OAuth2Connection</AuthenticationMode>
          <OAuth2Connection>10807049-50e6-41a3-86b8-75f7a4a7ef40</OAuth2Connection>
          <RetainEmailsOnServer>false</RetainEmailsOnServer>
          <EFormRef>Email</EFormRef>
          <ParentRecord>
            <EFormType>"Information Request"</EFormType>
            <RecordID>LET $subject := HASH_GET($message, "subject");
LET $uniqueReference := REGEX_MATCH($subject, "\[(.*)\]");

RETURN 
IF( 
  $uniqueReference &lt;&gt; NULL,
  DB_LOOKUP("RecordID", "Information Request", "[LineNumber] = 1 AND [File No.] = " &amp; DB_ENCODECONSTANT($uniqueReference))
)</RecordID>
          </ParentRecord>
          <AttachmentFolder>Email Attachments</AttachmentFolder>
          <NonAttachmentFilesFolder>Email Attachments</NonAttachmentFilesFolder>
          <DownloadNonAttachmentFiles>false</DownloadNonAttachmentFiles>
          <FieldEntries>
            <FieldEntry>
              <ColumnName>To</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET($message, "to")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>CC</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET($message, "cc")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>BCC</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET($message, "from")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Reply-to</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET($message, "reply-to")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Subject</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET($message, "subject")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Body</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET($message, "body-html")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Email Type</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>"Incoming"</Formula>
            </FieldEntry>
          </FieldEntries>
          <ConvertAttachmentReferences>true</ConvertAttachmentReferences>
          <Description>Targets Unley email box</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>DB_LOOKUP(
  "Email Scraping Enabled", 
  "Global Settings", "[LineNumber] = 1"
) = "Yes"</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </ScrapeEmailInbox>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Data Needs Processing</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>FALSE</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Data Processed</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>TRUE</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Data needs processing = FALSE, Data processed = TRUE</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <Save>
          <WorkflowNotesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <DisplaySuccessMessage>false</DisplaySuccessMessage>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </Save>
      </Tasks>
    </Event>
    <Event>
      <Name>Create or Update Records</Name>
      <Guid>a4d71940-8a43-415d-bf99-adf7c5521a45</Guid>
      <Description>Creates or Update Vendor, Purchase Order and Purchase Order Receipts</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 1</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//Get body from raw
HASH_GET([Raw], "body")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Ephemeral 2</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//JSONDECODE the data request
IFERROR(
  JSONDECODE([Ephemeral 1]), 
    NULL
)</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Ephemeral 3</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//Get the request type
HASH_GET([Params], "form")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Temp 2</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//data to process
HASH_GET([Ephemeral 2], "values")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Status Code</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//Hash of all limits
LET $limits := 
HASH(
  "Vendor", 9,
  "Purchase Order", 9,
  "Purchase Order Receipt", 9
);
//Check for special function
LET $special    := HASH_GET([Params], "_specialfunction");
LET $specialFun := SPLIT($special, " ");
//Number of data to request to process via web event
LET $acceptedLimit := HASH_GET($limits, HASH_GET([Params], "form"));
//Get the data to be processed
LET $toProcessData := [Temp 2];
//Validate the data for errors
RETURN
IF(
  
  //Body is completely null
  OR(
	[Ephemeral 2] = NULL,
	$acceptedLimit = NULL
	),
    "400", 
  
  //hash_get 'values' from incoming data has no results 
  ARRAY_LENGTH($toProcessData) &lt; 1, 
    "204",
 //check for schedule event processing or immediate processing
  AND(
	ARRAY_LENGTH($toProcessData) &gt;= $acceptedLimit,
	ARRAY_INDEXOF($specialFun,"ProcessImmediately") = NULL
	),
  "202",

  //Valid
  "200"
)</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Raw</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_MERGE([Raw], HASH("body", "REMOVED"))</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Temp Length</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>ARRAY_LENGTH([Temp 2])</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Process and validate request</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </ChangeFieldValues>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Data Needs Processing</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>TRUE</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Data Processed</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>FALSE</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>If Status code is 202, set data needs processing and data processed to TRUE and FALSE respectively</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>[Status Code] = "202"</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </ChangeFieldValues>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Data Processed</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>TRUE</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Data Needs Processing</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>FALSE</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>If Status code is 200, set data needs processing and data processed to FALSE and TRUE respectively</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>[Status Code] = "200"</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </ChangeFieldValues>
        <Save>
          <WorkflowNotesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <DisplaySuccessMessage>false</DisplaySuccessMessage>
          <Description>Save - required for attachment generation</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </Save>
        <AttachFiles>
          <Attachments>
            <TextFile>
              <ContentTemplate>{[Ephemeral 1]}</ContentTemplate>
              <FilenameTemplate>body.txt</FilenameTemplate>
            </TextFile>
          </Attachments>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetRecordsFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetPathTemplate>Input Files</TargetPathTemplate>
          <UpdateTargetRecord>false</UpdateTargetRecord>
          <CredentialToken xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <PushCreatedFilesIntoColumn xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <Description>creates a document with raw data and store the data in the file</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </AttachFiles>
        <TriggerCustomEvent>
          <EventNameTemplate>PUT {[Ephemeral 3] &amp; "s"}</EventNameTemplate>
          <TraceNameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetRecordsFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <EventArgumentsFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <ResultIntoColumn xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RetainLastResultOnly>false</RetainLastResultOnly>
          <CredentialToken xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <ShowWarningIfNoMatchingEvent>false</ShowWarningIfNoMatchingEvent>
          <RunInsideDataLayer>false</RunInsideDataLayer>
          <Description>Trigger respective eForm task</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>[Status Code] = "200"</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </TriggerCustomEvent>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Return Value</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>LET $status   := [Status Code];

//construct a response code  	
RETURN
IF(
  //Invalid
  OR(
	$status = "400",
	ARRAY_LENGTH([Ephemeral 2]) = 0
    ),
  
    HASH(
	 "statusCode", 400, 
	 "body", "Invalid request format"
    ),

  //To be processed by scheduled event
  $status = "202", 
    
  	HASH(
	 "statusCode", $status, 
	 "body", "Your request has been recieved and is queued for processing. Requests that do bulk creates or updates are processed on an hourly schedule. Wait an hour and use the GET endpoints to validate that the information has been created correctly"
    ),

  //No data provided
  $status = "204", 
    
  	HASH(
	 "statusCode", $status, 
	 "body", "No content available to process"
   ),

  //Success
  AND(
	$status = "200",
	ARRAY_LENGTH([Temp 2]) = ARRAY_LENGTH([Ephemeral 2])
  	),
   
  	HASH(
	 "statusCode", $status, 
	 "body", "Successfully created / updated " &amp; HASH_GET([Params], "form") &amp; "(s)."
  ),
	
 //Success but not all completed
   HASH(
	"statusCode", $status, 
	"body", "Successfully created / updated " &amp; ARRAY_LENGTH([Ephemeral 2]) &amp; " of " &amp; ARRAY_LENGTH([Temp 2]) &amp; " for " &amp; HASH_GET([Params], "form") &amp; "(s)."
  )
)</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Return Value</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
      </Tasks>
    </Event>
    <Event>
      <Name>Create or Update Records - Scheduled Event</Name>
      <Guid>811bb588-d6bf-4f58-928b-00a16ca0e7eb</Guid>
      <Description>Creates or Update Vendor, Purchase Order and Purchase Order Receipts  when the request is more than the threshold via Schedule event</Description>
      <Tasks>
        <ReadFileToFieldTask>
          <FileGenerator>
            <RecordFile>
              <ResultFilenameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <WholeFolder>true</WholeFolder>
              <TargetFileTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <EFormType xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <EFormTypeTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <PathTemplate>Input Files</PathTemplate>
            </RecordFile>
          </FileGenerator>
          <FileProcessor>
            <PlainTextFile />
          </FileProcessor>
          <FileIntoField>Ephemeral 1</FileIntoField>
          <Description>Read the body from input.txt file to local field</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </ReadFileToFieldTask>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 2</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//JSONDECODE the data request
IFERROR(JSONDECODE([Ephemeral 1]),NULL)</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Ephemeral 3</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//Get the request type
HASH_GET([Params], "form")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Temp 2</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET([Ephemeral 2], "values")</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>JSON Decode the data and get request type</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <TriggerCustomEvent>
          <EventNameTemplate>PUT {[Ephemeral 3] &amp; "s"}</EventNameTemplate>
          <TraceNameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetRecordsFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <EventArgumentsFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <ResultIntoColumn xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RetainLastResultOnly>false</RetainLastResultOnly>
          <CredentialToken xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <ShowWarningIfNoMatchingEvent>false</ShowWarningIfNoMatchingEvent>
          <RunInsideDataLayer>false</RunInsideDataLayer>
          <Description>Trigger respective custom event task</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </TriggerCustomEvent>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Data Processed</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>TRUE</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Data Needs Processing</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>FALSE</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Status Code</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>200</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>set data processing fields</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <Save>
          <WorkflowNotesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <DisplaySuccessMessage>false</DisplaySuccessMessage>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </Save>
      </Tasks>
    </Event>
    <Event>
      <Name>DocuSign - Sync with DocuSign Connect</Name>
      <Guid>9ffdec79-36be-42a8-a62a-202735e9f222</Guid>
      <Description>Triggered via Web Event to receive real-time updates via DocuSign Connect</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Raw</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula></LineNumberFormula>
              <Formula>$eventargs</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Created By</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>"Web Event"</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Integration Workflow</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>"DocuSign - Sync with DocuSign Connect"</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Integration Authentication</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET(
  	HASH_GET([Raw], "query"),
  	"integration_authentication"
)</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Integration Settings Data</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>LET $columns := 
ARRAY(
  "Integration Key", 
  "Integration Alert Recipient"
);

RETURN
INDEXES_TO_KEYS(
  DB_LOOKUP(
        $columns, 
        "Integration Settings", 
        "[RecordID] = 1",
        HASH("credentials", "a4c6fd62-7f75-4d0c-a57b-29a914e2c126")
      ), 
	  $columns
    )</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Status Code</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>IF(
  	HASH_GET([Integration Settings Data], "Integration Key") &lt;&gt; [Integration Authentication],
  	401,
  	200
)</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Raw</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//Trim headers from raw data
HASH_SUBSET([Raw], ARRAY("body", "query"))</Formula>
            </FieldEntry>
          </FieldEntries>
          <Description>Process Web Event (if $eventargs isn't empty)</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>NOT(ISBLANK($eventargs))</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </ChangeFieldValues>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 1</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//get request body
JSONDECODE(HASH_GET([Raw], "body"))</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Ephemeral 2</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//get request event
HASH_GET([Ephemeral 1], "event")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Ephemeral 3</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//get data from body
HASH_GET([Ephemeral 1], "data")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Ephemeral 4</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//this is the list of events which should trigger an update to the Sign Document record
LET $supportedEvents :=
ARRAY(
  	"envelope-sent",
  	"envelope-completed",
  	"envelope-declined",
  	"envelope-voided",
  	"envelope-deleted",
  	
  	"recipient-sent",
  	"recipient-delivered",
  	"recipient-completed",
  	"recipient-declined",
  	"recipient-reassign"
);

RETURN

ARRAY_INDEXOF($supportedEvents, [Ephemeral 2]) &gt; 0</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Process request body</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>N([Status Code]) = 200</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </ChangeFieldValues>
        <TriggerCustomEvent>
          <EventNameTemplate>Check Status / Download Documents</EventNameTemplate>
          <TraceNameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetRecordsFormula>LET $envelopeId := HASH_GET([Ephemeral 3], "envelopeId");
LET $matchedRecord :=
DB_LOOKUP(
  	"RecordID",
  	"Sign Document",
  	"[LineNumber] FAST_EQUAL_TO 1 AND [DocuSign Envelope ID] FAST_EQUAL_TO " &amp; DB_ENCODECONSTANT($envelopeId)
);

RETURN ARRAY(ARRAY("Sign Document", $matchedRecord))</TargetRecordsFormula>
          <EventArgumentsFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <ResultIntoColumn xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RetainLastResultOnly>false</RetainLastResultOnly>
          <CredentialToken>a4c6fd62-7f75-4d0c-a57b-29a914e2c126</CredentialToken>
          <ShowWarningIfNoMatchingEvent>false</ShowWarningIfNoMatchingEvent>
          <RunInsideDataLayer>false</RunInsideDataLayer>
          <Description>Call: Check Status / Download Documents (on Sign Document records)
Runs as system using credential</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>AND(
  	N([Status Code]) = 200,
  	[Ephemeral 4] = TRUE
)</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </TriggerCustomEvent>
        <SetReturnValue>
          <ResultValueFormula>HASH(
  "statusCode", N([Status Code])
)</ResultValueFormula>
          <Description>Return statusCode</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </SetReturnValue>
      </Tasks>
    </Event>
    <Event>
      <Name>Example Integration Workflow for Scheduled Event</Name>
      <Guid>3cf5d42b-1f97-440e-8c11-5d8561b01b24</Guid>
      <Description>Please use this as an baseline, includes the necessary save task</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Temp</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>ARRAY_CONCAT([Temp], "Test1")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Data Processed</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula>1</LineNumberFormula>
              <Formula>TRUE</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
      </Tasks>
    </Event>
    <Event>
      <Name>Example Integration Workflow for Web Event</Name>
      <Guid>e06eeaf7-225f-40f3-9b8b-60bcd48948fc</Guid>
      <Description>Please use this as an baseline, includes the necessary save task as well as the correct formatting for returning a statusCode and some data</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Return Value</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH( //this is a common format a lot of tools will understand
  "statusCode", 201,
  "body", JSONENCODE(HASH(
	"SomeValue", "SomeText",
  	"someOtherStuff", "evenMoreOtherStuff"
  ))
)</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Set Return Value</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
      </Tasks>
    </Event>
    <Event>
      <Name>GET Contracts</Name>
      <Guid>467e34d5-a9f4-4080-8fe0-638a8e85d83f</Guid>
      <Description>Return contract data to requester; data is not transformed</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 2</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//incoming variables
LET $filter := 		HASH_GET([Ephemeral 1], "Filter");
LET $sort := 		HASH_GET([Ephemeral 1], "Sort");
LET $pageSize:= 	HASH_GET([Ephemeral 1], "PageSize");
LET $pageNumber := 	HASH_GET([Ephemeral 1], "PageNumber");
LET $form :=		HASH_GET([Ephemeral 1], "Form");

//form specific logic
LET $columnMap :=
HASH(
  "Contract", 
  ARRAY(
	"RecordID",
	"Contract Number",
	"Status",
	"Start Date", 
	"Current End Date",
	"Contract Title", 
	"Total Contract Value", 
	"Total Contract Value Excl Tax",
	"Budget",
	"Department", 
	"Expenditure Type",
	"Vendor Name", 
	"Vendor ID",
	"Contract Type",
	"Head Agreement Number",
	"Head Agreement RecordID", 
	"Type", 
	"Contract Manager", 
	"Contract Manager Display Name", 
	"Contract Owner", 
	"Contract Owner Display Name", 
	"Contract Sponsor", 
	"Contract Sponsor Display Name", 
	"Cost Center", 
	"Contract Category", 
	"Contract Subcategory"
  )
);

LET $data := 
DB_LOOKUPALL(
  HASH_GET($columnMap, $form), 
  $form, 
  $filter, 
  HASH("sort", $sort)
);

LET $transformedData := 
//Any transformations to data happen here
(
  ARRAY_SELECT(
    $data, $(i, item) 
    INDEXES_TO_KEYS(
      $item,
      HASH_GET($columnMap, $form)
    )
  )
); 

RETURN
$transformedData</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
      </Tasks>
    </Event>
    <Event>
      <Name>Get Data</Name>
      <Guid>276cc9c4-b54d-4c85-b297-bcf8a0d84b12</Guid>
      <Description>Funnel for all 'GET' requests</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 1</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>LET $params := [Params];

LET $filter := HASH_GET($params, "filter");
LET $filter := IF(ISBLANK($filter), "[LineNumber] = 1", $filter &amp; " AND [LineNumber] = 1");

LET $sort := HASH_GET($params, "sort");
LET $sort := IF(ISBLANK($sort), "[RecordID] ASC, [LineNumber] ASC", $sort);

LET $pageSize := HASH_GET($params, "maxPageSize");
LET $pageSize := IF(ISBLANK($pageSize), 50, N($pageSize));

LET $pageNumber := HASH_GET($params, "pageNumber");
LET $pageNumber := IF(ISBLANK($pageNumber), 1, N($pageNumber));

LET $form := HASH_GET($params, "form"); 
LET $form := 
IF(
  LEFT($form, 1) = "/", 
  RIGHT($form, LEN($form) - 1),
  $form
); 

RETURN 
HASH(
  "Filter", 		$filter,
  "Sort", 			$sort, 
  "PageSize", 		$pageSize, 
  "PageNumber", 	$pageNumber, 
  "Form", 			$form
)</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Process incoming parameters and make them viable for the GET events; populates the Ephemeral 1 field</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <TriggerCustomEvent>
          <EventNameTemplate>GET {HASH_GET([Params], "form")}s</EventNameTemplate>
          <TraceNameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetRecordsFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <EventArgumentsFormula></EventArgumentsFormula>
          <ResultIntoColumn xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RetainLastResultOnly>false</RetainLastResultOnly>
          <CredentialToken xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <ShowWarningIfNoMatchingEvent>false</ShowWarningIfNoMatchingEvent>
          <RunInsideDataLayer>false</RunInsideDataLayer>
          <Description>GET &lt;EFormType&gt;</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </TriggerCustomEvent>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Return Value</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//incoming variables
LET $pageSize:= 	HASH_GET([Ephemeral 1], "PageSize");
LET $pageNumber := 	HASH_GET([Ephemeral 1], "PageNumber");
LET $form :=		HASH_GET([Ephemeral 1], "Form");
LET $sort := 		HASH_GET([Ephemeral 1], "Sort");
LET $filter :=		HASH_GET([Ephemeral 1], "Filter");

//generic return processing
LET $unpagedResults := [Ephemeral 2];
LET $totalResultSize := ARRAY_LENGTH($unpagedResults);

LET $thisPageData := 
ARRAY_TAKE(
  ARRAY_SKIP(
    $unpagedResults, 
    ($pageNumber - 1) * $pageSize
  ),
  $pageSize
);

LET $numPages := 
CEILING(
  ARRAY_LENGTH($unpagedResults) / $pageSize
);

LET $nextPageUrl :=   
IF(
  $pageNumber &lt; $numPages,
  EBMS_GET_BASE_URL() &amp; "/invokeWebEvent?_event=Integration&amp;_key=2GtrrgdHoLbqknPrthg5pSnr6mA8bKVxDcX6fcM8JjgQYY3wujdIRZTQYThE3854" &amp; 
  "&amp;maxPageSize=" &amp; $pageSize &amp; 
  "&amp;form=" &amp; $form &amp; 
  "&amp;pageNumber=" &amp; $pageNumber + 1 &amp;
  "&amp;sort=" &amp; $sort &amp;
  "&amp;filter=" &amp; REPLACESUBSTRING(" AND [LineNumber] = 1", $filter, "")
);

LET $goodResult := 
HASH(
  "values", $thisPageData, 
  "next", $nextPageUrl, 
  "totalSize", $totalResultSize,
  "pageNumber", $pageNumber,
  "pageSize", ARRAY_LENGTH($thisPageData)
);

RETURN 
HASH(
  "statusCode", 200, 
  "body", JSONENCODE($goodResult)
)</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Set Return Value</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <Save>
          <WorkflowNotesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <DisplaySuccessMessage>false</DisplaySuccessMessage>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </Save>
      </Tasks>
    </Event>
    <Event>
      <Name>GET Procurements</Name>
      <Guid>0bbe3873-edf0-43d7-bff5-3583192a7bb9</Guid>
      <Description>Return procurement data to requester; data is not transformed</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 2</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//incoming variables
LET $filter := 		HASH_GET([Ephemeral 1], "Filter");
LET $sort := 		HASH_GET([Ephemeral 1], "Sort");
LET $pageSize:= 	HASH_GET([Ephemeral 1], "PageSize");
LET $pageNumber := 	HASH_GET([Ephemeral 1], "PageNumber");
LET $form :=		HASH_GET([Ephemeral 1], "Form");

//form specific logic
LET $columnMap :=
HASH(
  "Procurement", 
  ARRAY(
	"RecordID",
	"Procurement Number", 
	"Status", 
	"Procurement Title", 
	"Estimated Value", 
	"Department"
  )
);

LET $data := 
DB_LOOKUPALL(
  HASH_GET($columnMap, $form), 
  $form, 
  $filter, 
  HASH("sort", $sort)
);

LET $transformedData := 
//Any transformations to data happen here
ARRAY_SELECT(
  $data, $(i, item) 
  INDEXES_TO_KEYS(
    $item,
    HASH_GET($columnMap, $form)
  )
); 

RETURN $transformedData</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
      </Tasks>
    </Event>
    <Event>
      <Name>GET Purchase Orders</Name>
      <Guid>b16d0128-d6f3-45f0-91fd-7ce6e377092a</Guid>
      <Description>Return purchase order data to requester; data is transformed to embed lineitems into the purchase order model</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 2</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//incoming variables
LET $filter := 		HASH_GET([Ephemeral 1], "Filter");
LET $sort := 		HASH_GET([Ephemeral 1], "Sort");
LET $pageSize:= 	HASH_GET([Ephemeral 1], "PageSize");
LET $pageNumber := 	HASH_GET([Ephemeral 1], "PageNumber");
LET $form :=		HASH_GET([Ephemeral 1], "Form");

//form specific logic
//This end points needs to be able to get all linenumbers in order to correctly return line items
LET $filter := 		REPLACESUBSTRING("[LineNumber] = 1", $filter, TRUE);
LET $sort := 		"[LineNumber] ASC, " &amp; $sort;

LET $columnMap :=
HASH(  
  "Purchase Order", 
  ARRAY(
	"RecordID", 
	"Purchase Order Number", 
	"Description",
	"Contract Number", 
	"Approved Date", 
	"LineNumber",
	"Item - Number", 
	"Item Type", 
	"Item - Qty", 
	"Item - Unit Price", 
	"Item - Tax ID", 
	"Item - Description", 
	"Posting Account",
	"Parent"
  ), 
  
  "LineItemData", 
  ARRAY(
    "LineNumber",
    "Item - Number", 
    "Item Type", 
    "Item - Qty", 
    "Item - Unit Price", 
    "Item - Tax ID", 
    "Item - Description", 
    "Posting Account"
  ),
  
  "HeaderData", 
  ARRAY(
    "RecordID", 
    "Purchase Order Number", 
    "Description", 
    "Contract Number", 
    "Approved Date", 
    "Line Items"
  )  
);

LET $data := 
DB_LOOKUPALL(
  HASH_GET($columnMap, $form), 
  $form, 
  $filter, 
  HASH("sort", $sort)
);

LET $transformedData := 
  (
    LET $headerKeys := HASH_GET($columnMap, "HeaderData"); 
	LET $lineItemKeys := HASH_GET($columnMap, "LineItemData"); 
    
    LET $hashed := 
    ARRAY_TO_HASH_GROUPED(
      $data, 
      $(i, item) ARRAY_TAKE($item, 5),
      $(i, item) ARRAY_SKIP($item, 5) 
    );
    
    RETURN 
    ARRAY_SELECT(
      HASH_KEYS($hashed), $(i, item)
      LET $lineItems := HASH_GET($hashed, $item);
      RETURN
      INDEXES_TO_KEYS(
    	ARRAY_CONCAT(
    	  $item,
    	  ARRAY(ARRAY_SELECT(
    	    $lineItems, $(i, item) 
			INDEXES_TO_KEYS($item, $lineItemKeys)
          ))
        ),
    	$headerKeys
    )
  )
); 

RETURN $transformedData</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
      </Tasks>
    </Event>
    <Event>
      <Name>GET Vendors</Name>
      <Guid>5e6caf95-be12-48f6-afe8-a867c55e29d2</Guid>
      <Description>Return vendors data to requester; data is not transformed</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 2</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//incoming variables
LET $filter := 		HASH_GET([Ephemeral 1], "Filter");
LET $sort := 		HASH_GET([Ephemeral 1], "Sort");
LET $pageSize:= 	HASH_GET([Ephemeral 1], "PageSize");
LET $pageNumber := 	HASH_GET([Ephemeral 1], "PageNumber");
LET $form :=		HASH_GET([Ephemeral 1], "Form");

//form specific logic
LET $columnMap :=
HASH(
  "Vendor", 
  ARRAY(
	"RecordID",
	"Vendor ID",
    "Company Name",
    "Business Number Type",
    "BusinessNumber"
  )
);

LET $data := 
DB_LOOKUPALL(
  HASH_GET($columnMap, $form), 
  $form, 
  $filter, 
  HASH("sort", $sort)
);

LET $transformedData := 
ARRAY_SELECT(
  $data, $(i, item) 
  INDEXES_TO_KEYS(
    $item,
    HASH_GET($columnMap, $form)
  )
); 

RETURN $transformedData</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
      </Tasks>
    </Event>
    <Event>
      <Name>Initialise Integration - Scheduled Event</Name>
      <Guid>08f7bb6a-25e1-440b-b3ef-9cd5f230ad6b</Guid>
      <Description>DO NOT EDIT</Description>
      <Tasks>
        <TriggerCustomEvent>
          <EventNameTemplate>{
	IF(
		AND([Created By] = "Web Event", [Data Needs Processing] = TRUE, [Data Processed] &lt;&gt; TRUE), 
  		[Integration Workflow] &amp; " - Scheduled Event",
	  	[Integration Workflow]
	)
}</EventNameTemplate>
          <TraceNameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetRecordsFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <EventArgumentsFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <ResultIntoColumn xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RetainLastResultOnly>false</RetainLastResultOnly>
          <CredentialToken xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <ShowWarningIfNoMatchingEvent>false</ShowWarningIfNoMatchingEvent>
          <RunInsideDataLayer>false</RunInsideDataLayer>
          <Description>Trigger Integration Workflow listed on record</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </TriggerCustomEvent>
      </Tasks>
    </Event>
    <Event>
      <Name>Initialise Integration - Web Event</Name>
      <Guid>f3bf0af1-9e29-4105-9e75-305a4b6126be</Guid>
      <Description>DO NOT EDIT</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Raw</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula></LineNumberFormula>
              <Formula>$eventargs</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Params</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula></LineNumberFormula>
              <Formula>HASH_GET([Raw], "query")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Integration Authentication</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET(HASH_GET([Raw], "headers"), "integration_authentication")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Integration Workflow</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET(HASH_GET([Raw], "headers"), "integration_workflow")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Created By</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>"Web Event"</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Raw</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//Using this as an effort to reduce audit log size as header content isn't currently used
HASH_SUBSET([Raw], ARRAY("body", "query"))</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Integration Settings Data</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>LET $columns := 
ARRAY(
  "Integration Key", 
  "Integration Alert Recipient"
);

RETURN
INDEXES_TO_KEYS(
  DB_LOOKUP(
        $columns, 
        "Integration Settings", 
        "[RecordID] = 1",
        HASH("credentials", "a4c6fd62-7f75-4d0c-a57b-29a914e2c126")
      ), 
	  $columns
    )</Formula>
            </FieldEntry>
          </FieldEntries>
          <Description>Process Web Event (if $eventargs isn't empty)</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>NOT(ISBLANK($eventargs))</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </ChangeFieldValues>
        <SetReturnValue>
          <ResultValueFormula>HASH(
  "statusCode", 401
)</ResultValueFormula>
          <Description>Return 401 (If Auth Key DOES NOT MATCH Integration Settings)</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>HASH_GET([Integration Settings Data], "Integration Key") &lt;&gt; [Integration Authentication]</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </SetReturnValue>
        <TriggerCustomEvent>
          <EventNameTemplate>{[Integration Workflow]}</EventNameTemplate>
          <TraceNameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetRecordsFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <EventArgumentsFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <ResultIntoColumn xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RetainLastResultOnly>false</RetainLastResultOnly>
          <CredentialToken>a4c6fd62-7f75-4d0c-a57b-29a914e2c126</CredentialToken>
          <ShowWarningIfNoMatchingEvent>false</ShowWarningIfNoMatchingEvent>
          <RunInsideDataLayer>false</RunInsideDataLayer>
          <Description>Trigger Custom Event listed in Web Event (If Auth Key DOES MATCH Integration Settings)</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>HASH_GET([Integration Settings Data], "Integration Key") == [Integration Authentication]</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </TriggerCustomEvent>
        <SetReturnValue>
          <ResultValueFormula>[Return Value]</ResultValueFormula>
          <Description>Return Value (If Auth Key DOES MATCH Integration Settings)</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>HASH_GET([Integration Settings Data], "Integration Key") == [Integration Authentication]</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </SetReturnValue>
      </Tasks>
    </Event>
    <Event>
      <Name>Mildura - Bring PO Data from CIVICA</Name>
      <Guid>0c5d33e2-3c74-4d45-ae22-78f2d2004060</Guid>
      <Description>Triggered by web event, Integration Workflow to bring across Purchase Order Data from CIVICA/Authority via .csv file</Description>
      <Tasks>
        <DisplayMessage>
          <MessageTemplate>Running "Mildura - Bring PO Data from CIVICA"</MessageTemplate>
          <MessageType>Notice</MessageType>
          <Description>Running "Mildura - Bring PO Data from CIVICA"</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </DisplayMessage>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 1</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET([Raw], "body")</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Raw</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_MERGE([Raw], HASH("body", "REMOVED"))</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Temp 2</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>(LET $dateRef := IF ([RecordID] &lt; 0, NOW(), [DateCreated]);
RETURN DB_LOOKUP(
  "RecordID", 
  [EFormType], 
  "[Integration Workflow]=" &amp; DB_ENCODECONSTANT([Integration Workflow]) &amp; " AND [DateCreated] &lt; " &amp; DB_ENCODECONSTANT($dateRef), 
  HASH("sort", "[DateCreated] DESC")
))</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Ephemeral 1 := HASH_GET([Raw], "body")
[Temp 2] := RecordID of most recent Integration Data record for the same workflow
Clear "body" out of [Raw]</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <Save>
          <WorkflowNotesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <DisplaySuccessMessage>false</DisplaySuccessMessage>
          <Description>IF(RecordID &lt; 0) Save - required so that the attachment can be generated and attached</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>[RecordID] &lt; 0</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </Save>
        <AttachFiles>
          <Attachments>
            <TextFile>
              <ContentTemplate>{[Ephemeral 1]}</ContentTemplate>
              <FilenameTemplate>body.txt</FilenameTemplate>
            </TextFile>
          </Attachments>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetRecordsFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetPathTemplate>Input Files</TargetPathTemplate>
          <UpdateTargetRecord>false</UpdateTargetRecord>
          <CredentialToken xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <PushCreatedFilesIntoColumn xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <Description>Attach raw body as a file (From [Ephemeral 1])</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </AttachFiles>
        <AttachFiles>
          <Attachments>
            <RecordFile>
              <ResultFilenameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <WholeFolder>true</WholeFolder>
              <TargetFileTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <EFormType xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <EFormTypeTemplate>{[EFormType]}</EFormTypeTemplate>
              <RecordIDFormula>{[Temp 2]}</RecordIDFormula>
              <PathTemplate>Input Files</PathTemplate>
            </RecordFile>
          </Attachments>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetRecordsFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetPathTemplate>Comparison Files</TargetPathTemplate>
          <UpdateTargetRecord>false</UpdateTargetRecord>
          <CredentialToken xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <PushCreatedFilesIntoColumn xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <Description>(If [Temp 2] != NULL) Copy previous file from record [Temp] / Input Files to Comparison Files</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>[Temp 2] != NULL</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </AttachFiles>
        <ReadFileToFieldTask>
          <FileGenerator>
            <RecordFile>
              <ResultFilenameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <WholeFolder>true</WholeFolder>
              <TargetFileTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <EFormType xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <EFormTypeTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <PathTemplate>Comparison Files</PathTemplate>
            </RecordFile>
          </FileGenerator>
          <FileProcessor>
            <CsvFile />
          </FileProcessor>
          <FileIntoField>Ephemeral 2</FileIntoField>
          <Description>(If [Temp 2] != NULL) Read comparison file into Ephemeral 2</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>[Temp 2] != NULL</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </ReadFileToFieldTask>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 3</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>LET $todaysData     := CSV_PARSE([Ephemeral 1]);
// We might have the previous days data, to compare with for deltas
// Note this was already parsed
LET $yesterdaysData := IF([Ephemeral 2] == NULL, NULL, [Ephemeral 2]);

LET $headings       := ARRAY_FIRST($todaysData);

LET $todaysBody     := ARRAY_SKIP($todaysData, 1);
LET $todaysBodySorted := ARRAY_SORT($todaysData, $(item) $item);

// Contract =&gt; Row
LET $todayGroupedByContract := ARRAY_TO_HASH_GROUPED(
  $todaysBodySorted,
  $(_, row) ARRAY_FIRST($row),
  $(_, row) $row
);

LET $groupedByContract := IF (
	// If we don't have yesterdays data, then just use the whole file
	$yesterdaysData == NULL, $todayGroupedByContract,
	(
		LET $yesterdaysBody := ARRAY_SKIP($yesterdaysData, 1);
		LET $yesterdaysBodySorted := ARRAY_SORT($yesterdaysBody, $(item) $item);
		
		// Contract =&gt; Row
		LET $yesterdayGroupedByContract := ARRAY_TO_HASH_GROUPED(
			$yesterdaysBodySorted,
			$(_, row) ARRAY_FIRST($row),
			$(_, row) $row
		);
		
		LET $keysToKeep := ARRAY_WHERE(
			HASH_KEYS($todayGroupedByContract),
			$(i, key) (
				LET $yesterday := HASH_GET($yesterdayGroupedByContract, $key);
				RETURN OR($yesterday == NULL, $yesterday != HASH_GET($todayGroupedByContract, $key))
			)
		);
		
		RETURN HASH_SUBSET($todayGroupedByContract, $keysToKeep)
	)
);

// Contract =&gt; Row
LET $asArray := ARRAY_SELECT(
  HASH_KEYS($groupedByContract),
  $(i, key) HASH_GET($groupedByContract, $key)
);

LET $batchLengh := 10;
LET $batchCount := CEILING(ARRAY_LENGTH($asArray) / $batchLengh);

// Slice =&gt; Row
LET $slices := ARRAY_SELECT(
	RANGE(0, $batchCount),
	$(_, i) (
		// Contract =&gt; Row
		LET $slice := ARRAY_SLICE($asArray, $i + 1, $batchLengh);
		// Returns array of Row with the Contract layer removed (starts from Batch =&gt; Row)
		LET $combinedFromMultipleContracts := ARRAY_SELECTMANY($slice, $(i, item) $item);
		RETURN $combinedFromMultipleContracts
	)
);

RETURN HASH(
  "headings", $headings,
  "data",  $slices,
  "count", $batchCount
)</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Ephemeral 3 := batch data</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Return Value</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH( //this is a common format a lot of tools will understand
  "statusCode", 200
)
</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Email Content</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula>1</LineNumberFormula>
              <Formula>"The .CSV data sent on " &amp; TODAY() &amp; " has been successfully received by the system. The import will begin at 10:00pm (AEST)." </Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Status Code</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET([Return Value], "statusCode")</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Set [Return Value], [Email Content]</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <RaiseLinkedEForm>
          <EFormRef>Integration Data</EFormRef>
          <NewRecordIDFormula></NewRecordIDFormula>
          <NewRecordCountFormula>HASH_GET([Ephemeral 3], "count")</NewRecordCountFormula>
          <MakeChildOfContextRecord>false</MakeChildOfContextRecord>
          <AlternativeParentRecord xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <Attachments>
            <FormulaDrivenCsvFile>
              <CsvFileFormula>ARRAY_CONCAT(
  ARRAY(HASH_GET([Ephemeral 3], "headings")),
  ARRAY_INDEX(HASH_GET([Ephemeral 3], "data"), $count)
)</CsvFileFormula>
              <FilenameTemplate>Batch_{$count}.csv</FilenameTemplate>
            </FormulaDrivenCsvFile>
          </Attachments>
          <AttachmentsFolderTemplate>Input Files</AttachmentsFolderTemplate>
          <PushCreatedRecordIDIntoColumn>Ephemeral 4</PushCreatedRecordIDIntoColumn>
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Integration Workflow</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>"Mildura - Bring PO Data from CIVICA - Purchase Orders"</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Created By</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>"Web Event"</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Return Value</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>[Return Value]</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Data Needs Processing</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>TRUE</Formula>
            </FieldEntry>
          </FieldEntries>
          <Description>Groups data by contract and creates a record per 10 contracts
RecordIDs into [Temp]</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </RaiseLinkedEForm>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Temp</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_MERGE([Temp], HASH("Batch Records", [Ephemeral 4]))</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Merge "Batch Records" into [Temp]</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <Save>
          <WorkflowNotesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <DisplaySuccessMessage>false</DisplaySuccessMessage>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </Save>
        <Notification>
          <AttachRecordViewAsPdf>false</AttachRecordViewAsPdf>
          <SendEmailImmediately>true</SendEmailImmediately>
          <AttachLogo>false</AttachLogo>
          <AttachRecordViewName xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <AttachedRecordViewFilenameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <Attachments />
          <DontSendToCurrentRole>false</DontSendToCurrentRole>
          <Template>
            <ToAddressesTemplate></ToAddressesTemplate>
            <CcAddressesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
            <BccAddressesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
            <ReplyToAddressesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
            <SubjectTemplate>Untitled email</SubjectTemplate>
            <BodyTemplate>Dear user,

{ EBMS_GET_EFORMRECORD_URL([EFormType], [RecordID]) }
Regards</BodyTemplate>
            <IsBodyHtml>false</IsBodyHtml>
            <UseDefaultFrame>true</UseDefaultFrame>
          </Template>
          <LibraryEmailTemplateNameTemplate>Integration Alert</LibraryEmailTemplateNameTemplate>
          <Location>Library</Location>
          <DisplayLogMessages>true</DisplayLogMessages>
          <SendFromTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <Description>Notify of received data</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula> AND(
   HASH_GET([Return Value], "statusCode") = 200,
   ARRAY_LENGTH([Raw]) &gt; 0
)</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </Notification>
      </Tasks>
    </Event>
    <Event>
      <Name>Mildura - Bring PO Data from CIVICA - Purchase Order Receipts</Name>
      <Guid>05862322-b595-4b65-9244-d0043e583cbb</Guid>
      <Description>Scheduled event to create Purchase Order Receipt data from CIVICA/Authority</Description>
      <Tasks>
        <ReadFileToFieldTask>
          <FileGenerator>
            <RecordFile>
              <ResultFilenameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <WholeFolder>true</WholeFolder>
              <TargetFileTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <EFormType xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <EFormTypeTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <PathTemplate>Input Files</PathTemplate>
            </RecordFile>
          </FileGenerator>
          <FileProcessor>
            <CsvFile />
          </FileProcessor>
          <FileIntoField>Ephemeral 1</FileIntoField>
          <Description>Read file into [Ephemeral 1]</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ReadFileToFieldTask>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula></RecordIDFormula>
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 1</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>LET $headers := ARRAY_FIRST([Ephemeral 1]);
LET $rows    := ARRAY_SKIP([Ephemeral 1], 1);

LET $hashes := ARRAY_SELECT( 
	ARRAY_SKIP($rows, 1),  
	$(i, row) (
		LET $withTypes  := ARRAY_SELECT($row, $(i, item) IF(ISNUMBER($item), N($item), $item)); 
		LET $createHash := INDEXES_TO_KEYS($withTypes, $headers); 
		RETURN $createHash 
	)
); 

RETURN $hashes</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>[Ephemeral 1] := CSV content (array of arrays) in [Ephemeral 1] to array of hashes</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <BulkCreateRecords>
          <EFormTypeFormula>"Purchase Order Receipt"</EFormTypeFormula>
          <FieldValuesFormula>//distinct list of Parent Numbers
LET $parentNumbers := ARRAY_DISTINCT(ARRAY_SELECT([Ephemeral 1], $(i, item) HASH_GET($item, "Purchase Order Number")));
LET $parentPO := DB_LOOKUPALL(ARRAY("RecordID", "Purchase Order Number", "Vendor", "Item - Tax Multiplier", "Item - Number"), "Purchase Order", "[LineNumber] FAST_EQUAL_TO 1 AND [Purchase Order Number] IN " &amp; DB_ENCODECONSTANT($parentNumbers));

LET $parentHash := ARRAY_TO_HASH_GROUPED($parentPO, $(k, key) ARRAY_INDEX($key, 2), $(v, value) ARRAY_INDEX($value, 1));
LET $vendorHash := ARRAY_TO_HASH_GROUPED($parentPO, $(k, key) ARRAY_INDEX($key, 2), $(v, value) ARRAY_INDEX($value, 3));
LET $taxMultiplierHash := ARRAY_TO_HASH_GROUPED($parentPO, $(k, key) ARRAY(ARRAY_INDEX($key, 5), ARRAY_INDEX($key, 2)), $(v, value) ARRAY_INDEX($value, 4));

//grouping data based on unique identifier of form e.g. Purchase Order Number of Purchase Order form
LET $grouped := 
		ARRAY_TO_HASH_GROUPED(
			[Ephemeral 1], 
			$(k, key) HASH_GET($key, "Receipt Number"),
			$(v, value) $value		
		);

//get list of unique identifiers e.g. list of PO numbers
LET $keys := ARRAY_WHERE(HASH_KEYS($grouped), $(i, item) AND($item &lt;&gt; "0", $item &lt;&gt; 0));

//for each unique identifier, only get data from required columns then sort by a specific field e.g., LineNumber
LET $requiredData := 
		ARRAY_SELECT($keys, $(k, key)
			LET $receiptNumbers := HASH_GET($grouped, $key);
			LET $data := 
				ARRAY_SELECT(
					$receiptNumbers, $(r, receiptNumber) 
					HASH(
						"Receiver Number",					HASH_GET($receiptNumber, "Receipt Number"),
						"PO Number",						HASH_GET($receiptNumber, "Purchase Order Number"),
						"Vendor ID",						ARRAY_FIRST(HASH_GET($vendorHash, HASH_GET($receiptNumber, "Purchase Order Number"))),
						"Item - Line Number",				IF(HASH_GET($receiptNumber, "Item - Number") == "&lt;NULL&gt;", 0, HASH_GET($receiptNumber, "Item - Number")),
						"Item - Description",			   	HASH_GET($receiptNumber, "Item - Description"),
						"Unit Price",						HASH_GET($receiptNumber, "Item - Unit Price"),
						"Received Amount",					HASH_GET($receiptNumber, "Received Amount"),
					  	"Received Qty",  					HASH_GET($receiptNumber, "Received Amount") / HASH_GET($receiptNumber, "Item - Unit Price"), //HASH_GET($receiptNumber, "Quantity Received"),
						"Item Type",			   			"Quantity",
						"UOM",								HASH_GET($receiptNumber, "Item Type"),
						"Item - Tax Multiplier",			ARRAY_FIRST(HASH_GET($taxMultiplierHash, ARRAY(N(HASH_GET($receiptNumber, "Item - Number")), HASH_GET($receiptNumber, "Purchase Order Number")))),
						"Status",							"Success"
					)
				);
			RETURN ARRAY_SORT($data, $(item) ARRAY_INDEX($item, ARRAY_INDEXOF(HASH_KEYS(ARRAY_FIRST($data)), "Item - Line Number")))
		);
				
//remove any duplicated data then transform into HASH(key, ARRAY(value)) structure. One hash per record to be created					
LET $distinctData := 
		ARRAY_SELECT(
			$requiredData, $(d, data) 
					LET $receiptNumbers := ARRAY_DISTINCT($data);
					LET $columns := ARRAY_DISTINCT(HASH_KEYS(ARRAY_FIRST($receiptNumbers)));
					LET $values := ARRAY_SELECT($columns, $(c, col) ARRAY_SELECT($receiptNumbers, $(r, receipt) HASH_GET($receipt, $col)));
					
					RETURN INDEXES_TO_KEYS($values, $columns)
		);

LET $content := ARRAY_TO_HASH_GROUPED(
					$distinctData, 
					$(k, key) ARRAY_FIRST(HASH_GET($key, "Receiver Number")),
					$(v, value) $value
				);
				
RETURN
	ARRAY_SELECT($keys, $(k, key)
		LET $receiptNumber := ARRAY_FIRST(HASH_GET($grouped, $key));
	  	LET $parent := ARRAY_FIRST(HASH_GET($parentHash, HASH_GET($receiptNumber, "Purchase Order Number")));
		
		RETURN
	  	IF(
		  	ISNULL($parent),
		  
			HASH(
				//Used to search for records that match these values. If found, it will update the record rather than create new records. Structure: HASH("fieldMatch1", "matchValue1", ("fieldMatch2", "matchValue2"), ...)
				"match", 
					HASH(
						"Receiver Number",	HASH_GET($receiptNumber, "Receipt Number"),		
						"PO Number", 		HASH_GET($receiptNumber, "Purchase Order Number") 
					),
				//content of the records to be created. Structure: HASH("field1", ARRAY("value1", "value2"), "field2", ARRAY("valueA", "valueB"), ...)
				"content", ARRAY_FIRST(HASH_GET($content, $key))
			),
		  
		  	HASH(
				//Used to search for records that match these values. If found, it will update the record rather than create new records. Structure: HASH("fieldMatch1", "matchValue1", ("fieldMatch2", "matchValue2"), ...)
				"match", 
					HASH(
						"Receiver Number",	HASH_GET($receiptNumber, "Receipt Number"),		
						"PO Number", 		HASH_GET($receiptNumber, "Purchase Order Number") 
					),
				//content of the records to be created. Structure: HASH("field1", ARRAY("value1", "value2"), "field2", ARRAY("valueA", "valueB"), ...)
				"content", ARRAY_FIRST(HASH_GET($content, $key)),

				//parent record to link the created records to. Structure: ARRAY("EFormType", "RecordID")
				"parent", ARRAY("Purchase Order", $parent)
			)
		)
	 )</FieldValuesFormula>
          <BatchSize>100</BatchSize>
          <ResultsIntoColumn>Ephemeral 3</ResultsIntoColumn>
          <Description>Create Purchase Order Receipt Records (Use [Ephemeral 1]) - Record IDs into [Temp 2]</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </BulkCreateRecords>
        <DisplayMessage>
          <MessageTemplate>PO Receipts Created/Updated</MessageTemplate>
          <MessageType>Notice</MessageType>
          <Description>PO Receipts Created/Updated</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </DisplayMessage>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Email Content</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula>1</LineNumberFormula>
              <Formula>LET $receiverNumbers := 
	ARRAY_DISTINCT(
	  	ARRAY_WHERE(
		  	ARRAY_SELECT([Ephemeral 1], $(i, item) HASH_GET($item, "Receipt Number")),
		  	$(j, jtem) 
		  	AND($jtem &lt;&gt; "0" ,$jtem &lt;&gt; 0)
		)
	);

//Removing this because it could fail if the length is long and also performance
//Am changing the check to 'was an update made' if so then success
//LET $POReceiptNimblex := 
//	DB_LOOKUPALL(
//		"RecordID", 
//		"Purchase Order Receipt", 
//		"[LineNumber] FAST_EQUAL_TO 1 AND [Receiver Number] IN " &amp; DB_ENCODECONSTANT($receiverNumbers)
//	);
	
LET $updatedPOData := ARRAY_LENGTH(HASH_GET([Temp], "Purchase Order Receipt IDs"));
//old, incorrect: HASH_GET(ARRAY_LAST([Ephemeral 1]), "CreatedPOData");

RETURN
 IF(
	OR(
	  //ARRAY_LENGTH($POReceiptNimblex) = ARRAY_LENGTH($updatedPOData),
	  $updatedPOData &gt; 0, 
	  ARRAY_LENGTH($receiverNumbers) &gt; 0
	),
  	"Success! The integration on " &amp; TODAY() &amp; " was successful.",
  	 
    "Warning! There was an error when importing Purchase Order data from CIVICA/Authority to Nimblex on " &amp; TODAY() &amp; "." &amp; NEWLINE() &amp; NEWLINE() &amp; "The .csv file for this import was sent on " &amp; [DateCreated] &amp; "."
)</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Data Processed</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>TRUE</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Data Needs Processing</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>FALSE</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Temp</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_MERGE([Temp], HASH("Purchase Order Receipt IDs", [Ephemeral 3]))</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>PO Data: Check Errors, populate email content, Set Data Processed = TRUE, Data Needs Processing False.</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>HASH_GET([Return Value], "statusCode") = 200</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </ChangeFieldValues>
        <Save>
          <WorkflowNotesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <DisplaySuccessMessage>false</DisplaySuccessMessage>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </Save>
        <TriggerCustomEvent>
          <EventNameTemplate>Update Information</EventNameTemplate>
          <TraceNameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetRecordsFormula>LET $purchaseOrderReceipts := HASH_GET([Temp], "Purchase Order Receipt IDs");
RETURN ARRAY_DISTINCT(ARRAY_SELECT($purchaseOrderReceipts, $(i, item) EBMS_GET_PARENT_RECORD("Purchase Order Receipt", $item)))</TargetRecordsFormula>
          <EventArgumentsFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <ResultIntoColumn xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RetainLastResultOnly>false</RetainLastResultOnly>
          <CredentialToken xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <ShowWarningIfNoMatchingEvent>false</ShowWarningIfNoMatchingEvent>
          <RunInsideDataLayer>false</RunInsideDataLayer>
          <Description>Update PO Records (Using RecordIDs in [Temp 2])</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </TriggerCustomEvent>
        <Notification>
          <AttachRecordViewAsPdf>false</AttachRecordViewAsPdf>
          <SendEmailImmediately>true</SendEmailImmediately>
          <AttachLogo>false</AttachLogo>
          <AttachRecordViewName xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <AttachedRecordViewFilenameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <Attachments />
          <DontSendToCurrentRole>false</DontSendToCurrentRole>
          <Template>
            <ToAddressesTemplate>role:"david.gardner@mildura.vic.gov.au"</ToAddressesTemplate>
            <CcAddressesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
            <BccAddressesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
            <ReplyToAddressesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
            <SubjectTemplate>ERROR: CIVICA Integration Import</SubjectTemplate>
            <BodyTemplate>Dear user,

{[Email Notification]}
  	
Refer to this link: {EBMS_GET_EFORMRECORD_URL([EFormType], [RecordID])}

Regards,
Nimblex</BodyTemplate>
            <IsBodyHtml>false</IsBodyHtml>
            <UseDefaultFrame>true</UseDefaultFrame>
          </Template>
          <LibraryEmailTemplateNameTemplate>Integration Alert</LibraryEmailTemplateNameTemplate>
          <Location>Library</Location>
          <DisplayLogMessages>true</DisplayLogMessages>
          <SendFromTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <Description>Integration Alert</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <FormulaCriterion>
                      <Formula>NOT(ISBLANK([Email Content]))</Formula>
                    </FormulaCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RunOnlyWhen>
        </Notification>
        <DeleteEFormRecordsTask>
          <EFormRef>Integration Data</EFormRef>
          <RecordFilter>
            <GroupingExpression Operator="And">
              <Children>
                <CriterionExpression>
                  <Criterion>
                    <TextCriterion>
                      <Text>(TO_DAY([DateCreated]) &lt; (CURRENT_DATE - 14) AND [Data Processed] = TRUE) OR (TO_DAY([DateCreated]) &lt; (CURRENT_DATE - 56) AND [Data Processed] &lt;&gt; TRUE)</Text>
                    </TextCriterion>
                  </Criterion>
                </CriterionExpression>
              </Children>
            </GroupingExpression>
          </RecordFilter>
          <Description>Delete processed Integration Data records from 2 weeks ago or unprocessed records from 2 months ago.</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </DeleteEFormRecordsTask>
      </Tasks>
    </Event>
    <Event>
      <Name>Mildura - Bring PO Data from CIVICA - Purchase Orders - Scheduled Event</Name>
      <Guid>ea76935d-3f65-4459-8cd4-0eeb16df2446</Guid>
      <Description>Scheduled event to manipulate Purchase Order Data from CIVICA/Authority</Description>
      <Tasks>
        <DisplayMessage>
          <MessageTemplate>Starting CSV manipulation</MessageTemplate>
          <MessageType>Notice</MessageType>
          <Description>Reading file</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </DisplayMessage>
        <ReadFileToFieldTask>
          <FileGenerator>
            <RecordFile>
              <ResultFilenameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <WholeFolder>true</WholeFolder>
              <TargetFileTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <EFormType xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <EFormTypeTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <PathTemplate>Input Files</PathTemplate>
            </RecordFile>
          </FileGenerator>
          <FileProcessor>
            <CsvFile />
          </FileProcessor>
          <FileIntoField>Ephemeral 1</FileIntoField>
          <Description>Read file into [Ephemeral 1]</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ReadFileToFieldTask>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula></RecordIDFormula>
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 1</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula></LineNumberFormula>
              <Formula>LET $headers := ARRAY_FIRST([Ephemeral 1]);
LET $rows    := ARRAY_SKIP([Ephemeral 1], 1);

LET $hashes := ARRAY_SELECT( 
	ARRAY_SKIP($rows, 1),  
	$(i, row) (
		LET $withTypes  := ARRAY_SELECT($row, $(i, item) IF(ISNUMBER($item), N($item), $item)); 
		LET $createHash := INDEXES_TO_KEYS($withTypes, $headers); 
		RETURN $createHash 
	)
); 

RETURN $hashes</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>[Ephemeral 1] := CSV content (array of arrays) in [Ephemeral 1] to array of hashes</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </ChangeFieldValues>
        <DisplayMessage>
          <MessageTemplate>Starting bulk record/update for PO</MessageTemplate>
          <MessageType>Notice</MessageType>
          <Description>Starting bulk record/update for PO</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </DisplayMessage>
        <BulkCreateRecords>
          <EFormTypeFormula>"Purchase Order"</EFormTypeFormula>
          <FieldValuesFormula>//distinct list of Parent Numbers
LET $parentNumbers := ARRAY_DISTINCT(ARRAY_SELECT([Ephemeral 1], $(i, item) HASH_GET($item, "Parent Number")));
LET $parentContracts := DB_LOOKUPALL(ARRAY("RecordID", "Contract Number", "Vendor Name"), "Contract", "[LineNumber] FAST_EQUAL_TO 1 AND [Contract Number] IN " &amp; DB_ENCODECONSTANT($parentNumbers));

LET $parentHash := ARRAY_TO_HASH_GROUPED($parentContracts, $(k, key) ARRAY_INDEX($key, 2), $(v, value) ARRAY_INDEX($value, 1));
LET $vendorHash :=  ARRAY_TO_HASH_GROUPED($parentContracts, $(k, key) ARRAY_INDEX($key, 2), $(v, value) ARRAY_INDEX($value, 3));
LET $taxPercentage := DB_LOOKUP("Default Tax Percentage", "Global Settings", "[RecordID] FAST_EQUAL_TO 1");

//grouping data based on unique identifier of form e.g. Purchase Order Number of Purchase Order form
LET $grouped := 
		ARRAY_TO_HASH_GROUPED(
			[Ephemeral 1], 
			$(k, key) HASH_GET($key, "Purchase Order Number"),
			$(v, value) $value
	);

//get list of unique identifiers e.g. list of PO numbers
LET $keys := HASH_KEYS($grouped);

//for each unique identifier, only get data from required columns then sort by a specific field e.g., LineNumber
LET $requiredData := 
		ARRAY_SELECT($keys, $(k, key) 
			LET $purchaseOrders := HASH_GET($grouped, $key);
		  	LET $sortedPOData := ARRAY_SORT($purchaseOrders, $(item) N(HASH_GET($item, "LineNumber")));
			LET $data :=
				ARRAY_SELECT(
					$sortedPOData, $(p, purchaseOrder) 
						HASH(
							"Status", 						   	HASH_GET($purchaseOrder, "Status"),
							"Parent",							"Contract",
							"Parent Title",					   	HASH_GET($purchaseOrder, "Parent Title"),
							"Parent Number", 				   	HASH_GET($purchaseOrder, "Parent Number"),
							"Purchase Order Number",			HASH_GET($purchaseOrder, "Purchase Order Number"),
						  	"Overall Budget",					HASH_GET($purchaseOrder, "Overall Budget"),
							"Date Required", 				   	D(HASH_GET($purchaseOrder, "Date Required")),
							"Vendor Name",						ARRAY_FIRST(HASH_GET($vendorHash, HASH_GET($purchaseOrder, "Parent Number"))),
							"Notes",      					   	IF(HASH_GET($purchaseOrder, "Notes") == "&lt;NULL&gt;", "", HASH_GET($purchaseOrder, "Notes")),
							"Item - Description",			   	HASH_GET($purchaseOrder, "Item - Description"),
							"Item Type",  						"Quantity",
							"Item - Qty", 					   	HASH_GET($purchaseOrder, "Item - Qty"),
							"Item - Unit Price",			   	HASH_GET($purchaseOrder, "Item - Unit Price"),
							"Tax Percent", 						$taxPercentage,
							"Item - Tax ID",				   	IF((HASH_GET($purchaseOrder, "Item - Unit Price inc Tax") - HASH_GET($purchaseOrder, "Item - Unit Price")) &gt; 0,"Tax", "No Tax"),
							"Posting Account",				   	HASH_GET($purchaseOrder, "Posting Account"),
							"Item - Number",				   	HASH_GET($purchaseOrder, "Item - Number"),
							"Item - Unit Price Receipt", 		HASH_GET($purchaseOrder, "Item - Unit Price Receipt"),
						  	"Contract Number", 				   	HASH_GET($purchaseOrder, "Parent Number"),
						  	"LineNumber",						HASH_GET($purchaseOrder, "LineNumber")
						)
					);
			
			RETURN $data
		);
				
//remove any duplicated data then transform into HASH(key, ARRAY(value)) structure. One hash per record to be created					
LET $distinctData := 
		ARRAY_SELECT(
			$requiredData, $(d, data) 
					LET $purchaseOrderData := ARRAY_DISTINCT($data);
					LET $columns := ARRAY_DISTINCT(HASH_KEYS(ARRAY_FIRST($purchaseOrderData)));
					LET $values := ARRAY_SELECT($columns, $(c, col) ARRAY_SELECT($purchaseOrderData, $(p, po) HASH_GET($po, $col)));
					
					RETURN INDEXES_TO_KEYS($values, $columns)
		);
//group by unique identifier again
LET $content := ARRAY_TO_HASH_GROUPED(
					$distinctData, 
					$(k, key) ARRAY_FIRST(HASH_GET($key, "Purchase Order Number")),
					$(v, value) $value
				);
				
RETURN
  ARRAY_SELECT($keys, $(k, key)
	LET $purchaseOrder := ARRAY_FIRST(HASH_GET($grouped, $key));
	LET $parent := ARRAY_FIRST(HASH_GET($parentHash, HASH_GET($purchaseOrder, "Parent Number")));
	  
	RETURN
	IF(
	  ISNULL($parent),
	  HASH(
			//Used to search for records that match these values. If found, it will update the record rather than create new records. Structure: HASH("fieldMatch1", "matchValue1", ("fieldMatch2", "matchValue2"), ...)
			"match", 
				HASH(
					"Parent Number", HASH_GET($purchaseOrder , "Parent Number"),
					"Purchase Order Number", HASH_GET($purchaseOrder , "Purchase Order Number")
				),
			//content of the records to be created. Structure: HASH("field1", ARRAY("value1", "value2"), "field2", ARRAY("valueA", "valueB"), ...)
			"content", ARRAY_FIRST(HASH_GET($content, $key))
		),
	  HASH(
			//Used to search for records that match these values. If found, it will update the record rather than create new records. Structure: HASH("fieldMatch1", "matchValue1", ("fieldMatch2", "matchValue2"), ...)
			"match", 
				HASH(
					"Parent Number", HASH_GET($purchaseOrder , "Parent Number"),
					"Purchase Order Number", HASH_GET($purchaseOrder , "Purchase Order Number")
				),
			//content of the records to be created. Structure: HASH("field1", ARRAY("value1", "value2"), "field2", ARRAY("valueA", "valueB"), ...)
			"content", ARRAY_FIRST(HASH_GET($content, $key)),
				
			//parent record to link the created records to
			"parent", ARRAY("Contract", $parent)
		)
	)
)</FieldValuesFormula>
          <BatchSize>100</BatchSize>
          <ResultsIntoColumn>Ephemeral 3</ResultsIntoColumn>
          <Description>Create Purchase Order Records (Use [Ephemeral 1]) - Record IDs into [Temp 2]</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </BulkCreateRecords>
        <DisplayMessage>
          <MessageTemplate>POs Created/Updated</MessageTemplate>
          <MessageType>Notice</MessageType>
          <Description>POs Created/Updated</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </DisplayMessage>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Integration Workflow</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>"Mildura - Bring PO Data from CIVICA - Purchase Order Receipts"</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Created By</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>"Scheduled Event"</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Temp</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_MERGE([Temp], HASH("Purchase Order IDs", [Ephemeral 3]))</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Set Integration Workflow to Mildura - Bring PO Data from CIVICA - Purchase Order Receipts</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </ChangeFieldValues>
        <DisplayMessage>
          <MessageTemplate>Flags updated</MessageTemplate>
          <MessageType>Notice</MessageType>
          <Description>Flags updated</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </DisplayMessage>
        <Save>
          <WorkflowNotesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <DisplaySuccessMessage>false</DisplaySuccessMessage>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </Save>
      </Tasks>
    </Event>
    <Event>
      <Name>NTHealth - Get Successful Respondent Data for QTOL</Name>
      <Guid>84ea0186-b2e8-4c07-8e27-d03c637b5dc6</Guid>
      <Description>Triggered by web event, returns data for each awarded respondent through evaluation. Original work item: #17402</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Return Value</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//getting params
LET $params := [Params];
LET $fromDate := HASH_GET($params, "DateFrom");
LET $toDate := HASH_GET($params, "DateTo");
LET $removeDateFilter := HASH_GET($params, "NoDateFilter");
LET $removeBudgetFilter := HASH_GET($params, "NoBudgetFilter");

//build lookup filter
LET $dateFilter := 
IF( 
  AND(TRIM($fromDate) &lt;&gt; "", $fromDate != NULL), 
    "[Date Final Decision Complete] &gt;= " &amp; DB_ENCODECONSTANT(D($fromDate)), 
  "[Date Final Decision Complete] &gt;= " &amp; DB_ENCODECONSTANT(DATEADD("day", -1, NOW()))
) 
&amp; " AND " &amp;  
IF(
  AND(TRIM($toDate) &lt;&gt; "", $toDate != NULL), 
    "[Date Final Decision Complete] &lt; " &amp; DB_ENCODECONSTANT(D($toDate)), 
  "1 = 1"
);

LET $filter := 
IF( 
  $removeDateFilter &lt;&gt; "TRUE", 
    $dateFilter, 
  "1 = 1"
)  &amp; 
IF(
  $removeBudgetFilter &lt;&gt; "TRUE",
	" AND [Budget] &gt;= 15000 AND [Budget] &lt; 100000"
) &amp;
" AND [Respondent Final Decision] = 'Awarded'" &amp; 
" AND [Response Reference Number] IS NOT NULL" &amp;
" AND " &amp;
  "(" &amp;
    "STEP TO PARENT [Procurement]" &amp;
    " ON" &amp;
	  " [To].[Market Approach] FAST_EQUAL_TO 'Public'" &amp;
    " GET COUNT(1)" &amp;
  ") &gt; 0";

//run lookup
LET $data := 
DB_REPORT(
  ARRAY(
	"[Sourcing ID]", 
    
	"[Response Reference Number]",
	
	"STEP TO PARENT [Procurement]" &amp;
	"ON [To].[RecordID] FAST_EQUAL_TO [Procurement Plan ID] " &amp;
	"GET LAST([Regions of Service (Text)])", 
        
	"STEP TO CHILD [Questionnaire]" &amp;
	" ON [To].[Question] FAST_EQUAL_TO 'Is the business a Territory Enterprise (TE)'" &amp;
	" AND [To].[Evaluated Party UUID] = [Respondent UUID]" &amp;
	" AND [To].[Answer] &lt;&gt; ''" &amp;
	" GET MAX([Answer])", 
    
	"STEP TO CHILD [Questionnaire]" &amp;
	" ON [To].[Question] FAST_EQUAL_TO 'Is the business an Aboriginal Business Enterprise (ABE)'" &amp;
	" AND [To].[Evaluated Party UUID] = [Respondent UUID]" &amp;
	" AND [To].[Answer] &lt;&gt; ''" &amp;
	" GET MAX([Answer])",
	
	"[Creator Username]"
  
  ),  
  "Evaluation", 
  $filter
);

//cleaning and formatting
LET $transformed := 
ARRAY_SELECT(
  $data, $(i, item)
  HASH(
	"OpportunityID", ARRAY_INDEX($item, 1),
	"ResponseID", REPLACESUBSTRING("VPR", ARRAY_INDEX($item, 2), ""),
	"Regions", ARRAY_INDEX($item, 3),
	"TerritoryEnterprise", ARRAY_INDEX($item, 4),
	"AboriginalBusinessEnterprise", ARRAY_INDEX($item, 5),
	"Buyer Username", ARRAY_INDEX($item, 6)
  )
);

LET $result :=    
HASH(
  "statusCode", 201,
  "body", JSONENCODE($transformed)
);

RETURN $result</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Status Code</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>HASH_GET([Return Value], "statusCode")</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>Set Return Value</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <Save>
          <WorkflowNotesTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <DisplaySuccessMessage>false</DisplaySuccessMessage>
          <Description>Save so we can attach files</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </Save>
        <AttachFiles>
          <Attachments>
            <TextFile>
              <ContentTemplate>{[Ephemeral 1]}</ContentTemplate>
              <FilenameTemplate>body.txt</FilenameTemplate>
            </TextFile>
          </Attachments>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetRecordsFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetPathTemplate>Result Files</TargetPathTemplate>
          <UpdateTargetRecord>false</UpdateTargetRecord>
          <CredentialToken xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <PushCreatedFilesIntoColumn xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <Description>Attach raw body as a file (From [Ephemeral 1])</Description>
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </AttachFiles>
      </Tasks>
    </Event>
    <Event>
      <Name>PUT Purchase Order Receipts</Name>
      <Guid>98f84d73-65f9-4c8a-824c-7dc6fe1d6dba</Guid>
      <Description>Create or Update - Purchase Order Receipt</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 1</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>ARRAY_TRANSPOSE(
  ARRAY_SELECT(
	[Temp 2], $(i,item)
	
	LET $recordID :=IFERROR(N(HASH_GET($item, "RecordID")), 0);
	
	RETURN
	ARRAY(
	  $recordID,
	  HASH_GET($item, "Receiver Number"),
	  HASH_GET($item, "PO Number")
		)
	)
)</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Ephemeral 2</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//Get the list of recordIDs from the transposed data
LET $recordIDs := ARRAY_DISTINCT(ARRAY_INDEX([Ephemeral 1], 1));
//Sort the data, skip Null and get Purchase Order Numbers
LET $poReceipt := 
ARRAY_SORT(
  ARRAY_DISTINCT(ARRAY_INDEX([Ephemeral 1], 2))
);
//Check for Null
LET $poReceipts := 
IF(
  ARRAY_INDEXOF($poReceipt, NULL) &gt; 0,
  ARRAY_SKIP($poReceipt, 1),
  
  $poReceipt
);  
//This look up is to get all the line data for existing recordIDs and purchase order numbers
LET $setKeys := 
ARRAY(
  "RecordID",
  "LineNumber",
  "Item - Line Number",
  "Item - Description",
  "Item Type",
  "Received Qty",
  "Received Amount",
  "Receiver Number"
);

RETURN 
DB_LOOKUPALL(
  $setKeys,
  "Purchase Order Receipt",
  "[RecordID] IN " &amp; DB_ENCODECONSTANT($recordIDs) &amp; 
  " OR [Receiver Number] IN " &amp; DB_ENCODECONSTANT($poReceipts)
)</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Ephemeral 3</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//Get the list of recordIDs from the transposed data
LET $poNumber := 
ARRAY_SORT(
  ARRAY_DISTINCT(ARRAY_INDEX([Ephemeral 1], 3))
);
//Check for Null
LET $poNumbers := 
IF(
  ARRAY_INDEXOF($poNumber, NULL) &gt; 0,
    ARRAY_SKIP($poNumber, 1),
  
  $poNumber
);  
//This look up is to get all the line data for existing recordIDs and purchase order numbers
LET $setKeys := 
ARRAY(
  "RecordID",
  "Purchase Order Number" 
);

RETURN 
DB_LOOKUPALL(
  $setKeys,
  "Purchase Order",
  "[Purchase Order Number] IN " &amp; DB_ENCODECONSTANT($poNumbers)
)</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Ephemeral 4</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//Group the looked up line data by recordID
LET $existingPors := 
ARRAY_TO_HASH_GROUPED(
  [Ephemeral 2], 
  $(k, key) ARRAY_FIRST($key),
  $(v, value) ARRAY_SKIP($value, 1)
);
//Group the looked up line data by purchase Order Number
LET $existingPoReceipts :=
ARRAY_TO_HASH_GROUPED(
  [Ephemeral 2],
  $(k, key)  ARRAY_LAST($key),
  $(v,value) ARRAY_FIRST($value)
);
//Purchase Order Numbers
LET $poNumbers := 
ARRAY_TO_HASH_GROUPED(
  [Ephemeral 3],
  $(k, key)	 ARRAY_LAST($key),
  $(v,value) ARRAY_FIRST($value)
);
//Store the sorted data in a temporary field
LET $sortedData := [Temp 2];
//Loop through the sorted data for creating final data for processing
LET $finalData  := 
ARRAY_SELECT(
  $sortedData, $(i,pos)
//==========PARAMETERS==========//
//Store the fields from data field
  LET $poNumber    := HASH_GET($pos, "PO Number");
  LET $commentText := HASH_GET($pos, "Comment Text");
  LET $vendorID    := HASH_GET($pos, "Vendor ID");
  LET $receivedDate	  := HASH_GET($pos, "Received Date");
  LET $receiverNumber := HASH_GET($pos, "Receiver Number");
  LET $recordID    := IFERROR(N(HASH_GET($pos, "RecordID")), NULL);
  LET $lineInfos   := HASH_GET($pos, "LineItems");
//==========KEYS==========//
  LET $keys   	:= HASH_KEYS($pos);  
  LET $lineKey  := 
  IF(
	ARRAY_INDEXOF($keys, "LineItems") &gt; 0,
	  ARRAY_SLICE($keys, 1, ARRAY_LENGTH($keys)),
	
	$keys
  );
  
  LET $finalKey := 
  IF(
	ARRAY_INDEXOF($lineKey, "RecordID") = NULL,
	  ARRAY_CONCAT(ARRAY("RecordID"), $lineKey),
	
	$lineKey
  );
//=========Purchase Order Number=======//
  LET $poRec	:= HASH_GET($poNumbers, $poNumber);
  LET $poID		:= ARRAY_FIRST($poRec);
//==========Receiver Number===========//
  LET $rNumberexists:= HASH_GET($existingPoReceipts, $receiverNumber);
  LET $recordIDValue:=  
  IF(
	AND($recordID &lt;&gt; NULL, $recordID &lt;&gt; 0),
	  $recordID,
	
	AND($receiverNumber &lt;&gt; NULL,  $rNumberexists &lt;&gt; NULL),
	  ARRAY_INDEX(ARRAY_INDEX($rNumberexists, 1), 1),
	
	NULL
  );
//==========Existing Purchase Order Receipt===========//
  LET $oldLineData:=  HASH_GET($existingPors, $recordIDValue);
//==========Line Data===========//
LET $lineDatas := 
  ARRAY_SELECT(
	$lineInfos, $(i,lines)
	
	LET $LineNumber :=
		IF(
			HASH_GET($lines, "LineNumber") = NULL,
			  IFERROR(N(HASH_GET($lines, "Item - Line Number")),NULL),
			
			IFERROR(N(HASH_GET($lines, "LineNumber")),NULL)
		);
	
	LET $itemNumber :=
		IF(
			HASH_GET($lines, "Item - Line Number") = NULL,
			  IFERROR(N(HASH_GET($lines, "LineNumber")),NULL),
			
			IFERROR(N(HASH_GET($lines, "Item - Line Number")),NULL)
		);
	
	LET $description 	:= HASH_GET($lines,"Item - Description"); 
	LET $type 			:= HASH_GET($lines,"Item Type");
	LET $qty 			:= IFERROR(N(HASH_GET($lines,"Received Qty")),0);
	LET $amount 		:= IFERROR(N(HASH_GET($lines,"Received Amount")),0);
	
	RETURN
	ARRAY(
	  $LineNumber,	$itemNumber,
	  $description, $type,
	  $qty,			$amount,
	  $price
	  )
  );
//combine, group, sort and transpose the data 
  LET $combineData := 
  IF(
	$oldLineData &lt;&gt; NULL,
	 ARRAY_CONCAT($oldLineData, $lineDatas),
	
	$lineDatas
  );
  
  LET $temp  := 
  ARRAY_GROUP(
	$combineData, $(item)
	ARRAY_FIRST($item)
  );
  
  LET $mergeData := 
  ARRAY_Select(
	$temp, $(i,item)
	ARRAY_LAST(ARRAY_INDEX($item, 2))
  );
 
  LET $transposeData := ARRAY_TRANSPOSE($mergeData);
  LET $lineHash := HASH(
	"LineNumber",			ARRAY_INDEX($transposeData, 1),
	"Item - Line Number",	ARRAY_INDEX($transposeData, 2),
	"Item - Description",	ARRAY_INDEX($transposeData, 3),
	"Item Type",			ARRAY_INDEX($transposeData, 4),
	"Received Qty", 		ARRAY_INDEX($transposeData, 5),
	"Received Amount", 		ARRAY_INDEX($transposeData, 6)
  );
  
  LET $otherValues := 
  IF(
	$recordIDValue = NULL,
	  HASH(
	    "Status", "Success",
		"Parent", $poID
	  ),
	
	HASH("Parent", $poID)
	
	);

  LET $valueHash :=
  HASH(
	"RecordID",					$recordIDValue,
	"Receiver Number", 			$receiverNumber,
	"PO Number", 				$poNumber,
	"Received Date", 			$receivedDate,
	"Vendor ID", 				$vendorID,
	"Comment Text", 			$commentText
  );
  LET $recordValues := HASH_SUBSET($valueHash, $finalKey);

RETURN
IF(
  ARRAY_INDEXOF($keys, "LineItems") &gt; 0,
    HASH_MERGE($recordValues, $lineHash,$otherValues),
  
  HASH_MERGE($recordValues,$otherValues)
 )
);

RETURN
$finalData
</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Ephemeral 1</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>ARRAY_DISTINCT(ARRAY_SELECT(
  [Ephemeral 3],
  $(i,item) 
  ARRAY_FIRST($item)
))</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Ephemeral 2</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>NULL</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>This task will 
- Look up data from Purchase Order Receipt
- Will construct the data to be imported or created</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </ChangeFieldValues>
        <BulkCreateRecords>
          <EFormTypeFormula>"Purchase Order Receipt"</EFormTypeFormula>
          <FieldValuesFormula>//Get the ready to process data from temporary field
LET $data := [Ephemeral 4];

//Return the matched RecordID and contents for each individual record
RETURN
ARRAY_SELECT(
  $data, $(i,item)
  
  LET $keys:= 
  ARRAY_SLICE(
	HASH_KEYS($item), 2, ARRAY_LENGTH(HASH_KEYS($item))-2
  );
  
  RETURN
  IF(
	HASH_GET($item, "Parent") = NULL,
	HASH(
	  "match",
	  HASH("RecordID", HASH_GET($item, "RecordID")),
	  
	  "content",
	  HASH_SUBSET($item, $keys)
	),
	
	HASH(
	  "match",
	  HASH("RecordID", HASH_GET($item, "RecordID")),
	  
	  "content",
	  HASH_SUBSET($item, $keys),
	  
	  "parent",
	  ARRAY("Purchase Order", HASH_GET($item, "Parent"))
	)
  )
)</FieldValuesFormula>
          <BatchSize>100</BatchSize>
          <LogImport>false</LogImport>
          <ResultsIntoColumn>Ephemeral 2</ResultsIntoColumn>
          <Description>This task will create/update purchase order receipts records</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </BulkCreateRecords>
        <TriggerCustomEvent>
          <EventNameTemplate>Update Information</EventNameTemplate>
          <TraceNameTemplate xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <TargetRecordsFormula>LET $temp := [Ephemeral 1];

RETURN
ARRAY_SELECT(
 $temp,
 $(i,item)
 ARRAY("Purchase Order", $item)
 )</TargetRecordsFormula>
          <EventArgumentsFormula></EventArgumentsFormula>
          <ResultIntoColumn xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RetainLastResultOnly>false</RetainLastResultOnly>
          <CredentialToken xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <ShowWarningIfNoMatchingEvent>false</ShowWarningIfNoMatchingEvent>
          <RunInsideDataLayer>false</RunInsideDataLayer>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </TriggerCustomEvent>
      </Tasks>
    </Event>
    <Event>
      <Name>PUT Purchase Orders</Name>
      <Guid>19a4cb0c-e598-4ddf-a180-573964e78d62</Guid>
      <Description>Create or Update - Purchase Order</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 1</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//Loop through the request get an array of all the recordIDs, Purchase order numbers, VendorIDs, Cotract Numbers
//Transpose data for further processing
ARRAY_TRANSPOSE(
  ARRAY_SELECT(
	[Temp 2], $(i,item)
	
	LET $recordID := IFERROR(N(HASH_GET($item, "RecordID")), 0);
	
	RETURN
	ARRAY(
	  $recordID,
	  HASH_GET($item, "Purchase Order Number"),
	  HASH_GET($item, "Vendor ID"),
	  HASH_GET($item, "Contract Number")
		)
	)
)</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Ephemeral 2</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//Get the list of record IDs from the transposed data
LET $recordIDs := ARRAY_DISTINCT(ARRAY_INDEX([Ephemeral 1], 1));
//Sort the data, skip Null and get Purchase Order Numbers
LET $poNumber  :=
ARRAY_SORT(
  ARRAY_DISTINCT(ARRAY_INDEX([Ephemeral 1], 2))
);
//Check for NULL
LET $poNumbers := 
IF(
  ARRAY_INDEXOF($poNumber, NULL) &gt; 0,
   ARRAY_SKIP($poNumber, 1),
  
  $poNumber
);  
//This look up is to get all the line data for existing recordIDs and purchase order numbers
LET $setKeys := 
ARRAY(
  "RecordID",
  "LineNumber",
  "Item - Number",
  "Item Type",
  "Item - Qty",
  "Item - Unit Price",
  "Item - Tax ID",
  "Item - Description",
  "Posting Account", 
  "Purchase Order Number"
);

RETURN
DB_LOOKUPALL(
  $setKeys,
  "Purchase Order",
  "[RecordID] IN " &amp; DB_ENCODECONSTANT($recordIDs) &amp; 
  " OR [Purchase Order Number] IN " &amp; DB_ENCODECONSTANT($poNumbers)
)</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Ephemeral 3</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>LET $vendorID  :=
ARRAY_SORT(
  ARRAY_DISTINCT(ARRAY_INDEX([Ephemeral 1], 3))
);
//Check for Null
LET $vendorIDs := 
IF(
  ARRAY_INDEXOF($vendorID, NULL) &gt; 0,
    ARRAY_SKIP($vendorID, 1),
  
  $vendorID
); 
//Look up data to get all the recordIDs for all the available vendor IDs
LET $getData   := 
DB_LOOKUPALL(
  ARRAY(
	"Vendor ID",
	"RecordID",
	"Company Name"
  ),
  "Vendor",
  "[LineNumber] FAST_EQUAL_TO 1 AND [Vendor ID] IN " &amp; DB_ENCODECONSTANT($vendorIDs)
);
//return array of all vendorIDs and its recordID
RETURN
ARRAY_TO_HASH_GROUPED(
  $getData,
  $(k, key)	  ARRAY_FIRST($key),
  $(v, value) ARRAY_SKIP($value,1)
)
</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Ephemeral 4</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//Get list of all the contractIDs from transpose data
LET $contractID :=
ARRAY_SORT(
  ARRAY_DISTINCT(ARRAY_INDEX([Ephemeral 1], 4))
);
//Check for Null
LET $contractIDs:= 
IF(
  ARRAY_INDEXOF($contractID, NULL) &gt; 0,
    ARRAY_SKIP($contractID, 1),
  
  $contractID
); 
//Look up data to get all the recordIDs for all the available contract numbers
LET $getData	:= 
DB_LOOKUPALL(
  ARRAY(
	"RecordID",
	"Contract Number"
  ),
  "Contract", 
  "[LineNumber] FAST_EQUAL_TO 1 AND [Contract Number] IN " &amp; DB_ENCODECONSTANT($contractIDs)
);
//return array of all Contract numbers and its recordID
RETURN
ARRAY_TO_HASH_GROUPED(
  $getData,
  $(k, key)   ARRAY_LAST($key),
  $(v, value) ARRAY_FIRST($value)
)</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Ephemeral 1</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>//Group the looked up line data by recordID
LET $existingPos :=
ARRAY_TO_HASH_GROUPED(
  [Ephemeral 2],
  $(k, key)   ARRAY_FIRST($key),
  $(v, value) ARRAY_SKIP($value, 1)
);
//Group the looked up line data by purchase Order Number
LET $existingPoNumbers :=
ARRAY_TO_HASH_GROUPED(
  [Ephemeral 2],
  $(k, key)  ARRAY_LAST($key),
  $(v,value) ARRAY_FIRST($value)
);
//Group the looked up data by Vendor ID
LET $vendorIDs   := [Ephemeral 3];
//Group the looked up data by Contract Numbers 
LET $contractIDs := [Ephemeral 4];
//Store the sorted data in a temporary field
LET $sortedData  :=  [Temp 2];
//Loop through the sorted data for creating final data for processing
LET $finalData := 
ARRAY_SELECT(
  $sortedData, $(i,pos)
  //==========PARAMETERS==========//
  //Store the fields from data field
  LET $recordID  := IFERROR(N(HASH_GET($pos, "RecordID")), NULL);
  LET $approved  := HASH_GET($pos, "Approved Date");
  LET $vendorID  := HASH_GET($pos, "Vendor ID");  
  LET $lineInfos := HASH_GET($pos, "LineItems");
  LET $purchaseOrderDesc   := HASH_GET($pos, "Description");  
  LET $contractNumber      := HASH_GET($pos, "Contract Number");
  LET $purchaseOrderNumber := HASH_GET($pos, "Purchase Order Number");  
  //==========KEYS==========//  
  //Get Keys from data set, check if line item and record id exits
  //Remove line item if it exists and add record ID if it does not 
  LET $keys     := HASH_KEYS($pos);
  LET $lineKey  := 
  IF(
	ARRAY_INDEXOF($keys, "LineItems") &gt; 0,
	  ARRAY_SLICE($keys, 1, ARRAY_LENGTH($keys)),
	
	$keys
  );
  
  LET $finalKey := 
  IF(
	ARRAY_INDEXOF($lineKey, "RecordID") = NULL,
	  ARRAY_CONCAT(ARRAY("RecordID"), $lineKey),
	
	$lineKey
  );
  //==========CONTRACT &amp; VENDOR INFO===========//   
  //Get contract and Vendor IDs
  LET $contractRec   := HASH_GET($contractIDs, $contractNumber);
  LET $contractRecID := ARRAY_FIRST($contractRec);
  LET $vendorRec     := HASH_GET($VendorIDs, $vendorID);
  LET $vendorRecordID:= ARRAY_FIRST($vendorRec);
  LET $vendorName	 := ARRAY_LAST($vendorRec);
  //===========RECORD ID==========// 
  LET $poNumData	:= HASH_GET($existingPoNumbers, $purchaseOrderNumber);
  LET $recordIDValue:=  
  IF(
	AND($recordID &lt;&gt; NULL, $recordID &lt;&gt; 0),
	  $recordID,
	
	AND($purchaseOrderNumber &lt;&gt; NULL, $poNumData &lt;&gt; NULL),
	  ARRAY_INDEX(ARRAY_INDEX($poNumData, 1), 1),
	
	NULL
  );
  //==========EXISTING PURCHASE ORDER==========//
  LET $exLineData:= HASH_GET($existingPos, $recordIDValue);
  //===========LINE DATA==========//  
  //Structure the line data and convert any values to number if required
  LET $lineDatas := 
  ARRAY_SELECT(
	$lineInfos, $(i,lines)
	
	LET $LineNumber :=
		IF(
			HASH_GET($lines, "LineNumber") = NULL,
			  IFERROR(N(HASH_GET($lines, "Item - Number")),NULL),
			
			IFERROR(N(HASH_GET($lines, "LineNumber")),NULL)
		);
	
	LET $itemNumber :=
		IF(
			HASH_GET($lines, "Item - Number") = NULL,
			  IFERROR(N(HASH_GET($lines, "LineNumber")),NULL),
			
			IFERROR(N(HASH_GET($lines, "Item - Number")),NULL)
		);
	
	LET $type 			:= HASH_GET($lines,"Item Type");
	LET $qty 			:= IFERROR(N(HASH_GET($lines,"Item - Qty")),0);
	LET $unitPrice 		:= IFERROR(N(HASH_GET($lines,"Item - Unit Price")),0);
	LET $taxID 			:= HASH_GET($lines,"Item - Tax ID");
	LET $description	:= HASH_GET($lines,"Item - Description"); 
	LET $pAccount 		:= HASH_GET($lines,"Posting Account");
	
	RETURN
	ARRAY(
	  $LineNumber,	$itemNumber,
	  $type,		$qty,
	  $unitPrice,	$taxID,
	  $description, $pAccount
	  )
  );
  //combine, group, sort and transpose the data 
  LET $combineData := 
  IF(
	$exLineData &lt;&gt; NULL, 
	ARRAY_CONCAT($exLineData, $lineDatas),
	
	$lineDatas
  );
  //Group the combined data by line number  
  LET $temp  := 
  ARRAY_GROUP(
	$combineData, $(item)
	ARRAY_FIRST($item)
  );
  //Get the last item for each line array 
  LET $mergeData := 
  ARRAY_Select(
	$temp, $(i,item)
	ARRAY_LAST(ARRAY_INDEX($item, 2))
  );
  
  LET $transposeData := ARRAY_TRANSPOSE($mergeData);
  //Build the hash for import
  LET $lineHash := 
  HASH(
	"LineNumber", 			ARRAY_INDEX($transposeData, 1),
	"Item - Number",		ARRAY_INDEX($transposeData, 2),
	"Item Type", 			ARRAY_INDEX($transposeData, 3),
	"Item - Qty", 			ARRAY_INDEX($transposeData, 4),
	"Item - Unit Price",	ARRAY_INDEX($transposeData, 5),
	"Item - Tax ID", 		ARRAY_INDEX($transposeData, 6),
	"Item - Description",	ARRAY_INDEX($transposeData, 7),
	"Posting Account", 		ARRAY_INDEX($transposeData, 8)
  );
  
  LET $otherValues :=
  HASH(
	"Vendor",		$vendorRecordID,
  	"Vendor Name", 	$vendorName,
	"Status", 		"Approved",
  	"Parent", 		$contractRecID
);
  
  LET $valueHash :=
  HASH(
	"RecordID", 				$recordIDValue,
	"Purchase Order Number",	$purchaseOrderNumber,
	"Description", 				$purchaseOrderDesc,
	"Contract Number", 			$contractNumber,
	"Vendor ID", 				$vendorID,
	"Approved Date", 			$approved
  );
  
  LET $recordValues := HASH_SUBSET($valueHash, $finalKey);
  
  RETURN
  IF(
	ARRAY_INDEXOF($keys, "LineItems") &gt; 0,
  	  HASH_MERGE($recordValues, $lineHash, $otherValues),
	
	HASH_MERGE($recordValues, $otherValues)
  )
);

RETURN 
$finalData</Formula>
            </FieldEntry>
            <FieldEntry>
              <ColumnName>Ephemeral 2</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>NULL</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description>This task will 
- Look up data from Purchase Order, Contract and Vendor 
- Will construct the data to be imported or created</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </ChangeFieldValues>
        <BulkCreateRecords>
          <EFormTypeFormula>"Purchase Order"</EFormTypeFormula>
          <FieldValuesFormula>//Get the ready to process data from temporary field
LET $data := [Ephemeral 1];

//Return the matched RecordID and contents for each individual record
RETURN
ARRAY_SELECT(
  $data, $(i,item)
  
  LET $keys:= 
  ARRAY_SLICE(
	HASH_KEYS($item), 2, ARRAY_LENGTH(HASH_KEYS($item))-2
  );
  
  RETURN
  IF(
	HASH_GET($item, "Parent") = NULL,
	HASH(
	  "match",
	  HASH("RecordID", HASH_GET($item, "RecordID")),
	  
	  "content",
	  HASH_SUBSET($item, $keys)
	),
	
	HASH(
	  "match",
	  HASH("RecordID", HASH_GET($item, "RecordID")),
	  
	  "content",
	  HASH_SUBSET($item, $keys),
	  
	  "parent",
	  ARRAY("Contract", HASH_GET($item, "Parent"))
	)
  )
)</FieldValuesFormula>
          <BatchSize>100</BatchSize>
          <LogImport>false</LogImport>
          <ResultsIntoColumn>Ephemeral 2</ResultsIntoColumn>
          <Description>This task will create/update purchase order records</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </BulkCreateRecords>
      </Tasks>
    </Event>
    <Event>
      <Name>PUT Vendors</Name>
      <Guid>a1174172-eec6-4fd1-a05b-d98430906975</Guid>
      <Description>Web Event task to create and update vendor records</Description>
      <Tasks>
        <ChangeFieldValues>
          <EFormRef xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RecordIDFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <FieldEntries>
            <FieldEntry>
              <ColumnName>Ephemeral 2</ColumnName>
              <AssignWholeColumn>false</AssignWholeColumn>
              <LineNumberFormula xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
              <Formula>NULL</Formula>
            </FieldEntry>
          </FieldEntries>
          <UpdateRecordFormulas>false</UpdateRecordFormulas>
          <Description xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
          <RunOnlyWhen xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
        </ChangeFieldValues>
        <BulkCreateRecords>
          <EFormTypeFormula>"Vendor"</EFormTypeFormula>
          <FieldValuesFormula>//JSONDECODE the request for processing
LET $data := [Temp 2];
//Return the matched RecordID and contents for each individual record
//If No match found, new record will be created
RETURN
ARRAY_SELECT(
  $data, $(i,item)
  //Convert record Id, if any error, pass null value
  LET $id := IFERROR(N(HASH_GET($item, "RecordID")),NULL);
  //Get the index of recordID
  LET $IDkey := ARRAY_INDEXOF(HASH_KEYS($item), "RecordID");
  //If the key exists, remove the key and create a subset
  LET $content :=
  IF(
	$IDkey = 1,
	  HASH_SUBSET($item,ARRAY_SKIP(HASH_KEYS($item),1)),
	
	$item);
  //Match, update or create record
  RETURN
  HASH(
	"match", HASH("RecordID", $id ),
	"content", HASH_MERGE($content, HASH("Vendor Registered", TRUE))
	)
)</FieldValuesFormula>
          <BatchSize>100</BatchSize>
          <LogImport>false</LogImport>
          <ResultsIntoColumn>Ephemeral 2</ResultsIntoColumn>
          <Description>Convert recordID and bulk create/update records</Description>
          <RunOnlyWhen>
            <GroupingExpression Operator="And">
              <Children />
            </GroupingExpression>
          </RunOnlyWhen>
        </BulkCreateRecords>
      </Tasks>
    </Event>
  </CustomEvents>
</EForm>